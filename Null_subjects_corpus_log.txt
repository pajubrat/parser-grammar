

\========================================================================
# 1
['mina', 'ihailen', 'Merjaa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "mina" contains multiple morphemes ['$hum', '$def', '$1p', '$sg', '$nom', '$D', 'mina-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

7.

		Consume "mina"

		D + mina
			Filtering out impossible merge sites...
			Sink "mina" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mina]
			=D{N}

8.
		Next word "ihailen" contains multiple morphemes ['$[-n]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mina" from D and created [D mina]
					Reconstructing head movement for D{N}.
					Extracted head "mina" from D and created [D mina]
					D was opened into [D mina].
				Feature processing:
				Floater movement reconstruction:
					= [D mina]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D mina] PRO.T/fin]

10.

		Consume "v"

		[[D mina] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D mina] PRO.T/fin{v}]

11.

		Consume "ihaile-"

		[[D mina] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[D mina] PRO.T/fin{v,V}]

12.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[D mina] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D mina] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D mina] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D mina] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[D mina] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D mina] PRO.T/fin{v,V}]

18.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D mina> [T/fin [<D mina> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D mina] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D mina] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D mina] [PRO.T/fin{v,V} D]]

19.

		Consume "Merja-"

		[[D mina] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D mina] [PRO.T/fin{v,V} D{N}]]

20.
	>>>	Trying candidate parse [[D mina] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D mina] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D mina] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D mina] [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]
					Extracted head "Merja-" from D and created [[D mina] [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
						<D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<D mina>:3 [PRO.T/fin [<DP>:3 [PRO.v [PRO.ihaile- [D Merja-]]]]]]
					= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:3.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:3.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from <DP>:3.
			= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D mina>:3 [phi.T/fin [<DP>:3 [PRO.v [PRO.ihaile- [D Merja-]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. <D mina> 3. T/fin 4. <D mina> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ihaile-([D Merja-])', 'PRO.v(<D mina>)']
!--->		Tests passed (with 20/176 operations) <------------------------------------
		Solution:
		[<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]
		Grammar: [<D mina>:1 [phi.T/fin [<DP>:1 [PRO.v [PRO.ihaile- [D Merja-]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
mina: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 2
['sina', 'ihailet', 'Merjaa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "sina" contains multiple morphemes ['$hum', '$def', '$2p', '$sg', '$nom', '$D', 'sina-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$2p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:2'] into working memory.

		Consume "$sg"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

7.

		Consume "sina"

		D + sina
			Filtering out impossible merge sites...
			Sink "sina" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*sina]
			=D{N}

8.
		Next word "ihailet" contains multiple morphemes ['$[-t]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "sina" from D and created [D sina]
					Reconstructing head movement for D{N}.
					Extracted head "sina" from D and created [D sina]
					D was opened into [D sina].
				Feature processing:
				Floater movement reconstruction:
					= [D sina]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D sina] PRO.T/fin]

10.

		Consume "v"

		[[D sina] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D sina] PRO.T/fin{v}]

11.

		Consume "ihaile-"

		[[D sina] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[D sina] PRO.T/fin{v,V}]

12.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[D sina] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D sina] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D sina] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D sina] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[D sina] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D sina] PRO.T/fin{v,V}]

18.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D sina] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D sina> [T/fin [<D sina> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D sina] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D sina] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D sina] [PRO.T/fin{v,V} D]]

19.

		Consume "Merja-"

		[[D sina] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D sina] [PRO.T/fin{v,V} D{N}]]

20.
	>>>	Trying candidate parse [[D sina] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D sina] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D sina] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D sina] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D sina] [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]
					Extracted head "Merja-" from D and created [[D sina] [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D sina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D sina]
						<D sina> was made an adjunct.
						Floater <D sina> dropped.
						 = [<D sina>:6 [PRO.T/fin [<DP>:6 [PRO.v [PRO.ihaile- [D Merja-]]]]]]
					= [<D sina> [T/fin [<D sina> [v [ihaile- [D Merja-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:6.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:6.
					phi.T/fin acquired PHI:PER:2 by phi-Agree from <DP>:6.
			= [<D sina> [T/fin [<D sina> [v [ihaile- [D Merja-]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D sina>:6 [phi.T/fin [<DP>:6 [PRO.v [PRO.ihaile- [D Merja-]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D sina>    (alternatives: 2. T/fin 3. <D sina> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. <D sina> 3. T/fin 4. <D sina> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ihaile-([D Merja-])', 'PRO.v(<D sina>)']
!--->		Tests passed (with 20/176 operations) <------------------------------------
		Solution:
		[<D sina> [T/fin [<D sina> [v [ihaile- [D Merja-]]]]]]
		Grammar: [<D sina>:1 [phi.T/fin [<DP>:1 [PRO.v [PRO.ihaile- [D Merja-]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'VAL']
sina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:sina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
sina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:sina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'VAL']
sina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:sina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
sina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:sina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
sina: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 3
['han', 'ihailee', 'Merjaa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "han" contains multiple morphemes ['$hum', '$def', '$3p', '$sg', '$nom', '$D', 'han-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

7.

		Consume "han"

		D + han
			Filtering out impossible merge sites...
			Sink "han" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*han]
			=D{N}

8.
		Next word "ihailee" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "han" from D and created [D han]
					Reconstructing head movement for D{N}.
					Extracted head "han" from D and created [D han]
					D was opened into [D han].
				Feature processing:
				Floater movement reconstruction:
					= [D han]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D han] PRO.T/fin]

10.

		Consume "v"

		[[D han] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D han] PRO.T/fin{v}]

11.

		Consume "ihaile-"

		[[D han] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[D han] PRO.T/fin{v,V}]

12.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[D han] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D han] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D han] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D han] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[D han] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D han] PRO.T/fin{v,V}]

18.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D han] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D han> [T/fin [<D han> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D han] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D han] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D han] [PRO.T/fin{v,V} D]]

19.

		Consume "Merja-"

		[[D han] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D han] [PRO.T/fin{v,V} D{N}]]

20.
	>>>	Trying candidate parse [[D han] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D han] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D han] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D han] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D han] [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]
					Extracted head "Merja-" from D and created [[D han] [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D han] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D han]
						<D han> was made an adjunct.
						Floater <D han> dropped.
						 = [<D han>:9 [PRO.T/fin [<DP>:9 [PRO.v [PRO.ihaile- [D Merja-]]]]]]
					= [<D han> [T/fin [<D han> [v [ihaile- [D Merja-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:9.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:9.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:9.
			= [<D han> [T/fin [<D han> [v [ihaile- [D Merja-]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D han>:9 [phi.T/fin [<DP>:9 [PRO.v [PRO.ihaile- [D Merja-]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D han>    (alternatives: 2. T/fin 3. <D han> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. <D han> 3. T/fin 4. <D han> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ihaile-([D Merja-])', 'PRO.v(<D han>)']
!--->		Tests passed (with 20/176 operations) <------------------------------------
		Solution:
		[<D han> [T/fin [<D han> [v [ihaile- [D Merja-]]]]]]
		Grammar: [<D han>:1 [phi.T/fin [<DP>:1 [PRO.v [PRO.ihaile- [D Merja-]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
han: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 4
['me', 'ihailemme', 'Merjaa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "me" contains multiple morphemes ['$hum', '$def', '$1p', '$pl', '$nom', '$D', 'me-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:1'] into working memory.

		Consume "$pl"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:PL'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

7.

		Consume "me"

		D + me
			Filtering out impossible merge sites...
			Sink "me" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*me]
			=D{N}

8.
		Next word "ihailemme" contains multiple morphemes ['$[-mme]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "me" from D and created [D me]
					Reconstructing head movement for D{N}.
					Extracted head "me" from D and created [D me]
					D was opened into [D me].
				Feature processing:
				Floater movement reconstruction:
					= [D me]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D me] PRO.T/fin]

10.

		Consume "v"

		[[D me] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D me] PRO.T/fin{v}]

11.

		Consume "ihaile-"

		[[D me] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[D me] PRO.T/fin{v,V}]

12.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[D me] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D me] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D me] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D me] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[D me] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D me] PRO.T/fin{v,V}]

18.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D me] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D me> [T/fin [<D me> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D me] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D me] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D me] [PRO.T/fin{v,V} D]]

19.

		Consume "Merja-"

		[[D me] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D me] [PRO.T/fin{v,V} D{N}]]

20.
	>>>	Trying candidate parse [[D me] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D me] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D me] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D me] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D me] [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]
					Extracted head "Merja-" from D and created [[D me] [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D me] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D me]
						<D me> was made an adjunct.
						Floater <D me> dropped.
						 = [<D me>:12 [PRO.T/fin [<DP>:12 [PRO.v [PRO.ihaile- [D Merja-]]]]]]
					= [<D me> [T/fin [<D me> [v [ihaile- [D Merja-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:12.
					phi.T/fin acquired PHI:NUM:PL by phi-Agree from <DP>:12.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from <DP>:12.
			= [<D me> [T/fin [<D me> [v [ihaile- [D Merja-]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D me>:12 [phi.T/fin [<DP>:12 [PRO.v [PRO.ihaile- [D Merja-]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D me>    (alternatives: 2. T/fin 3. <D me> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. <D me> 3. T/fin 4. <D me> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ihaile-([D Merja-])', 'PRO.v(<D me>)']
!--->		Tests passed (with 20/176 operations) <------------------------------------
		Solution:
		[<D me> [T/fin [<D me> [v [ihaile- [D Merja-]]]]]]
		Grammar: [<D me>:1 [phi.T/fin [<DP>:1 [PRO.v [PRO.ihaile- [D Merja-]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
me:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:we', 'PF:me', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
me:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:we', 'PF:me', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
me:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:we', 'PF:me', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
me:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:we', 'PF:me', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
me: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 5
['te', 'ihailette', 'Merjaa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "te" contains multiple morphemes ['$hum', '$def', '$2p', '$pl', '$nom', '$D', 'te-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$2p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:2'] into working memory.

		Consume "$pl"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:PL'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

7.

		Consume "te"

		D + te
			Filtering out impossible merge sites...
			Sink "te" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*te]
			=D{N}

8.
		Next word "ihailette" contains multiple morphemes ['$[-tte]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "te" from D and created [D te]
					Reconstructing head movement for D{N}.
					Extracted head "te" from D and created [D te]
					D was opened into [D te].
				Feature processing:
				Floater movement reconstruction:
					= [D te]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D te] PRO.T/fin]

10.

		Consume "v"

		[[D te] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D te] PRO.T/fin{v}]

11.

		Consume "ihaile-"

		[[D te] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[D te] PRO.T/fin{v,V}]

12.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[D te] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D te] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D te] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D te] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[D te] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D te] PRO.T/fin{v,V}]

18.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D te] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D te> [T/fin [<D te> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D te] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D te] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D te] [PRO.T/fin{v,V} D]]

19.

		Consume "Merja-"

		[[D te] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D te] [PRO.T/fin{v,V} D{N}]]

20.
	>>>	Trying candidate parse [[D te] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D te] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D te] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D te] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D te] [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]
					Extracted head "Merja-" from D and created [[D te] [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D te] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D te]
						<D te> was made an adjunct.
						Floater <D te> dropped.
						 = [<D te>:15 [PRO.T/fin [<DP>:15 [PRO.v [PRO.ihaile- [D Merja-]]]]]]
					= [<D te> [T/fin [<D te> [v [ihaile- [D Merja-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:15.
					phi.T/fin acquired PHI:NUM:PL by phi-Agree from <DP>:15.
					phi.T/fin acquired PHI:PER:2 by phi-Agree from <DP>:15.
			= [<D te> [T/fin [<D te> [v [ihaile- [D Merja-]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D te>:15 [phi.T/fin [<DP>:15 [PRO.v [PRO.ihaile- [D Merja-]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D te>    (alternatives: 2. T/fin 3. <D te> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. <D te> 3. T/fin 4. <D te> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ihaile-([D Merja-])', 'PRO.v(<D te>)']
!--->		Tests passed (with 20/176 operations) <------------------------------------
		Solution:
		[<D te> [T/fin [<D te> [v [ihaile- [D Merja-]]]]]]
		Grammar: [<D te>:1 [phi.T/fin [<DP>:1 [PRO.v [PRO.ihaile- [D Merja-]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'VAL']
te:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:te', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
te:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:te', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'VAL']
te:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:te', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
te:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:te', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
te: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 6
['he_FI', 'ihailevat', 'Merjaa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "he_FI" contains multiple morphemes ['$hum', '$def', '$3p', '$pl', '$nom', '$D', 'he-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$pl"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:PL'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

7.
		Ambiguous lexical item "he-" detected.

		Consume "he"

		D + he
			Filtering out impossible merge sites...
			Sink "he" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*he]
			=D{N}

8.
		Next word "ihailevat" contains multiple morphemes ['$[-vat]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "he" from D and created [D he]
					Reconstructing head movement for D{N}.
					Extracted head "he" from D and created [D he]
					D was opened into [D he].
				Feature processing:
				Floater movement reconstruction:
					= [D he]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D he] PRO.T/fin]

10.

		Consume "v"

		[[D he] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D he] PRO.T/fin{v}]

11.

		Consume "ihaile-"

		[[D he] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[D he] PRO.T/fin{v,V}]

12.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[D he] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D he] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D he] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D he] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[D he] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D he] PRO.T/fin{v,V}]

18.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D he] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D he> [T/fin [<D he> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D he] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D he] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D he] [PRO.T/fin{v,V} D]]

19.

		Consume "Merja-"

		[[D he] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D he] [PRO.T/fin{v,V} D{N}]]

20.
	>>>	Trying candidate parse [[D he] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D he] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D he] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D he] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D he] [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]
					Extracted head "Merja-" from D and created [[D he] [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D he] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D he]
						<D he> was made an adjunct.
						Floater <D he> dropped.
						 = [<D he>:18 [PRO.T/fin [<DP>:18 [PRO.v [PRO.ihaile- [D Merja-]]]]]]
					= [<D he> [T/fin [<D he> [v [ihaile- [D Merja-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:18.
					phi.T/fin acquired PHI:NUM:PL by phi-Agree from <DP>:18.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:18.
			= [<D he> [T/fin [<D he> [v [ihaile- [D Merja-]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D he>:18 [phi.T/fin [<DP>:18 [PRO.v [PRO.ihaile- [D Merja-]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D he>    (alternatives: 2. T/fin 3. <D he> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. <D he> 3. T/fin 4. <D he> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ihaile-([D Merja-])', 'PRO.v(<D he>)']
!--->		Tests passed (with 20/177 operations) <------------------------------------
		Solution:
		[<D he> [T/fin [<D he> [v [ihaile- [D Merja-]]]]]]
		Grammar: [<D he>:1 [phi.T/fin [<DP>:1 [PRO.v [PRO.ihaile- [D Merja-]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
he: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"


		Adding inflectional features ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] to he
		= ['-', '-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/N/PHI/PHI', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A', 'TAIL:ARG,-VAL']

		Consume "he"

		D + he
			Filtering out impossible merge sites...
			Sink "he" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*he]


\========================================================================
# 7
['I', 'admire', 'Mary']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "I" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$sg', '$D', 'I-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
			=D

7.

		Consume "I"

		D + I
			Filtering out impossible merge sites...
			Sink "I" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*I]
			=D{N}

8.
		Next word "admire" contains multiple morphemes ['$[-0]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "I" from D and created [D I]
					Reconstructing head movement for D{N}.
					Extracted head "I" from D and created [D I]
					D was opened into [D I].
				Feature processing:
				Floater movement reconstruction:
					= [D I]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D I] T/fin]

10.

		Consume "v"

		[[D I] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D I] T/fin{v}]

11.

		Consume "admire"

		[[D I] T/fin{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[D I] T/fin{v,V}]

12.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D I] T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D I] T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D I] T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D I] T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D I] T/fin{v,V}]

17.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D I] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[D I] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D I] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[D I] [T/fin{v,V} D]]

18.

		Consume "Mary"

		[[D I] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[[D I] [T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D I] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D I] [T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D I] [T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D I] [T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.admire" and reconstructed it = [[D I] [T/fin [PRO.v [PRO.admire D{N}]]]]
					Extracted head "Mary" from D and created [[D I] [T/fin [PRO.v [PRO.admire [D Mary]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v [admire [D Mary]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D I]:3 from memory buffer into Spec of PRO.v
					Result [[D I]:3 [T/fin [(DP):3 [PRO.v [PRO.admire [D Mary]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):3.
					T/fin acquired PHI:GEN:N by phi-Agree from (DP):3.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):3.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):3.
			= [[D I] [T/fin [[D I] [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D I]:3 [T/fin [(DP):3 [PRO.v [PRO.admire [D Mary]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin 3. [D I] )
				PRO.admire with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: 2. [D I] 3. T/fin 4. [D I] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.admire([D Mary])', 'PRO.v([D I])']
!--->		Tests passed (with 19/169 operations) <------------------------------------
		Solution:
		[[D I] [T/fin [[D I] [v [admire [D Mary]]]]]]
		Grammar: [[D I]:1 [T/fin [(DP):1 [PRO.v [PRO.admire [D Mary]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 8
['you', 'admire', 'Mary']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "you" contains multiple morphemes ['$n', '$hum', '$def', '$2p', '$sg', '$D', 'you-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$2p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'VAL']
			=D

7.

		Consume "you"

		D + you
			Filtering out impossible merge sites...
			Sink "you" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*you]
			=D{N}

8.
		Next word "admire" contains multiple morphemes ['$[-0]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "you" from D and created [D you]
					Reconstructing head movement for D{N}.
					Extracted head "you" from D and created [D you]
					D was opened into [D you].
				Feature processing:
				Floater movement reconstruction:
					= [D you]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D you] T/fin]

10.

		Consume "v"

		[[D you] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D you] T/fin{v}]

11.

		Consume "admire"

		[[D you] T/fin{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[D you] T/fin{v,V}]

12.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D you] T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D you] T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D you] T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D you] T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D you] T/fin{v,V}]

17.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D you] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[D you] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D you] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[D you] [T/fin{v,V} D]]

18.

		Consume "Mary"

		[[D you] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[[D you] [T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D you] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D you] [T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D you] [T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D you] [T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.admire" and reconstructed it = [[D you] [T/fin [PRO.v [PRO.admire D{N}]]]]
					Extracted head "Mary" from D and created [[D you] [T/fin [PRO.v [PRO.admire [D Mary]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D you] [T/fin [v [admire [D Mary]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D you " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D you]:6 from memory buffer into Spec of PRO.v
					Result [[D you]:6 [T/fin [(DP):6 [PRO.v [PRO.admire [D Mary]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):6.
					T/fin acquired PHI:GEN:N by phi-Agree from (DP):6.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):6.
					T/fin acquired PHI:PER:2 by phi-Agree from (DP):6.
			= [[D you] [T/fin [[D you] [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D you]:6 [T/fin [(DP):6 [PRO.v [PRO.admire [D Mary]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D you]    (alternatives: 2. T/fin 3. [D you] )
				PRO.admire with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: 2. [D you] 3. T/fin 4. [D you] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.admire([D Mary])', 'PRO.v([D you])']
!--->		Tests passed (with 19/169 operations) <------------------------------------
		Solution:
		[[D you] [T/fin [[D you] [v [admire [D Mary]]]]]]
		Grammar: [[D you]:1 [T/fin [(DP):1 [PRO.v [PRO.admire [D Mary]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'VAL']
you:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:you', 'PF:you', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'VAL', 'null']
you:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:you', 'PF:you', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'VAL']
you:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:you', 'PF:you', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'VAL', 'null']
you:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:you', 'PF:you', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D]
you: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 9
['he', 'admires', 'Mary']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "he" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'he-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
			=D

7.
		Ambiguous lexical item "he-" detected.

		Consume "he"

		D + he
			Filtering out impossible merge sites...
			Sink "he" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*he]
			=D{N}

8.
		Next word "admires" contains multiple morphemes ['$[-s]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "he" from D and created [D he]
					Reconstructing head movement for D{N}.
					Extracted head "he" from D and created [D he]
					D was opened into [D he].
				Feature processing:
				Floater movement reconstruction:
					= [D he]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D he] T/fin]

10.

		Consume "v"

		[[D he] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D he] T/fin{v}]

11.

		Consume "admire"

		[[D he] T/fin{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[D he] T/fin{v,V}]

12.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D he] T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D he] T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D he] T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D he] T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D he] T/fin{v,V}]

17.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D he] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[D he] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D he] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[D he] [T/fin{v,V} D]]

18.

		Consume "Mary"

		[[D he] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[[D he] [T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D he] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D he] [T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D he] [T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D he] [T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.admire" and reconstructed it = [[D he] [T/fin [PRO.v [PRO.admire D{N}]]]]
					Extracted head "Mary" from D and created [[D he] [T/fin [PRO.v [PRO.admire [D Mary]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D he] [T/fin [v [admire [D Mary]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D he " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D he]:9 from memory buffer into Spec of PRO.v
					Result [[D he]:9 [T/fin [(DP):9 [PRO.v [PRO.admire [D Mary]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):9.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):9.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):9.
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):9.
			= [[D he] [T/fin [[D he] [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D he]:9 [T/fin [(DP):9 [PRO.v [PRO.admire [D Mary]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D he]    (alternatives: 2. T/fin 3. [D he] )
				PRO.admire with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: 2. [D he] 3. T/fin 4. [D he] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.admire([D Mary])', 'PRO.v([D he])']
!--->		Tests passed (with 19/170 operations) <------------------------------------
		Solution:
		[[D he] [T/fin [[D he] [v [admire [D Mary]]]]]]
		Grammar: [[D he]:1 [T/fin [(DP):1 [PRO.v [PRO.admire [D Mary]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D]
he: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "he"

		D + he
			Filtering out impossible merge sites...
			Sink "he" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*he]


\========================================================================
# 10
['she', 'admires', 'Mary']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "she" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'she-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
			=D

7.

		Consume "she"

		D + she
			Filtering out impossible merge sites...
			Sink "she" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*she]
			=D{N}

8.
		Next word "admires" contains multiple morphemes ['$[-s]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "she" from D and created [D she]
					Reconstructing head movement for D{N}.
					Extracted head "she" from D and created [D she]
					D was opened into [D she].
				Feature processing:
				Floater movement reconstruction:
					= [D she]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D she] T/fin]

10.

		Consume "v"

		[[D she] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D she] T/fin{v}]

11.

		Consume "admire"

		[[D she] T/fin{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[D she] T/fin{v,V}]

12.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D she] T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D she] T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D she] T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D she] T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D she] T/fin{v,V}]

17.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D she] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[D she] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D she] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[D she] [T/fin{v,V} D]]

18.

		Consume "Mary"

		[[D she] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[[D she] [T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D she] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D she] [T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D she] [T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D she] [T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.admire" and reconstructed it = [[D she] [T/fin [PRO.v [PRO.admire D{N}]]]]
					Extracted head "Mary" from D and created [[D she] [T/fin [PRO.v [PRO.admire [D Mary]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D she] [T/fin [v [admire [D Mary]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D she " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D she]:12 from memory buffer into Spec of PRO.v
					Result [[D she]:12 [T/fin [(DP):12 [PRO.v [PRO.admire [D Mary]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):12.
					T/fin acquired PHI:GEN:F by phi-Agree from (DP):12.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):12.
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):12.
			= [[D she] [T/fin [[D she] [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D she]:12 [T/fin [(DP):12 [PRO.v [PRO.admire [D Mary]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D she]    (alternatives: 2. T/fin 3. [D she] )
				PRO.admire with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: 2. [D she] 3. T/fin 4. [D she] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.admire([D Mary])', 'PRO.v([D she])']
!--->		Tests passed (with 19/169 operations) <------------------------------------
		Solution:
		[[D she] [T/fin [[D she] [v [admire [D Mary]]]]]]
		Grammar: [[D she]:1 [T/fin [(DP):1 [PRO.v [PRO.admire [D Mary]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
she:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:she', 'PF:she', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
she:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:she', 'PF:she', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
she:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:she', 'PF:she', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
she:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:she', 'PF:she', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D]
she: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 11
['John', 'admires', 'Mary']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
			=D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*John]
			=D{N}

8.
		Next word "admires" contains multiple morphemes ['$[-s]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					D was opened into [D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D John] T/fin]

10.

		Consume "v"

		[[D John] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D John] T/fin{v}]

11.

		Consume "admire"

		[[D John] T/fin{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[D John] T/fin{v,V}]

12.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D John] T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D John] T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D John] T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D John] T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D John] T/fin{v,V}]

17.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D John] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[D John] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D John] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[D John] [T/fin{v,V} D]]

18.

		Consume "Mary"

		[[D John] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[[D John] [T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D John] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D John] [T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D John] [T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D John] [T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.admire" and reconstructed it = [[D John] [T/fin [PRO.v [PRO.admire D{N}]]]]
					Extracted head "Mary" from D and created [[D John] [T/fin [PRO.v [PRO.admire [D Mary]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin [v [admire [D Mary]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D John]:15 from memory buffer into Spec of PRO.v
					Result [[D John]:15 [T/fin [(DP):15 [PRO.v [PRO.admire [D Mary]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):15.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):15.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):15.
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):15.
			= [[D John] [T/fin [[D John] [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D John]:15 [T/fin [(DP):15 [PRO.v [PRO.admire [D Mary]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin 3. [D John] )
				PRO.admire with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: 2. [D John] 3. T/fin 4. [D John] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.admire([D Mary])', 'PRO.v([D John])']
!--->		Tests passed (with 19/169 operations) <------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [v [admire [D Mary]]]]]]
		Grammar: [[D John]:1 [T/fin [(DP):1 [PRO.v [PRO.admire [D Mary]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 12
['we', 'admire', 'Mary']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "we" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$pl', '$D', 'we-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.

		Consume "$pl"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
			=D

7.

		Consume "we"

		D + we
			Filtering out impossible merge sites...
			Sink "we" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*we]
			=D{N}

8.
		Next word "admire" contains multiple morphemes ['$[-0]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "we" from D and created [D we]
					Reconstructing head movement for D{N}.
					Extracted head "we" from D and created [D we]
					D was opened into [D we].
				Feature processing:
				Floater movement reconstruction:
					= [D we]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D we] T/fin]

10.

		Consume "v"

		[[D we] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D we] T/fin{v}]

11.

		Consume "admire"

		[[D we] T/fin{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[D we] T/fin{v,V}]

12.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D we] T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D we] T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D we] T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D we] T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D we] T/fin{v,V}]

17.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D we] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[D we] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D we] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[D we] [T/fin{v,V} D]]

18.

		Consume "Mary"

		[[D we] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[[D we] [T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D we] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D we] [T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D we] [T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D we] [T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.admire" and reconstructed it = [[D we] [T/fin [PRO.v [PRO.admire D{N}]]]]
					Extracted head "Mary" from D and created [[D we] [T/fin [PRO.v [PRO.admire [D Mary]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D we] [T/fin [v [admire [D Mary]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D we " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D we]:18 from memory buffer into Spec of PRO.v
					Result [[D we]:18 [T/fin [(DP):18 [PRO.v [PRO.admire [D Mary]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):18.
					T/fin acquired PHI:GEN:N by phi-Agree from (DP):18.
					T/fin acquired PHI:NUM:PL by phi-Agree from (DP):18.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):18.
			= [[D we] [T/fin [[D we] [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D we]:18 [T/fin [(DP):18 [PRO.v [PRO.admire [D Mary]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D we]    (alternatives: 2. T/fin 3. [D we] )
				PRO.admire with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: 2. [D we] 3. T/fin 4. [D we] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.admire([D Mary])', 'PRO.v([D we])']
!--->		Tests passed (with 19/169 operations) <------------------------------------
		Solution:
		[[D we] [T/fin [[D we] [v [admire [D Mary]]]]]]
		Grammar: [[D we]:1 [T/fin [(DP):1 [PRO.v [PRO.admire [D Mary]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL', 'null']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL', 'null']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D]
we: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 13
['you_pl', 'admire', 'Mary']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "you_pl" contains multiple morphemes ['$n', '$hum', '$def', '$2p', '$pl', '$D', 'you_pl-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$2p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:2'] into working memory.

		Consume "$pl"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'VAL']
			=D

7.

		Consume "you_pl"

		D + you_pl
			Filtering out impossible merge sites...
			Sink "you_pl" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*you_pl]
			=D{N}

8.
		Next word "admire" contains multiple morphemes ['$[-0]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "you_pl" from D and created [D you_pl]
					Reconstructing head movement for D{N}.
					Extracted head "you_pl" from D and created [D you_pl]
					D was opened into [D you_pl].
				Feature processing:
				Floater movement reconstruction:
					= [D you_pl]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D you_pl] T/fin]

10.

		Consume "v"

		[[D you_pl] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D you_pl] T/fin{v}]

11.

		Consume "admire"

		[[D you_pl] T/fin{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[D you_pl] T/fin{v,V}]

12.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D you_pl] T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D you_pl] T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D you_pl] T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D you_pl] T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D you_pl] T/fin{v,V}]

17.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D you_pl] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[D you_pl] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D you_pl] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[D you_pl] [T/fin{v,V} D]]

18.

		Consume "Mary"

		[[D you_pl] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[[D you_pl] [T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D you_pl] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D you_pl] [T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D you_pl] [T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D you_pl] [T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.admire" and reconstructed it = [[D you_pl] [T/fin [PRO.v [PRO.admire D{N}]]]]
					Extracted head "Mary" from D and created [[D you_pl] [T/fin [PRO.v [PRO.admire [D Mary]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D you_pl] [T/fin [v [admire [D Mary]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D you_pl " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D you_pl]:21 from memory buffer into Spec of PRO.v
					Result [[D you_pl]:21 [T/fin [(DP):21 [PRO.v [PRO.admire [D Mary]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):21.
					T/fin acquired PHI:GEN:N by phi-Agree from (DP):21.
					T/fin acquired PHI:NUM:PL by phi-Agree from (DP):21.
					T/fin acquired PHI:PER:2 by phi-Agree from (DP):21.
			= [[D you_pl] [T/fin [[D you_pl] [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D you_pl]:21 [T/fin [(DP):21 [PRO.v [PRO.admire [D Mary]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D you_pl]    (alternatives: 2. T/fin 3. [D you_pl] )
				PRO.admire with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: 2. [D you_pl] 3. T/fin 4. [D you_pl] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.admire([D Mary])', 'PRO.v([D you_pl])']
!--->		Tests passed (with 19/169 operations) <------------------------------------
		Solution:
		[[D you_pl] [T/fin [[D you_pl] [v [admire [D Mary]]]]]]
		Grammar: [[D you_pl]:1 [T/fin [(DP):1 [PRO.v [PRO.admire [D Mary]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'VAL']
you_pl:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:you_pl', 'PF:you_pl', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'VAL', 'null']
you_pl:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:you_pl', 'PF:you_pl', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'VAL']
you_pl:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:you_pl', 'PF:you_pl', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'VAL', 'null']
you_pl:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:you_pl', 'PF:you_pl', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D]
you_pl: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 14
['they', 'admire', 'Mary']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "they" contains multiple morphemes ['$n', '$hum', '$def', '$3p', '$pl', '$D', 'they-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$pl"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
			=D

7.

		Consume "they"

		D + they
			Filtering out impossible merge sites...
			Sink "they" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*they]
			=D{N}

8.
		Next word "admire" contains multiple morphemes ['$[-0]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "they" from D and created [D they]
					Reconstructing head movement for D{N}.
					Extracted head "they" from D and created [D they]
					D was opened into [D they].
				Feature processing:
				Floater movement reconstruction:
					= [D they]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D they] T/fin]

10.

		Consume "v"

		[[D they] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D they] T/fin{v}]

11.

		Consume "admire"

		[[D they] T/fin{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[D they] T/fin{v,V}]

12.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D they] T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D they] T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D they] T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D they] T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D they] T/fin{v,V}]

17.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D they] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[D they] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D they] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[D they] [T/fin{v,V} D]]

18.

		Consume "Mary"

		[[D they] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[[D they] [T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D they] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D they] [T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D they] [T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D they] [T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.admire" and reconstructed it = [[D they] [T/fin [PRO.v [PRO.admire D{N}]]]]
					Extracted head "Mary" from D and created [[D they] [T/fin [PRO.v [PRO.admire [D Mary]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D they] [T/fin [v [admire [D Mary]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D they " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D they]:24 from memory buffer into Spec of PRO.v
					Result [[D they]:24 [T/fin [(DP):24 [PRO.v [PRO.admire [D Mary]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):24.
					T/fin acquired PHI:GEN:N by phi-Agree from (DP):24.
					T/fin acquired PHI:NUM:PL by phi-Agree from (DP):24.
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):24.
			= [[D they] [T/fin [[D they] [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D they]:24 [T/fin [(DP):24 [PRO.v [PRO.admire [D Mary]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D they]    (alternatives: 2. T/fin 3. [D they] )
				PRO.admire with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: 2. [D they] 3. T/fin 4. [D they] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.admire([D Mary])', 'PRO.v([D they])']
!--->		Tests passed (with 19/169 operations) <------------------------------------
		Solution:
		[[D they] [T/fin [[D they] [v [admire [D Mary]]]]]]
		Grammar: [[D they]:1 [T/fin [(DP):1 [PRO.v [PRO.admire [D Mary]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
they:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:they', 'PF:they', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
they:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:they', 'PF:they', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
they:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:they', 'PF:they', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
they:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:they', 'PF:they', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D]
they: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 15
['io', 'adoro', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "io" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$sg', '$D', 'I-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
			=D

7.

		Consume "I"

		D + I
			Filtering out impossible merge sites...
			Sink "I" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*I]
			=D{N}

8.
		Next word "adoro" contains multiple morphemes ['$[-o]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "I" from D and created [D I]
					Reconstructing head movement for D{N}.
					Extracted head "I" from D and created [D I]
					D was opened into [D I].
				Feature processing:
				Floater movement reconstruction:
					= [D I]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D I] PRO.T/fin]

10.

		Consume "v"

		[[D I] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D I] PRO.T/fin{v}]

11.

		Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[D I] PRO.T/fin{v,V}]

12.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D I] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D I] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D I] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D I] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D I] PRO.T/fin{v,V}]

17.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D I] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D I] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D I] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D I] [PRO.T/fin{v,V} D]]

18.

		Consume "Luisa"

		[[D I] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D I] [PRO.T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D I] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D I] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D I] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D I] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[D I] [PRO.T/fin [PRO.v [PRO.adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D I] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D I]:3 from memory buffer into Spec of PRO.v
					Result [[D I]:3 [PRO.T/fin [(DP):3 [PRO.v [PRO.adora [D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):3.
					phi.T/fin acquired PHI:GEN:N by phi-Agree from (DP):3.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from (DP):3.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from (DP):3.
			= [[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D I]:3 [phi.T/fin [(DP):3 [PRO.v [PRO.adora [D Luisa]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin 3. [D I] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D I] 3. T/fin 4. [D I] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v([D I])']
!--->		Tests passed (with 19/167 operations) <------------------------------------
		Solution:
		[[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Grammar: [[D I]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.adora [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
I: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 16
['tu', 'adori', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Ambiguous lexical item "tu" detected.
		Next word "tu" contains multiple morphemes ['$n', '$hum', '$def', '$2p', '$sg', '$D', 'tu-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$2p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:2'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'VAL']
			=D

7.
		Ambiguous lexical item "tu-" detected.

		Consume "tu"

		D + tu
			Filtering out impossible merge sites...
			Sink "tu" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*tu]
			=D{N}

8.
		Next word "adori" contains multiple morphemes ['$[-i]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "tu" from D and created [D tu]
					Reconstructing head movement for D{N}.
					Extracted head "tu" from D and created [D tu]
					D was opened into [D tu].
				Feature processing:
				Floater movement reconstruction:
					= [D tu]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D tu] PRO.T/fin]

10.

		Consume "v"

		[[D tu] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D tu] PRO.T/fin{v}]

11.

		Consume "adora"

		[[D tu] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[D tu] PRO.T/fin{v,V}]

12.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D tu] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D tu] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D tu] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D tu] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D tu] PRO.T/fin{v,V}]

17.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D tu] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D tu] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D tu] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D tu] [PRO.T/fin{v,V} D]]

18.

		Consume "Luisa"

		[[D tu] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D tu] [PRO.T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D tu] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D tu] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D tu] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D tu] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[D tu] [PRO.T/fin [PRO.v [PRO.adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D tu] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D tu] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D tu " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D tu]:6 from memory buffer into Spec of PRO.v
					Result [[D tu]:6 [PRO.T/fin [(DP):6 [PRO.v [PRO.adora [D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):6.
					phi.T/fin acquired PHI:GEN:N by phi-Agree from (DP):6.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from (DP):6.
					phi.T/fin acquired PHI:PER:2 by phi-Agree from (DP):6.
			= [[D tu] [T/fin [[D tu] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D tu]:6 [phi.T/fin [(DP):6 [PRO.v [PRO.adora [D Luisa]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tu]    (alternatives: 2. T/fin 3. [D tu] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D tu] 3. T/fin 4. [D tu] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v([D tu])']
!--->		Tests passed (with 19/169 operations) <------------------------------------
		Solution:
		[[D tu] [T/fin [[D tu] [v [adora [D Luisa]]]]]]
		Grammar: [[D tu]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.adora [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'VAL']
tu:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you', 'PF:tu', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'VAL', 'null']
tu:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you', 'PF:tu', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'VAL']
tu:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you', 'PF:tu', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'VAL', 'null']
tu:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you', 'PF:tu', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
tu: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "tu"

		D + tu
			Filtering out impossible merge sites...
			Sink "tu" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*tu]
		Next word "tu" contains multiple morphemes ['$D', 'tu-']


\========================================================================
# 17
['lui', 'adora', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "lui" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'lui-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
			=D

7.

		Consume "lui"

		D + lui
			Filtering out impossible merge sites...
			Sink "lui" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lui]
			=D{N}

8.
		Next word "adora" contains multiple morphemes ['$[-a]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lui" from D and created [D lui]
					Reconstructing head movement for D{N}.
					Extracted head "lui" from D and created [D lui]
					D was opened into [D lui].
				Feature processing:
				Floater movement reconstruction:
					= [D lui]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D lui] PRO.T/fin]

10.

		Consume "v"

		[[D lui] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D lui] PRO.T/fin{v}]

11.

		Consume "adora"

		[[D lui] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[D lui] PRO.T/fin{v,V}]

12.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D lui] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D lui] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D lui] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D lui] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D lui] PRO.T/fin{v,V}]

17.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D lui] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D lui] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D lui] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D lui] [PRO.T/fin{v,V} D]]

18.

		Consume "Luisa"

		[[D lui] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D lui] [PRO.T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D lui] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D lui] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D lui] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D lui] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[D lui] [PRO.T/fin [PRO.v [PRO.adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D lui] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D lui] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D lui " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D lui]:9 from memory buffer into Spec of PRO.v
					Result [[D lui]:9 [PRO.T/fin [(DP):9 [PRO.v [PRO.adora [D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):9.
					phi.T/fin acquired PHI:GEN:M by phi-Agree from (DP):9.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from (DP):9.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from (DP):9.
			= [[D lui] [T/fin [[D lui] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D lui]:9 [phi.T/fin [(DP):9 [PRO.v [PRO.adora [D Luisa]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lui]    (alternatives: 2. T/fin 3. [D lui] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D lui] 3. T/fin 4. [D lui] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v([D lui])']
!--->		Tests passed (with 19/167 operations) <------------------------------------
		Solution:
		[[D lui] [T/fin [[D lui] [v [adora [D Luisa]]]]]]
		Grammar: [[D lui]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.adora [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lui:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:he', 'PF:lui', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
lui:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:he', 'PF:lui', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lui:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:he', 'PF:lui', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
lui:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:he', 'PF:lui', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
lui: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 18
['lei', 'adora', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "lei" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'lei-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
			=D

7.

		Consume "lei"

		D + lei
			Filtering out impossible merge sites...
			Sink "lei" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*lei]
			=D{N}

8.
		Next word "adora" contains multiple morphemes ['$[-a]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "lei" from D and created [D lei]
					Reconstructing head movement for D{N}.
					Extracted head "lei" from D and created [D lei]
					D was opened into [D lei].
				Feature processing:
				Floater movement reconstruction:
					= [D lei]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D lei] PRO.T/fin]

10.

		Consume "v"

		[[D lei] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D lei] PRO.T/fin{v}]

11.

		Consume "adora"

		[[D lei] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[D lei] PRO.T/fin{v,V}]

12.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D lei] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D lei] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D lei] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D lei] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D lei] PRO.T/fin{v,V}]

17.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D lei] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D lei] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D lei] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D lei] [PRO.T/fin{v,V} D]]

18.

		Consume "Luisa"

		[[D lei] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D lei] [PRO.T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D lei] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D lei] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D lei] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D lei] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[D lei] [PRO.T/fin [PRO.v [PRO.adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D lei] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D lei] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D lei " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D lei]:12 from memory buffer into Spec of PRO.v
					Result [[D lei]:12 [PRO.T/fin [(DP):12 [PRO.v [PRO.adora [D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):12.
					phi.T/fin acquired PHI:GEN:F by phi-Agree from (DP):12.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from (DP):12.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from (DP):12.
			= [[D lei] [T/fin [[D lei] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D lei]:12 [phi.T/fin [(DP):12 [PRO.v [PRO.adora [D Luisa]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D lei]    (alternatives: 2. T/fin 3. [D lei] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D lei] 3. T/fin 4. [D lei] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v([D lei])']
!--->		Tests passed (with 19/167 operations) <------------------------------------
		Solution:
		[[D lei] [T/fin [[D lei] [v [adora [D Luisa]]]]]]
		Grammar: [[D lei]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.adora [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lei:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:she', 'PF:lei', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
lei:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:she', 'PF:lei', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
lei:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:she', 'PF:lei', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
lei:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:she', 'PF:lei', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
lei: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 19
['noi', 'adoriamo', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "noi" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$pl', '$D', 'noi-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.

		Consume "$pl"

			=None

5.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
			=D

7.

		Consume "noi"

		D + noi
			Filtering out impossible merge sites...
			Sink "noi" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*noi]
			=D{N}

8.
		Next word "adoriamo" contains multiple morphemes ['$[-iamo]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "noi" from D and created [D noi]
					Reconstructing head movement for D{N}.
					Extracted head "noi" from D and created [D noi]
					D was opened into [D noi].
				Feature processing:
				Floater movement reconstruction:
					= [D noi]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D noi] PRO.T/fin]

10.

		Consume "v"

		[[D noi] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D noi] PRO.T/fin{v}]

11.

		Consume "adora"

		[[D noi] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[D noi] PRO.T/fin{v,V}]

12.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D noi] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D noi] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D noi] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D noi] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D noi] PRO.T/fin{v,V}]

17.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D noi] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D noi] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D noi] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D noi] [PRO.T/fin{v,V} D]]

18.

		Consume "Luisa"

		[[D noi] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D noi] [PRO.T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D noi] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D noi] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D noi] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D noi] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[D noi] [PRO.T/fin [PRO.v [PRO.adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D noi] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D noi] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D noi " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D noi]:15 from memory buffer into Spec of PRO.v
					Result [[D noi]:15 [PRO.T/fin [(DP):15 [PRO.v [PRO.adora [D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):15.
					phi.T/fin acquired PHI:GEN:N by phi-Agree from (DP):15.
					phi.T/fin acquired PHI:NUM:PL by phi-Agree from (DP):15.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from (DP):15.
			= [[D noi] [T/fin [[D noi] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D noi]:15 [phi.T/fin [(DP):15 [PRO.v [PRO.adora [D Luisa]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D noi]    (alternatives: 2. T/fin 3. [D noi] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D noi] 3. T/fin 4. [D noi] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v([D noi])']
!--->		Tests passed (with 19/167 operations) <------------------------------------
		Solution:
		[[D noi] [T/fin [[D noi] [v [adora [D Luisa]]]]]]
		Grammar: [[D noi]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.adora [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
noi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:we', 'PF:noi', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL', 'null']
noi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:we', 'PF:noi', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
noi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:we', 'PF:noi', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL', 'null']
noi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:we', 'PF:noi', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
noi: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 20
['voi', 'adorate', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "voi" contains multiple morphemes ['$n', '$hum', '$def', '$2p', '$pl', '$D', 'voi-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$2p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:2'] into working memory.

		Consume "$pl"

			=None

5.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'VAL']
			=D

7.

		Consume "voi"

		D + voi
			Filtering out impossible merge sites...
			Sink "voi" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*voi]
			=D{N}

8.
		Next word "adorate" contains multiple morphemes ['$[-te]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "voi" from D and created [D voi]
					Reconstructing head movement for D{N}.
					Extracted head "voi" from D and created [D voi]
					D was opened into [D voi].
				Feature processing:
				Floater movement reconstruction:
					= [D voi]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D voi] PRO.T/fin]

10.

		Consume "v"

		[[D voi] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D voi] PRO.T/fin{v}]

11.

		Consume "adora"

		[[D voi] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[D voi] PRO.T/fin{v,V}]

12.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D voi] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D voi] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D voi] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D voi] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D voi] PRO.T/fin{v,V}]

17.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D voi] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D voi] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D voi] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D voi] [PRO.T/fin{v,V} D]]

18.

		Consume "Luisa"

		[[D voi] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D voi] [PRO.T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D voi] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D voi] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D voi] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D voi] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[D voi] [PRO.T/fin [PRO.v [PRO.adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D voi] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D voi] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D voi " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D voi]:18 from memory buffer into Spec of PRO.v
					Result [[D voi]:18 [PRO.T/fin [(DP):18 [PRO.v [PRO.adora [D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):18.
					phi.T/fin acquired PHI:GEN:N by phi-Agree from (DP):18.
					phi.T/fin acquired PHI:NUM:PL by phi-Agree from (DP):18.
					phi.T/fin acquired PHI:PER:2 by phi-Agree from (DP):18.
			= [[D voi] [T/fin [[D voi] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D voi]:18 [phi.T/fin [(DP):18 [PRO.v [PRO.adora [D Luisa]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D voi]    (alternatives: 2. T/fin 3. [D voi] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D voi] 3. T/fin 4. [D voi] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v([D voi])']
!--->		Tests passed (with 19/167 operations) <------------------------------------
		Solution:
		[[D voi] [T/fin [[D voi] [v [adora [D Luisa]]]]]]
		Grammar: [[D voi]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.adora [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'VAL']
voi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you_pl', 'PF:voi', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'VAL', 'null']
voi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you_pl', 'PF:voi', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'VAL']
voi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you_pl', 'PF:voi', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'VAL', 'null']
voi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:you_pl', 'PF:voi', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
voi: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 21
['loro', 'adorano', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "loro" contains multiple morphemes ['$n', '$def', '$3p', '$pl', '$D', 'loro-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$pl"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.

		Consume "$D"

			=None

5.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
			=D

6.

		Consume "loro"

		D + loro
			Filtering out impossible merge sites...
			Sink "loro" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*loro]
			=D{N}

7.
		Next word "adorano" contains multiple morphemes ['$[-no]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

8.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					Reconstructing head movement for D{N}.
					Extracted head "loro" from D and created [D loro]
					D was opened into [D loro].
				Feature processing:
				Floater movement reconstruction:
					= [D loro]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D loro] PRO.T/fin]

9.

		Consume "v"

		[[D loro] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D loro] PRO.T/fin{v}]

10.

		Consume "adora"

		[[D loro] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[D loro] PRO.T/fin{v,V}]

11.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D loro] PRO.T/fin{v,V}]

12.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D loro] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D loro] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D loro] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D loro] PRO.T/fin{v,V}]

16.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D loro] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D loro] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D loro] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D loro] [PRO.T/fin{v,V} D]]

17.

		Consume "Luisa"

		[[D loro] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D loro] [PRO.T/fin{v,V} D{N}]]

18.
	>>>	Trying candidate parse [[D loro] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D loro] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D loro] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D loro] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[D loro] [PRO.T/fin [PRO.v [PRO.adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D loro] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D loro] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D loro " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D loro]:21 from memory buffer into Spec of PRO.v
					Result [[D loro]:21 [PRO.T/fin [(DP):21 [PRO.v [PRO.adora [D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):21.
					phi.T/fin acquired PHI:GEN:N by phi-Agree from (DP):21.
					phi.T/fin acquired PHI:NUM:PL by phi-Agree from (DP):21.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from (DP):21.
			= [[D loro] [T/fin [[D loro] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D loro]:21 [phi.T/fin [(DP):21 [PRO.v [PRO.adora [D Luisa]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D loro]    (alternatives: 2. T/fin 3. [D loro] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D loro] 3. T/fin 4. [D loro] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v([D loro])']
!--->		Tests passed (with 18/163 operations) <------------------------------------
		Solution:
		[[D loro] [T/fin [[D loro] [v [adora [D Luisa]]]]]]
		Grammar: [[D loro]:1 [phi.T/fin [(DP):1 [PRO.v [PRO.adora [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL', 'null']
loro:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:they', 'PF:loro', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
loro: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 22
['mina', 'ihailet', 'Merjaa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "mina" contains multiple morphemes ['$hum', '$def', '$1p', '$sg', '$nom', '$D', 'mina-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

7.

		Consume "mina"

		D + mina
			Filtering out impossible merge sites...
			Sink "mina" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mina]
			=D{N}

8.
		Next word "ihailet" contains multiple morphemes ['$[-t]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mina" from D and created [D mina]
					Reconstructing head movement for D{N}.
					Extracted head "mina" from D and created [D mina]
					D was opened into [D mina].
				Feature processing:
				Floater movement reconstruction:
					= [D mina]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D mina] PRO.T/fin]

10.

		Consume "v"

		[[D mina] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D mina] PRO.T/fin{v}]

11.

		Consume "ihaile-"

		[[D mina] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[D mina] PRO.T/fin{v,V}]

12.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[D mina] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D mina] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D mina] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D mina] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[D mina] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D mina] PRO.T/fin{v,V}]

18.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D mina> [T/fin [<D mina> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D mina] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D mina] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D mina] [PRO.T/fin{v,V} D]]

19.

		Consume "Merja-"

		[[D mina] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D mina] [PRO.T/fin{v,V} D{N}]]

20.
	>>>	Trying candidate parse [[D mina] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D mina] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D mina] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D mina] [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]
					Extracted head "Merja-" from D and created [[D mina] [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
						<D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<D mina>:21 [PRO.T/fin [<DP>:21 [PRO.v [PRO.ihaile- [D Merja-]]]]]]
					= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:21.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:21.
					Feature PHI:PER:1 was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:21.
			= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D mina>:21 [T/fin [<DP>:21 [PRO.v [PRO.ihaile- [D Merja-]]]]]] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. <D mina> 3. T/fin 4. <D mina> )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D mina] PRO.T/fin{v,V}] D]
			Transferring [[D mina] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[D mina] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [[D mina] [PRO.T/fin [PRO.v PRO.ihaile-]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
						<D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<D mina>:22 [PRO.T/fin [<DP>:22 [PRO.v PRO.ihaile-]]]]
					= [<D mina> [T/fin [<D mina> [v ihaile-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [<D mina>:22 [PRO.T/fin [<DP>:22 [PRO.v PRO.ihaile-]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:22.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:22.
					Feature PHI:PER:1 was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:22.
			=[[<D mina>:22 [T/fin [<DP>:22 [PRO.v PRO.ihaile-]]]] D]

21.

		Consume "Merja-"

		[[<D mina> [T/fin [<D mina> [v ihaile-]]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[<D mina>:22 [T/fin [<DP>:22 [PRO.v PRO.ihaile-]]]] D{N}]

22.
	>>>	Trying candidate parse [[<D mina> [T/fin [<D mina> [v ihaile-]]]] D{N}] (2.)
		Reconstructing...
			Transferring [[<D mina>:22 [T/fin [<DP>:22 [PRO.v PRO.ihaile-]]]] D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<D mina>:22 [T/fin [<DP>:22 [PRO.v PRO.ihaile-]]]] D{N}].
					Extracted head "Merja-" from D and created [[<D mina>:22 [T/fin [<DP>:22 [PRO.v PRO.ihaile-]]]] [D Merja-]]
				Feature processing:
				Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D Merja-> was made an adjunct.
					Dropping <D Merja->
						Floater <D Merja-> dropped.
						 = [[<D mina>:22 [T/fin [<DP>:22 [PRO.v [<DP>:23 PRO.ihaile-]]]]] <D Merja->:23]
					= [[<D mina> [T/fin [<D mina> [v [<D Merja-> ihaile-]]]]] <D Merja->]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			= [[<D mina> [T/fin [<D mina> [v [<D Merja-> ihaile-]]]]] <D Merja->]
		Checking LF-interface conditions.
			Trying to transfer [[<D mina>:22 [T/fin [<DP>:22 [PRO.v [<DP>:23 PRO.ihaile-]]]]] <D Merja->:23] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D mina> 3. T/fin 4. <D mina> )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D]
Merja-: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$par".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D mina] PRO.T/fin{v,V}]

23.

		Adding inflectional features ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D mina> [T/fin [<D mina> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D mina] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D mina] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D mina] [PRO.T/fin{v,V} D]]

24.

		Consume "Merjaa"

		[[D mina] [T/fin{v,V} D]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D mina] [PRO.T/fin{v,V} D{N}]]

25.
	>>>	Trying candidate parse [[D mina] [T/fin{v,V} D{N}]] (3.)
		Reconstructing...
			Transferring [[D mina] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D mina] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D mina] [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]
					Extracted head "Merjaa" from D and created [[D mina] [PRO.T/fin [PRO.v [PRO.ihaile- [D Merjaa]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
						<D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<D mina>:26 [PRO.T/fin [<DP>:26 [PRO.v [PRO.ihaile- [D Merjaa]]]]]]
					= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merjaa]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:26.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:26.
					Feature PHI:PER:1 was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:26.
			= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merjaa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D mina>:26 [T/fin [<DP>:26 [PRO.v [PRO.ihaile- [D Merjaa]]]]]] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:ARG,-VAL', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merjaa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D mina] PRO.T/fin{v,V}] D]
			Transferring [[D mina] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[D mina] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [[D mina] [PRO.T/fin [PRO.v PRO.ihaile-]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
						<D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<D mina>:27 [PRO.T/fin [<DP>:27 [PRO.v PRO.ihaile-]]]]
					= [<D mina> [T/fin [<D mina> [v ihaile-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [<D mina>:27 [PRO.T/fin [<DP>:27 [PRO.v PRO.ihaile-]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:27.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:27.
					Feature PHI:PER:1 was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:27.
			=[[<D mina>:27 [T/fin [<DP>:27 [PRO.v PRO.ihaile-]]]] D]

26.

		Consume "Merjaa"

		[[<D mina> [T/fin [<D mina> [v ihaile-]]]] D] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[<D mina>:27 [T/fin [<DP>:27 [PRO.v PRO.ihaile-]]]] D{N}]

27.
	>>>	Trying candidate parse [[<D mina> [T/fin [<D mina> [v ihaile-]]]] D{N}] (4.)
		Reconstructing...
			Transferring [[<D mina>:27 [T/fin [<DP>:27 [PRO.v PRO.ihaile-]]]] D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<D mina>:27 [T/fin [<DP>:27 [PRO.v PRO.ihaile-]]]] D{N}].
					Extracted head "Merjaa" from D and created [[<D mina>:27 [T/fin [<DP>:27 [PRO.v PRO.ihaile-]]]] [D Merjaa]]
				Feature processing:
				Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D Merjaa> was made an adjunct.
					Dropping <D Merjaa>
						Floater <D Merjaa> dropped.
						 = [[<D mina>:27 [T/fin [<DP>:27 [PRO.v [<DP>:28 PRO.ihaile-]]]]] <D Merjaa>:28]
					= [[<D mina> [T/fin [<D mina> [v [<D Merjaa> ihaile-]]]]] <D Merjaa>]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			= [[<D mina> [T/fin [<D mina> [v [<D Merjaa> ihaile-]]]]] <D Merjaa>]
		Checking LF-interface conditions.
			Trying to transfer [[<D mina>:27 [T/fin [<DP>:27 [PRO.v [<DP>:28 PRO.ihaile-]]]]] <D Merjaa>:28] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D]
Merjaa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihailet".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mina-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$nom".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$1p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mina".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 23
['mina', 'ihalee', 'Merjaa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "mina" contains multiple morphemes ['$hum', '$def', '$1p', '$sg', '$nom', '$D', 'mina-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

7.

		Consume "mina"

		D + mina
			Filtering out impossible merge sites...
			Sink "mina" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mina]
			=D{N}

8.

		Consume "?"

		D{N} + ?
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ?]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mina" from D and created [D mina]
					Reconstructing head movement for D{N}.
					Extracted head "mina" from D and created [D mina]
					D was opened into [D mina].
				Feature processing:
				Floater movement reconstruction:
					= [D mina]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D mina] ?]

9.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[D mina] ?]

10.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D mina] ?]

11.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D mina] ?]

12.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D mina] ?]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[D mina] ?]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D mina] ?]

15.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] ?] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D mina] ?] + D = 1]
				? + D = 2]
		Ranking completed:
			1. [?; D]
			2. [[[D mina] ?]; D]
		Exploring solution number (1) =[? D]
			Transferring ? to LF.
				head movement reconstruction:
					Reconstructing head movement for ?.
				Feature processing:
				Floater movement reconstruction:
					= ?
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D mina] [? D]]

16.

		Consume "Merja-"

		[[D mina] [? D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D mina] [? D{N}]]

17.
	>>>	Trying candidate parse [[D mina] [? D{N}]] (1.)
		Reconstructing...
			Transferring [[D mina] [? D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] [? D{N}]].
					Extracted head "Merja-" from D and created [[D mina] [? [D Merja-]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
					D at the right failed to tail [-VAL][ARG]
					= [[D mina] [? [D Merja-]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			= [[D mina] [? [D Merja-]]]
		Checking LF-interface conditions.
			Trying to transfer [[D mina] [? [D Merja-]]] into Conceptual-Intentional system...
				Transfer to C-I crashed.
			D<[D]> failed to tail features [ARG][CAT:FIN][VAL]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
?:['CAT:X', 'PF:?']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
mina: [N, D]
?: []
D: [D, ]
Merja-: [N, D, ]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D mina] ?] D]
			Transferring [[D mina] ?] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] ?].
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
					= [[D mina] ?]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[[D mina] ?] D]

18.

		Consume "Merja-"

		[[[D mina] ?] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[[D mina] ?] D{N}]

19.
	>>>	Trying candidate parse [[[D mina] ?] D{N}] (2.)
		Reconstructing...
			Transferring [[[D mina] ?] D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[D mina] ?] D{N}].
					Extracted head "Merja-" from D and created [[[D mina] ?] [D Merja-]]
				Feature processing:
				Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
					= [[[D mina] ?] [D Merja-]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			= [[[D mina] ?] [D Merja-]]
		Checking LF-interface conditions.
			Trying to transfer [[[D mina] ?] [D Merja-]] into Conceptual-Intentional system...
				Transfer to C-I crashed.
			D<[D]> failed to tail features [ARG][CAT:FIN][VAL]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
?:['CAT:X', 'PF:?']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
mina: [N, D]
?: []
D: [D]
Merja-: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$par".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D mina] ?]

20.

		Adding inflectional features ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] ?] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D mina] ?] + D = 1]
				? + D = 2]
		Ranking completed:
			1. [?; D]
			2. [[[D mina] ?]; D]
		Exploring solution number (1) =[? D]
			Transferring ? to LF.
				head movement reconstruction:
					Reconstructing head movement for ?.
				Feature processing:
				Floater movement reconstruction:
					= ?
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D mina] [? D]]

21.

		Consume "Merjaa"

		[[D mina] [? D]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D mina] [? D{N}]]

22.
	>>>	Trying candidate parse [[D mina] [? D{N}]] (3.)
		Reconstructing...
			Transferring [[D mina] [? D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] [? D{N}]].
					Extracted head "Merjaa" from D and created [[D mina] [? [D Merjaa]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
					D at the right failed to tail [-VAL][ARG]
					= [[D mina] [? [D Merjaa]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			= [[D mina] [? [D Merjaa]]]
		Checking LF-interface conditions.
			Trying to transfer [[D mina] [? [D Merjaa]]] into Conceptual-Intentional system...
				Transfer to C-I crashed.
			D<[D]> failed to tail features [ARG][CAT:FIN][VAL]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
?:['CAT:X', 'PF:?']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:ARG,-VAL', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
mina: [N, D]
?: []
D: [D, ]
Merjaa: [N, D, ]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D mina] ?] D]
			Transferring [[D mina] ?] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] ?].
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
					= [[D mina] ?]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[[D mina] ?] D]

23.

		Consume "Merjaa"

		[[[D mina] ?] D] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[[D mina] ?] D{N}]

24.
	>>>	Trying candidate parse [[[D mina] ?] D{N}] (4.)
		Reconstructing...
			Transferring [[[D mina] ?] D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[D mina] ?] D{N}].
					Extracted head "Merjaa" from D and created [[[D mina] ?] [D Merjaa]]
				Feature processing:
				Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
					= [[[D mina] ?] [D Merjaa]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			= [[[D mina] ?] [D Merjaa]]
		Checking LF-interface conditions.
			Trying to transfer [[[D mina] ?] [D Merjaa]] into Conceptual-Intentional system...
				Transfer to C-I crashed.
			D<[D]> failed to tail features [ARG][CAT:FIN][VAL]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
?:['CAT:X', 'PF:?']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:ARG,-VAL', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
mina: [N, D]
?: []
D: [D]
Merjaa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihalee".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mina-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$nom".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$1p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mina".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 24
['mina', 'ihailemme', 'Merjaa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "mina" contains multiple morphemes ['$hum', '$def', '$1p', '$sg', '$nom', '$D', 'mina-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

7.

		Consume "mina"

		D + mina
			Filtering out impossible merge sites...
			Sink "mina" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mina]
			=D{N}

8.
		Next word "ihailemme" contains multiple morphemes ['$[-mme]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mina" from D and created [D mina]
					Reconstructing head movement for D{N}.
					Extracted head "mina" from D and created [D mina]
					D was opened into [D mina].
				Feature processing:
				Floater movement reconstruction:
					= [D mina]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D mina] PRO.T/fin]

10.

		Consume "v"

		[[D mina] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D mina] PRO.T/fin{v}]

11.

		Consume "ihaile-"

		[[D mina] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[D mina] PRO.T/fin{v,V}]

12.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[D mina] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D mina] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D mina] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D mina] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[D mina] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D mina] PRO.T/fin{v,V}]

18.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D mina> [T/fin [<D mina> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D mina] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D mina] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D mina] [PRO.T/fin{v,V} D]]

19.

		Consume "Merja-"

		[[D mina] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D mina] [PRO.T/fin{v,V} D{N}]]

20.
	>>>	Trying candidate parse [[D mina] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D mina] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D mina] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D mina] [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]
					Extracted head "Merja-" from D and created [[D mina] [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
						<D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<D mina>:31 [PRO.T/fin [<DP>:31 [PRO.v [PRO.ihaile- [D Merja-]]]]]]
					= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:31.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:31.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:31.
			= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D mina>:31 [T/fin [<DP>:31 [PRO.v [PRO.ihaile- [D Merja-]]]]]] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. <D mina> 3. T/fin 4. <D mina> )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D mina] PRO.T/fin{v,V}] D]
			Transferring [[D mina] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[D mina] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [[D mina] [PRO.T/fin [PRO.v PRO.ihaile-]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
						<D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<D mina>:32 [PRO.T/fin [<DP>:32 [PRO.v PRO.ihaile-]]]]
					= [<D mina> [T/fin [<D mina> [v ihaile-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [<D mina>:32 [PRO.T/fin [<DP>:32 [PRO.v PRO.ihaile-]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:32.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:32.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:32.
			=[[<D mina>:32 [T/fin [<DP>:32 [PRO.v PRO.ihaile-]]]] D]

21.

		Consume "Merja-"

		[[<D mina> [T/fin [<D mina> [v ihaile-]]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[<D mina>:32 [T/fin [<DP>:32 [PRO.v PRO.ihaile-]]]] D{N}]

22.
	>>>	Trying candidate parse [[<D mina> [T/fin [<D mina> [v ihaile-]]]] D{N}] (2.)
		Reconstructing...
			Transferring [[<D mina>:32 [T/fin [<DP>:32 [PRO.v PRO.ihaile-]]]] D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<D mina>:32 [T/fin [<DP>:32 [PRO.v PRO.ihaile-]]]] D{N}].
					Extracted head "Merja-" from D and created [[<D mina>:32 [T/fin [<DP>:32 [PRO.v PRO.ihaile-]]]] [D Merja-]]
				Feature processing:
				Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D Merja-> was made an adjunct.
					Dropping <D Merja->
						Floater <D Merja-> dropped.
						 = [[<D mina>:32 [T/fin [<DP>:32 [PRO.v [<DP>:33 PRO.ihaile-]]]]] <D Merja->:33]
					= [[<D mina> [T/fin [<D mina> [v [<D Merja-> ihaile-]]]]] <D Merja->]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			= [[<D mina> [T/fin [<D mina> [v [<D Merja-> ihaile-]]]]] <D Merja->]
		Checking LF-interface conditions.
			Trying to transfer [[<D mina>:32 [T/fin [<DP>:32 [PRO.v [<DP>:33 PRO.ihaile-]]]]] <D Merja->:33] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D mina> 3. T/fin 4. <D mina> )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D]
Merja-: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$par".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D mina] PRO.T/fin{v,V}]

23.

		Adding inflectional features ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D mina> [T/fin [<D mina> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D mina] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D mina] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D mina] [PRO.T/fin{v,V} D]]

24.

		Consume "Merjaa"

		[[D mina] [T/fin{v,V} D]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D mina] [PRO.T/fin{v,V} D{N}]]

25.
	>>>	Trying candidate parse [[D mina] [T/fin{v,V} D{N}]] (3.)
		Reconstructing...
			Transferring [[D mina] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D mina] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D mina] [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]
					Extracted head "Merjaa" from D and created [[D mina] [PRO.T/fin [PRO.v [PRO.ihaile- [D Merjaa]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
						<D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<D mina>:36 [PRO.T/fin [<DP>:36 [PRO.v [PRO.ihaile- [D Merjaa]]]]]]
					= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merjaa]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:36.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:36.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:36.
			= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merjaa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D mina>:36 [T/fin [<DP>:36 [PRO.v [PRO.ihaile- [D Merjaa]]]]]] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:ARG,-VAL', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merjaa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D mina] PRO.T/fin{v,V}] D]
			Transferring [[D mina] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[D mina] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [[D mina] [PRO.T/fin [PRO.v PRO.ihaile-]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
						<D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<D mina>:37 [PRO.T/fin [<DP>:37 [PRO.v PRO.ihaile-]]]]
					= [<D mina> [T/fin [<D mina> [v ihaile-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [<D mina>:37 [PRO.T/fin [<DP>:37 [PRO.v PRO.ihaile-]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:37.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:37.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:37.
			=[[<D mina>:37 [T/fin [<DP>:37 [PRO.v PRO.ihaile-]]]] D]

26.

		Consume "Merjaa"

		[[<D mina> [T/fin [<D mina> [v ihaile-]]]] D] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[<D mina>:37 [T/fin [<DP>:37 [PRO.v PRO.ihaile-]]]] D{N}]

27.
	>>>	Trying candidate parse [[<D mina> [T/fin [<D mina> [v ihaile-]]]] D{N}] (4.)
		Reconstructing...
			Transferring [[<D mina>:37 [T/fin [<DP>:37 [PRO.v PRO.ihaile-]]]] D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<D mina>:37 [T/fin [<DP>:37 [PRO.v PRO.ihaile-]]]] D{N}].
					Extracted head "Merjaa" from D and created [[<D mina>:37 [T/fin [<DP>:37 [PRO.v PRO.ihaile-]]]] [D Merjaa]]
				Feature processing:
				Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D Merjaa> was made an adjunct.
					Dropping <D Merjaa>
						Floater <D Merjaa> dropped.
						 = [[<D mina>:37 [T/fin [<DP>:37 [PRO.v [<DP>:38 PRO.ihaile-]]]]] <D Merjaa>:38]
					= [[<D mina> [T/fin [<D mina> [v [<D Merjaa> ihaile-]]]]] <D Merjaa>]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			= [[<D mina> [T/fin [<D mina> [v [<D Merjaa> ihaile-]]]]] <D Merjaa>]
		Checking LF-interface conditions.
			Trying to transfer [[<D mina>:37 [T/fin [<DP>:37 [PRO.v [<DP>:38 PRO.ihaile-]]]]] <D Merjaa>:38] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D]
Merjaa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihailemme".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mina-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$nom".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$1p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mina".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 25
['mina', 'ihailette', 'Merjaa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "mina" contains multiple morphemes ['$hum', '$def', '$1p', '$sg', '$nom', '$D', 'mina-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

7.

		Consume "mina"

		D + mina
			Filtering out impossible merge sites...
			Sink "mina" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mina]
			=D{N}

8.
		Next word "ihailette" contains multiple morphemes ['$[-tte]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mina" from D and created [D mina]
					Reconstructing head movement for D{N}.
					Extracted head "mina" from D and created [D mina]
					D was opened into [D mina].
				Feature processing:
				Floater movement reconstruction:
					= [D mina]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D mina] PRO.T/fin]

10.

		Consume "v"

		[[D mina] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D mina] PRO.T/fin{v}]

11.

		Consume "ihaile-"

		[[D mina] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[D mina] PRO.T/fin{v,V}]

12.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[D mina] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D mina] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D mina] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D mina] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[D mina] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D mina] PRO.T/fin{v,V}]

18.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D mina> [T/fin [<D mina> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D mina] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D mina] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D mina] [PRO.T/fin{v,V} D]]

19.

		Consume "Merja-"

		[[D mina] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D mina] [PRO.T/fin{v,V} D{N}]]

20.
	>>>	Trying candidate parse [[D mina] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D mina] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D mina] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D mina] [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]
					Extracted head "Merja-" from D and created [[D mina] [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
						<D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<D mina>:41 [PRO.T/fin [<DP>:41 [PRO.v [PRO.ihaile- [D Merja-]]]]]]
					= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:41.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:41.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:41.
			= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D mina>:41 [T/fin [<DP>:41 [PRO.v [PRO.ihaile- [D Merja-]]]]]] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. <D mina> 3. T/fin 4. <D mina> )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D mina] PRO.T/fin{v,V}] D]
			Transferring [[D mina] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[D mina] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [[D mina] [PRO.T/fin [PRO.v PRO.ihaile-]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
						<D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<D mina>:42 [PRO.T/fin [<DP>:42 [PRO.v PRO.ihaile-]]]]
					= [<D mina> [T/fin [<D mina> [v ihaile-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [<D mina>:42 [PRO.T/fin [<DP>:42 [PRO.v PRO.ihaile-]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:42.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:42.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:42.
			=[[<D mina>:42 [T/fin [<DP>:42 [PRO.v PRO.ihaile-]]]] D]

21.

		Consume "Merja-"

		[[<D mina> [T/fin [<D mina> [v ihaile-]]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[<D mina>:42 [T/fin [<DP>:42 [PRO.v PRO.ihaile-]]]] D{N}]

22.
	>>>	Trying candidate parse [[<D mina> [T/fin [<D mina> [v ihaile-]]]] D{N}] (2.)
		Reconstructing...
			Transferring [[<D mina>:42 [T/fin [<DP>:42 [PRO.v PRO.ihaile-]]]] D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<D mina>:42 [T/fin [<DP>:42 [PRO.v PRO.ihaile-]]]] D{N}].
					Extracted head "Merja-" from D and created [[<D mina>:42 [T/fin [<DP>:42 [PRO.v PRO.ihaile-]]]] [D Merja-]]
				Feature processing:
				Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D Merja-> was made an adjunct.
					Dropping <D Merja->
						Floater <D Merja-> dropped.
						 = [[<D mina>:42 [T/fin [<DP>:42 [PRO.v [<DP>:43 PRO.ihaile-]]]]] <D Merja->:43]
					= [[<D mina> [T/fin [<D mina> [v [<D Merja-> ihaile-]]]]] <D Merja->]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			= [[<D mina> [T/fin [<D mina> [v [<D Merja-> ihaile-]]]]] <D Merja->]
		Checking LF-interface conditions.
			Trying to transfer [[<D mina>:42 [T/fin [<DP>:42 [PRO.v [<DP>:43 PRO.ihaile-]]]]] <D Merja->:43] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D mina> 3. T/fin 4. <D mina> )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D]
Merja-: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$par".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D mina] PRO.T/fin{v,V}]

23.

		Adding inflectional features ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D mina> [T/fin [<D mina> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D mina] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D mina] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D mina] [PRO.T/fin{v,V} D]]

24.

		Consume "Merjaa"

		[[D mina] [T/fin{v,V} D]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D mina] [PRO.T/fin{v,V} D{N}]]

25.
	>>>	Trying candidate parse [[D mina] [T/fin{v,V} D{N}]] (3.)
		Reconstructing...
			Transferring [[D mina] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D mina] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D mina] [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]
					Extracted head "Merjaa" from D and created [[D mina] [PRO.T/fin [PRO.v [PRO.ihaile- [D Merjaa]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
						<D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<D mina>:46 [PRO.T/fin [<DP>:46 [PRO.v [PRO.ihaile- [D Merjaa]]]]]]
					= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merjaa]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:46.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:46.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:46.
			= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merjaa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D mina>:46 [T/fin [<DP>:46 [PRO.v [PRO.ihaile- [D Merjaa]]]]]] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:ARG,-VAL', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merjaa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D mina] PRO.T/fin{v,V}] D]
			Transferring [[D mina] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[D mina] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [[D mina] [PRO.T/fin [PRO.v PRO.ihaile-]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
						<D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<D mina>:47 [PRO.T/fin [<DP>:47 [PRO.v PRO.ihaile-]]]]
					= [<D mina> [T/fin [<D mina> [v ihaile-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [<D mina>:47 [PRO.T/fin [<DP>:47 [PRO.v PRO.ihaile-]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:47.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:47.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:47.
			=[[<D mina>:47 [T/fin [<DP>:47 [PRO.v PRO.ihaile-]]]] D]

26.

		Consume "Merjaa"

		[[<D mina> [T/fin [<D mina> [v ihaile-]]]] D] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[<D mina>:47 [T/fin [<DP>:47 [PRO.v PRO.ihaile-]]]] D{N}]

27.
	>>>	Trying candidate parse [[<D mina> [T/fin [<D mina> [v ihaile-]]]] D{N}] (4.)
		Reconstructing...
			Transferring [[<D mina>:47 [T/fin [<DP>:47 [PRO.v PRO.ihaile-]]]] D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<D mina>:47 [T/fin [<DP>:47 [PRO.v PRO.ihaile-]]]] D{N}].
					Extracted head "Merjaa" from D and created [[<D mina>:47 [T/fin [<DP>:47 [PRO.v PRO.ihaile-]]]] [D Merjaa]]
				Feature processing:
				Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D Merjaa> was made an adjunct.
					Dropping <D Merjaa>
						Floater <D Merjaa> dropped.
						 = [[<D mina>:47 [T/fin [<DP>:47 [PRO.v [<DP>:48 PRO.ihaile-]]]]] <D Merjaa>:48]
					= [[<D mina> [T/fin [<D mina> [v [<D Merjaa> ihaile-]]]]] <D Merjaa>]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			= [[<D mina> [T/fin [<D mina> [v [<D Merjaa> ihaile-]]]]] <D Merjaa>]
		Checking LF-interface conditions.
			Trying to transfer [[<D mina>:47 [T/fin [<DP>:47 [PRO.v [<DP>:48 PRO.ihaile-]]]]] <D Merjaa>:48] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D]
Merjaa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihailette".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mina-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$nom".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$1p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mina".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 26
['mina', 'ihailevat', 'Merjaa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "mina" contains multiple morphemes ['$hum', '$def', '$1p', '$sg', '$nom', '$D', 'mina-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

7.

		Consume "mina"

		D + mina
			Filtering out impossible merge sites...
			Sink "mina" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mina]
			=D{N}

8.
		Next word "ihailevat" contains multiple morphemes ['$[-vat]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mina" from D and created [D mina]
					Reconstructing head movement for D{N}.
					Extracted head "mina" from D and created [D mina]
					D was opened into [D mina].
				Feature processing:
				Floater movement reconstruction:
					= [D mina]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D mina] PRO.T/fin]

10.

		Consume "v"

		[[D mina] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D mina] PRO.T/fin{v}]

11.

		Consume "ihaile-"

		[[D mina] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[D mina] PRO.T/fin{v,V}]

12.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[D mina] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D mina] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D mina] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D mina] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[D mina] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D mina] PRO.T/fin{v,V}]

18.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D mina> [T/fin [<D mina> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D mina] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D mina] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D mina] [PRO.T/fin{v,V} D]]

19.

		Consume "Merja-"

		[[D mina] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D mina] [PRO.T/fin{v,V} D{N}]]

20.
	>>>	Trying candidate parse [[D mina] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D mina] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D mina] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D mina] [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]
					Extracted head "Merja-" from D and created [[D mina] [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
						<D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<D mina>:51 [PRO.T/fin [<DP>:51 [PRO.v [PRO.ihaile- [D Merja-]]]]]]
					= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:51.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:51.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:51.
			= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D mina>:51 [T/fin [<DP>:51 [PRO.v [PRO.ihaile- [D Merja-]]]]]] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. <D mina> 3. T/fin 4. <D mina> )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D mina] PRO.T/fin{v,V}] D]
			Transferring [[D mina] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[D mina] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [[D mina] [PRO.T/fin [PRO.v PRO.ihaile-]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
						<D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<D mina>:52 [PRO.T/fin [<DP>:52 [PRO.v PRO.ihaile-]]]]
					= [<D mina> [T/fin [<D mina> [v ihaile-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [<D mina>:52 [PRO.T/fin [<DP>:52 [PRO.v PRO.ihaile-]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:52.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:52.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:52.
			=[[<D mina>:52 [T/fin [<DP>:52 [PRO.v PRO.ihaile-]]]] D]

21.

		Consume "Merja-"

		[[<D mina> [T/fin [<D mina> [v ihaile-]]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[<D mina>:52 [T/fin [<DP>:52 [PRO.v PRO.ihaile-]]]] D{N}]

22.
	>>>	Trying candidate parse [[<D mina> [T/fin [<D mina> [v ihaile-]]]] D{N}] (2.)
		Reconstructing...
			Transferring [[<D mina>:52 [T/fin [<DP>:52 [PRO.v PRO.ihaile-]]]] D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<D mina>:52 [T/fin [<DP>:52 [PRO.v PRO.ihaile-]]]] D{N}].
					Extracted head "Merja-" from D and created [[<D mina>:52 [T/fin [<DP>:52 [PRO.v PRO.ihaile-]]]] [D Merja-]]
				Feature processing:
				Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D Merja-> was made an adjunct.
					Dropping <D Merja->
						Floater <D Merja-> dropped.
						 = [[<D mina>:52 [T/fin [<DP>:52 [PRO.v [<DP>:53 PRO.ihaile-]]]]] <D Merja->:53]
					= [[<D mina> [T/fin [<D mina> [v [<D Merja-> ihaile-]]]]] <D Merja->]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			= [[<D mina> [T/fin [<D mina> [v [<D Merja-> ihaile-]]]]] <D Merja->]
		Checking LF-interface conditions.
			Trying to transfer [[<D mina>:52 [T/fin [<DP>:52 [PRO.v [<DP>:53 PRO.ihaile-]]]]] <D Merja->:53] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D mina> 3. T/fin 4. <D mina> )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D]
Merja-: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$par".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D mina] PRO.T/fin{v,V}]

23.

		Adding inflectional features ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D mina> [T/fin [<D mina> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D mina] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D mina] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D mina] [PRO.T/fin{v,V} D]]

24.

		Consume "Merjaa"

		[[D mina] [T/fin{v,V} D]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D mina] [PRO.T/fin{v,V} D{N}]]

25.
	>>>	Trying candidate parse [[D mina] [T/fin{v,V} D{N}]] (3.)
		Reconstructing...
			Transferring [[D mina] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D mina] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D mina] [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]
					Extracted head "Merjaa" from D and created [[D mina] [PRO.T/fin [PRO.v [PRO.ihaile- [D Merjaa]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
						<D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<D mina>:56 [PRO.T/fin [<DP>:56 [PRO.v [PRO.ihaile- [D Merjaa]]]]]]
					= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merjaa]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:56.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:56.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:56.
			= [<D mina> [T/fin [<D mina> [v [ihaile- [D Merjaa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D mina>:56 [T/fin [<DP>:56 [PRO.v [PRO.ihaile- [D Merjaa]]]]]] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:ARG,-VAL', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merjaa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D mina] PRO.T/fin{v,V}] D]
			Transferring [[D mina] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[D mina] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [[D mina] [PRO.T/fin [PRO.v PRO.ihaile-]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
						<D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<D mina>:57 [PRO.T/fin [<DP>:57 [PRO.v PRO.ihaile-]]]]
					= [<D mina> [T/fin [<D mina> [v ihaile-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [<D mina>:57 [PRO.T/fin [<DP>:57 [PRO.v PRO.ihaile-]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:57.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:57.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 by phi-Agree from <DP>:57.
			=[[<D mina>:57 [T/fin [<DP>:57 [PRO.v PRO.ihaile-]]]] D]

26.

		Consume "Merjaa"

		[[<D mina> [T/fin [<D mina> [v ihaile-]]]] D] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[<D mina>:57 [T/fin [<DP>:57 [PRO.v PRO.ihaile-]]]] D{N}]

27.
	>>>	Trying candidate parse [[<D mina> [T/fin [<D mina> [v ihaile-]]]] D{N}] (4.)
		Reconstructing...
			Transferring [[<D mina>:57 [T/fin [<DP>:57 [PRO.v PRO.ihaile-]]]] D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<D mina>:57 [T/fin [<DP>:57 [PRO.v PRO.ihaile-]]]] D{N}].
					Extracted head "Merjaa" from D and created [[<D mina>:57 [T/fin [<DP>:57 [PRO.v PRO.ihaile-]]]] [D Merjaa]]
				Feature processing:
				Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D Merjaa> was made an adjunct.
					Dropping <D Merjaa>
						Floater <D Merjaa> dropped.
						 = [[<D mina>:57 [T/fin [<DP>:57 [PRO.v [<DP>:58 PRO.ihaile-]]]]] <D Merjaa>:58]
					= [[<D mina> [T/fin [<D mina> [v [<D Merjaa> ihaile-]]]]] <D Merjaa>]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			= [[<D mina> [T/fin [<D mina> [v [<D Merjaa> ihaile-]]]]] <D Merjaa>]
		Checking LF-interface conditions.
			Trying to transfer [[<D mina>:57 [T/fin [<DP>:57 [PRO.v [<DP>:58 PRO.ihaile-]]]]] <D Merjaa>:58] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
mina: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D]
Merjaa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihailevat".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mina-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$nom".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$1p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mina".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 27
['John', 'admire', 'Mary']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
			=D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*John]
			=D{N}

8.
		Next word "admire" contains multiple morphemes ['$[-0]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					D was opened into [D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D John] T/fin]

10.

		Consume "v"

		[[D John] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D John] T/fin{v}]

11.

		Consume "admire"

		[[D John] T/fin{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[D John] T/fin{v,V}]

12.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D John] T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D John] T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D John] T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D John] T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D John] T/fin{v,V}]

17.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D John] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[D John] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D John] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[D John] [T/fin{v,V} D]]

18.

		Consume "Mary"

		[[D John] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[[D John] [T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D John] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D John] [T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D John] [T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D John] [T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.admire" and reconstructed it = [[D John] [T/fin [PRO.v [PRO.admire D{N}]]]]
					Extracted head "Mary" from D and created [[D John] [T/fin [PRO.v [PRO.admire [D Mary]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin [v [admire [D Mary]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D John]:27 from memory buffer into Spec of PRO.v
					Result [[D John]:27 [T/fin [(DP):27 [PRO.v [PRO.admire [D Mary]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):27.
					Feature PHI:GEN:M was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):27.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):27.
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):27.
			= [[D John] [T/fin [[D John] [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D John]:27 [T/fin [(DP):27 [PRO.v [PRO.admire [D Mary]]]]]] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin 3. [D John] )
				PRO.admire with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: 2. [D John] 3. T/fin 4. [D John] )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M*', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D John] T/fin{v,V}] D]
			Transferring [[D John] T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D John] T/fin{v,V}].
					Extracted head "PRO.v{V}" from T/fin and created [[D John] [T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [[D John] [T/fin [PRO.v PRO.admire]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin [v admire]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D John]:28 from memory buffer into Spec of PRO.v
					Result [[D John]:28 [T/fin [(DP):28 [PRO.v PRO.admire]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):28.
					Feature PHI:GEN:M was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):28.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):28.
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):28.
			=[[[D John]:28 [T/fin [(DP):28 [PRO.v PRO.admire]]]] D]

20.

		Consume "Mary"

		[[[D John] [T/fin [[D John] [v admire]]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[[[D John]:28 [T/fin [(DP):28 [PRO.v PRO.admire]]]] D{N}]

21.
	>>>	Trying candidate parse [[[D John] [T/fin [[D John] [v admire]]]] D{N}] (2.)
		Reconstructing...
			Transferring [[[D John]:28 [T/fin [(DP):28 [PRO.v PRO.admire]]]] D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[D John]:28 [T/fin [(DP):28 [PRO.v PRO.admire]]]] D{N}].
					Extracted head "Mary" from D and created [[[D John]:28 [T/fin [(DP):28 [PRO.v PRO.admire]]]] [D Mary]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D John] [T/fin [[D John] [v admire]]]] [D Mary]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [[D John]:28 [T/fin [(DP):28 [PRO.v PRO.admire]]]].
					Extraposition will be tried on [[[D John]:28 [T/fin [(DP):28 [PRO.v PRO.admire]]]] [D Mary]].
						<D Mary> was made an adjunct.
					<D Mary> was made adjunct by an extraposition rule.
				Agreement reconstruction:
			= [[[D John] [T/fin [[D John] [v admire]]]] <D Mary>]
		Checking LF-interface conditions.
			Trying to transfer [[[D John]:28 [T/fin [(DP):28 [PRO.v PRO.admire]]]] <D Mary>] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin 3. [D John] )
				PRO.admire with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin 3. [D John] )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M*', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
D: [D]
Mary: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admire-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admire".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 28
['we', 'admires', 'Mary']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "we" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$pl', '$D', 'we-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.

		Consume "$pl"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
			=D

7.

		Consume "we"

		D + we
			Filtering out impossible merge sites...
			Sink "we" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*we]
			=D{N}

8.
		Next word "admires" contains multiple morphemes ['$[-s]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "we" from D and created [D we]
					Reconstructing head movement for D{N}.
					Extracted head "we" from D and created [D we]
					D was opened into [D we].
				Feature processing:
				Floater movement reconstruction:
					= [D we]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D we] T/fin]

10.

		Consume "v"

		[[D we] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D we] T/fin{v}]

11.

		Consume "admire"

		[[D we] T/fin{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[D we] T/fin{v,V}]

12.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D we] T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D we] T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D we] T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D we] T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D we] T/fin{v,V}]

17.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D we] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[D we] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D we] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[D we] [T/fin{v,V} D]]

18.

		Consume "Mary"

		[[D we] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[[D we] [T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D we] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D we] [T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D we] [T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D we] [T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.admire" and reconstructed it = [[D we] [T/fin [PRO.v [PRO.admire D{N}]]]]
					Extracted head "Mary" from D and created [[D we] [T/fin [PRO.v [PRO.admire [D Mary]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D we] [T/fin [v [admire [D Mary]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D we " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D we]:31 from memory buffer into Spec of PRO.v
					Result [[D we]:31 [T/fin [(DP):31 [PRO.v [PRO.admire [D Mary]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):31.
					Feature PHI:GEN:N was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:GEN:N by phi-Agree from (DP):31.
					Feature PHI:NUM:PL was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:NUM:PL by phi-Agree from (DP):31.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):31.
			= [[D we] [T/fin [[D we] [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D we]:31 [T/fin [(DP):31 [PRO.v [PRO.admire [D Mary]]]]]] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D we]    (alternatives: 2. T/fin 3. [D we] )
				PRO.admire with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: 2. [D we] 3. T/fin 4. [D we] )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:N*', 'PHI:NUM:PL*', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL', 'null']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D]
we: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D we] T/fin{v,V}] D]
			Transferring [[D we] T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D we] T/fin{v,V}].
					Extracted head "PRO.v{V}" from T/fin and created [[D we] [T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [[D we] [T/fin [PRO.v PRO.admire]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D we] [T/fin [v admire]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D we " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D we]:32 from memory buffer into Spec of PRO.v
					Result [[D we]:32 [T/fin [(DP):32 [PRO.v PRO.admire]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):32.
					Feature PHI:GEN:N was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:GEN:N by phi-Agree from (DP):32.
					Feature PHI:NUM:PL was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:NUM:PL by phi-Agree from (DP):32.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):32.
			=[[[D we]:32 [T/fin [(DP):32 [PRO.v PRO.admire]]]] D]

20.

		Consume "Mary"

		[[[D we] [T/fin [[D we] [v admire]]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[[[D we]:32 [T/fin [(DP):32 [PRO.v PRO.admire]]]] D{N}]

21.
	>>>	Trying candidate parse [[[D we] [T/fin [[D we] [v admire]]]] D{N}] (2.)
		Reconstructing...
			Transferring [[[D we]:32 [T/fin [(DP):32 [PRO.v PRO.admire]]]] D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[D we]:32 [T/fin [(DP):32 [PRO.v PRO.admire]]]] D{N}].
					Extracted head "Mary" from D and created [[[D we]:32 [T/fin [(DP):32 [PRO.v PRO.admire]]]] [D Mary]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D we] [T/fin [[D we] [v admire]]]] [D Mary]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [[D we]:32 [T/fin [(DP):32 [PRO.v PRO.admire]]]].
					Extraposition will be tried on [[[D we]:32 [T/fin [(DP):32 [PRO.v PRO.admire]]]] [D Mary]].
						<D Mary> was made an adjunct.
					<D Mary> was made adjunct by an extraposition rule.
				Agreement reconstruction:
			= [[[D we] [T/fin [[D we] [v admire]]]] <D Mary>]
		Checking LF-interface conditions.
			Trying to transfer [[[D we]:32 [T/fin [(DP):32 [PRO.v PRO.admire]]]] <D Mary>] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D we]    (alternatives: 2. T/fin 3. [D we] )
				PRO.admire with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D we]    (alternatives: 2. T/fin 3. [D we] )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:N*', 'PHI:NUM:PL*', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL', 'null']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D]
we: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
D: [D]
Mary: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admire-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admires".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "we-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$pl".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$1p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "we".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 29
['io', 'adori', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "io" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$sg', '$D', 'I-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
			=D

7.

		Consume "I"

		D + I
			Filtering out impossible merge sites...
			Sink "I" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*I]
			=D{N}

8.
		Next word "adori" contains multiple morphemes ['$[-i]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "I" from D and created [D I]
					Reconstructing head movement for D{N}.
					Extracted head "I" from D and created [D I]
					D was opened into [D I].
				Feature processing:
				Floater movement reconstruction:
					= [D I]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D I] PRO.T/fin]

10.

		Consume "v"

		[[D I] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D I] PRO.T/fin{v}]

11.

		Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[D I] PRO.T/fin{v,V}]

12.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D I] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D I] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D I] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D I] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D I] PRO.T/fin{v,V}]

17.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D I] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D I] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D I] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D I] [PRO.T/fin{v,V} D]]

18.

		Consume "Luisa"

		[[D I] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D I] [PRO.T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D I] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D I] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D I] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D I] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[D I] [PRO.T/fin [PRO.v [PRO.adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D I] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D I]:24 from memory buffer into Spec of PRO.v
					Result [[D I]:24 [PRO.T/fin [(DP):24 [PRO.v [PRO.adora [D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):24.
					phi.T/fin acquired PHI:GEN:N by phi-Agree from (DP):24.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from (DP):24.
					Feature PHI:PER:1 was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):24.
			= [[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D I]:24 [T/fin [(DP):24 [PRO.v [PRO.adora [D Luisa]]]]]] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin 3. [D I] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D I] 3. T/fin 4. [D I] )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D I] PRO.T/fin{v,V}] D]
			Transferring [[D I] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D I] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[D I] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [[D I] [PRO.T/fin [PRO.v PRO.adora]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v adora]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D I]:25 from memory buffer into Spec of PRO.v
					Result [[D I]:25 [PRO.T/fin [(DP):25 [PRO.v PRO.adora]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):25.
					phi.T/fin acquired PHI:GEN:N by phi-Agree from (DP):25.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from (DP):25.
					Feature PHI:PER:1 was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):25.
			=[[[D I]:25 [T/fin [(DP):25 [PRO.v PRO.adora]]]] D]

20.

		Consume "Luisa"

		[[[D I] [T/fin [[D I] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[[D I]:25 [T/fin [(DP):25 [PRO.v PRO.adora]]]] D{N}]

21.
	>>>	Trying candidate parse [[[D I] [T/fin [[D I] [v adora]]]] D{N}] (2.)
		Reconstructing...
			Transferring [[[D I]:25 [T/fin [(DP):25 [PRO.v PRO.adora]]]] D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[D I]:25 [T/fin [(DP):25 [PRO.v PRO.adora]]]] D{N}].
					Extracted head "Luisa" from D and created [[[D I]:25 [T/fin [(DP):25 [PRO.v PRO.adora]]]] [D Luisa]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D I] [T/fin [[D I] [v adora]]]] [D Luisa]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [[D I]:25 [T/fin [(DP):25 [PRO.v PRO.adora]]]].
					Extraposition will be tried on [[[D I]:25 [T/fin [(DP):25 [PRO.v PRO.adora]]]] [D Luisa]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
				Agreement reconstruction:
			= [[[D I] [T/fin [[D I] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			Trying to transfer [[[D I]:25 [T/fin [(DP):25 [PRO.v PRO.adora]]]] <D Luisa>] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin 3. [D I] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin 3. [D I] )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D]
Luisa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adora-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adori".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "I-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$1p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 30
['io', 'adora', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "io" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$sg', '$D', 'I-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
			=D

7.

		Consume "I"

		D + I
			Filtering out impossible merge sites...
			Sink "I" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*I]
			=D{N}

8.
		Next word "adora" contains multiple morphemes ['$[-a]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "I" from D and created [D I]
					Reconstructing head movement for D{N}.
					Extracted head "I" from D and created [D I]
					D was opened into [D I].
				Feature processing:
				Floater movement reconstruction:
					= [D I]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D I] PRO.T/fin]

10.

		Consume "v"

		[[D I] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D I] PRO.T/fin{v}]

11.

		Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[D I] PRO.T/fin{v,V}]

12.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D I] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D I] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D I] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D I] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D I] PRO.T/fin{v,V}]

17.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D I] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D I] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D I] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D I] [PRO.T/fin{v,V} D]]

18.

		Consume "Luisa"

		[[D I] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D I] [PRO.T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D I] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D I] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D I] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D I] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[D I] [PRO.T/fin [PRO.v [PRO.adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D I] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D I]:28 from memory buffer into Spec of PRO.v
					Result [[D I]:28 [PRO.T/fin [(DP):28 [PRO.v [PRO.adora [D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):28.
					phi.T/fin acquired PHI:GEN:N by phi-Agree from (DP):28.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from (DP):28.
					Feature PHI:PER:1 was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):28.
			= [[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D I]:28 [T/fin [(DP):28 [PRO.v [PRO.adora [D Luisa]]]]]] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin 3. [D I] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D I] 3. T/fin 4. [D I] )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D I] PRO.T/fin{v,V}] D]
			Transferring [[D I] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D I] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[D I] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [[D I] [PRO.T/fin [PRO.v PRO.adora]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v adora]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D I]:29 from memory buffer into Spec of PRO.v
					Result [[D I]:29 [PRO.T/fin [(DP):29 [PRO.v PRO.adora]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):29.
					phi.T/fin acquired PHI:GEN:N by phi-Agree from (DP):29.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from (DP):29.
					Feature PHI:PER:1 was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):29.
			=[[[D I]:29 [T/fin [(DP):29 [PRO.v PRO.adora]]]] D]

20.

		Consume "Luisa"

		[[[D I] [T/fin [[D I] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[[D I]:29 [T/fin [(DP):29 [PRO.v PRO.adora]]]] D{N}]

21.
	>>>	Trying candidate parse [[[D I] [T/fin [[D I] [v adora]]]] D{N}] (2.)
		Reconstructing...
			Transferring [[[D I]:29 [T/fin [(DP):29 [PRO.v PRO.adora]]]] D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[D I]:29 [T/fin [(DP):29 [PRO.v PRO.adora]]]] D{N}].
					Extracted head "Luisa" from D and created [[[D I]:29 [T/fin [(DP):29 [PRO.v PRO.adora]]]] [D Luisa]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D I] [T/fin [[D I] [v adora]]]] [D Luisa]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [[D I]:29 [T/fin [(DP):29 [PRO.v PRO.adora]]]].
					Extraposition will be tried on [[[D I]:29 [T/fin [(DP):29 [PRO.v PRO.adora]]]] [D Luisa]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
				Agreement reconstruction:
			= [[[D I] [T/fin [[D I] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			Trying to transfer [[[D I]:29 [T/fin [(DP):29 [PRO.v PRO.adora]]]] <D Luisa>] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin 3. [D I] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin 3. [D I] )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:SG', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D]
Luisa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adora-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adora".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "I-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$1p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 31
['io', 'adorate', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "io" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$sg', '$D', 'I-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
			=D

7.

		Consume "I"

		D + I
			Filtering out impossible merge sites...
			Sink "I" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*I]
			=D{N}

8.
		Next word "adorate" contains multiple morphemes ['$[-te]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "I" from D and created [D I]
					Reconstructing head movement for D{N}.
					Extracted head "I" from D and created [D I]
					D was opened into [D I].
				Feature processing:
				Floater movement reconstruction:
					= [D I]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D I] PRO.T/fin]

10.

		Consume "v"

		[[D I] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D I] PRO.T/fin{v}]

11.

		Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[D I] PRO.T/fin{v,V}]

12.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D I] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D I] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D I] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D I] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D I] PRO.T/fin{v,V}]

17.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D I] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D I] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D I] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D I] [PRO.T/fin{v,V} D]]

18.

		Consume "Luisa"

		[[D I] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D I] [PRO.T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D I] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D I] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D I] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D I] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[D I] [PRO.T/fin [PRO.v [PRO.adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D I] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D I]:32 from memory buffer into Spec of PRO.v
					Result [[D I]:32 [PRO.T/fin [(DP):32 [PRO.v [PRO.adora [D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):32.
					phi.T/fin acquired PHI:GEN:N by phi-Agree from (DP):32.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):32.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):32.
			= [[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D I]:32 [T/fin [(DP):32 [PRO.v [PRO.adora [D Luisa]]]]]] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin 3. [D I] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D I] 3. T/fin 4. [D I] )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D I] PRO.T/fin{v,V}] D]
			Transferring [[D I] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D I] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[D I] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [[D I] [PRO.T/fin [PRO.v PRO.adora]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v adora]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D I]:33 from memory buffer into Spec of PRO.v
					Result [[D I]:33 [PRO.T/fin [(DP):33 [PRO.v PRO.adora]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):33.
					phi.T/fin acquired PHI:GEN:N by phi-Agree from (DP):33.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):33.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):33.
			=[[[D I]:33 [T/fin [(DP):33 [PRO.v PRO.adora]]]] D]

20.

		Consume "Luisa"

		[[[D I] [T/fin [[D I] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[[D I]:33 [T/fin [(DP):33 [PRO.v PRO.adora]]]] D{N}]

21.
	>>>	Trying candidate parse [[[D I] [T/fin [[D I] [v adora]]]] D{N}] (2.)
		Reconstructing...
			Transferring [[[D I]:33 [T/fin [(DP):33 [PRO.v PRO.adora]]]] D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[D I]:33 [T/fin [(DP):33 [PRO.v PRO.adora]]]] D{N}].
					Extracted head "Luisa" from D and created [[[D I]:33 [T/fin [(DP):33 [PRO.v PRO.adora]]]] [D Luisa]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D I] [T/fin [[D I] [v adora]]]] [D Luisa]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [[D I]:33 [T/fin [(DP):33 [PRO.v PRO.adora]]]].
					Extraposition will be tried on [[[D I]:33 [T/fin [(DP):33 [PRO.v PRO.adora]]]] [D Luisa]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
				Agreement reconstruction:
			= [[[D I] [T/fin [[D I] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			Trying to transfer [[[D I]:33 [T/fin [(DP):33 [PRO.v PRO.adora]]]] <D Luisa>] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin 3. [D I] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin 3. [D I] )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D]
Luisa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adora-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adorate".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "I-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$1p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 32
['io', 'adorano', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "io" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$sg', '$D', 'I-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
			=D

7.

		Consume "I"

		D + I
			Filtering out impossible merge sites...
			Sink "I" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*I]
			=D{N}

8.
		Next word "adorano" contains multiple morphemes ['$[-no]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "I" from D and created [D I]
					Reconstructing head movement for D{N}.
					Extracted head "I" from D and created [D I]
					D was opened into [D I].
				Feature processing:
				Floater movement reconstruction:
					= [D I]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D I] PRO.T/fin]

10.

		Consume "v"

		[[D I] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D I] PRO.T/fin{v}]

11.

		Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[D I] PRO.T/fin{v,V}]

12.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D I] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D I] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D I] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D I] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D I] PRO.T/fin{v,V}]

17.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D I] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D I] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D I] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D I] [PRO.T/fin{v,V} D]]

18.

		Consume "Luisa"

		[[D I] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D I] [PRO.T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D I] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D I] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D I] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D I] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[D I] [PRO.T/fin [PRO.v [PRO.adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D I] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D I]:36 from memory buffer into Spec of PRO.v
					Result [[D I]:36 [PRO.T/fin [(DP):36 [PRO.v [PRO.adora [D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):36.
					phi.T/fin acquired PHI:GEN:N by phi-Agree from (DP):36.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):36.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):36.
			= [[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D I]:36 [T/fin [(DP):36 [PRO.v [PRO.adora [D Luisa]]]]]] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin 3. [D I] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D I] 3. T/fin 4. [D I] )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D I] PRO.T/fin{v,V}] D]
			Transferring [[D I] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D I] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[D I] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [[D I] [PRO.T/fin [PRO.v PRO.adora]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v adora]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D I]:37 from memory buffer into Spec of PRO.v
					Result [[D I]:37 [PRO.T/fin [(DP):37 [PRO.v PRO.adora]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):37.
					phi.T/fin acquired PHI:GEN:N by phi-Agree from (DP):37.
					Feature PHI:NUM:SG was not matched in phi.T/fin and was marked as bad.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):37.
					Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):37.
			=[[[D I]:37 [T/fin [(DP):37 [PRO.v PRO.adora]]]] D]

20.

		Consume "Luisa"

		[[[D I] [T/fin [[D I] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[[D I]:37 [T/fin [(DP):37 [PRO.v PRO.adora]]]] D{N}]

21.
	>>>	Trying candidate parse [[[D I] [T/fin [[D I] [v adora]]]] D{N}] (2.)
		Reconstructing...
			Transferring [[[D I]:37 [T/fin [(DP):37 [PRO.v PRO.adora]]]] D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[D I]:37 [T/fin [(DP):37 [PRO.v PRO.adora]]]] D{N}].
					Extracted head "Luisa" from D and created [[[D I]:37 [T/fin [(DP):37 [PRO.v PRO.adora]]]] [D Luisa]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D I] [T/fin [[D I] [v adora]]]] [D Luisa]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [[D I]:37 [T/fin [(DP):37 [PRO.v PRO.adora]]]].
					Extraposition will be tried on [[[D I]:37 [T/fin [(DP):37 [PRO.v PRO.adora]]]] [D Luisa]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
				Agreement reconstruction:
			= [[[D I] [T/fin [[D I] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			Trying to transfer [[[D I]:37 [T/fin [(DP):37 [PRO.v PRO.adora]]]] <D Luisa>] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin 3. [D I] )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin 3. [D I] )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
I: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D]
Luisa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adora-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adorano".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "I-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$1p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 33
['Merjaa', 'ihailen', 'mina']


Using lexicon "lexicon.txt".
			=None

1.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
			=D

8.

		Consume "Merja-"

		D + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=D{N}

9.
		Next word "ihailen" contains multiple morphemes ['$[-n]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					D was opened into [D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Merja-] PRO.T/fin]

11.

		Consume "v"

		[[D Merja-] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D Merja-] PRO.T/fin{v}]

12.

		Consume "ihaile-"

		[[D Merja-] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[D Merja-] PRO.T/fin{v,V}]

13.
		Next word "mina" contains multiple morphemes ['$hum', '$def', '$1p', '$sg', '$nom', '$D', 'mina-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D Merja-] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=[[D Merja-] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=[[D Merja-] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=[[D Merja-] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=[[D Merja-] PRO.T/fin{v,V}]

18.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		[[D Merja-] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D Merja-] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D Merja-] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D Merja-] [PRO.T/fin{v,V} D]]

19.

		Consume "mina"

		[[D Merja-] [T/fin{v,V} D]] + mina
			Filtering out impossible merge sites...
			Sink "mina" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mina]
			=[[D Merja-] [PRO.T/fin{v,V} D{N}]]

20.
	>>>	Trying candidate parse [[D Merja-] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D Merja-] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Merja-] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D Merja-] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]
					Extracted head "mina" from D and created [[D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- [D mina]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Merja-] failed to tail [-VAL][ARG]
					Dropping [D Merja-]
						<D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [<D Merja->:61 [PRO.T/fin [PRO.v [<DP>:61 [PRO.ihaile- [D mina]]]]]]
					D at the right failed to tail [ARG][CAT:FIN][VAL]
						<D mina> was made an adjunct.
					Dropping <D mina>
						Floater <D mina> dropped.
						 = [<D Merja->:61 [PRO.T/fin [<DP>:62 [PRO.v [<DP>:61 [PRO.ihaile- <D mina>:62]]]]]]
					= [<D Merja-> [T/fin [<D mina> [v [<D Merja-> [ihaile- <D mina>]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:62.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:62.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from <DP>:62.
			= [<D Merja-> [T/fin [<D mina> [v [<D Merja-> [ihaile- <D mina>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Merja->:61 [phi.T/fin [<DP>:62 [PRO.v [<DP>:61 [PRO.ihaile- <D mina>:62]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D Merja-> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D Merja-> 3. <D mina> 4. T/fin 5. <D Merja-> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ihaile-(<D Merja->)', 'PRO.v(<D mina>)']
!--->		Tests passed (with 20/178 operations) <------------------------------------
		Solution:
		[<D Merja-> [T/fin [<D mina> [v [<D Merja-> [ihaile- <D mina>]]]]]]
		Grammar: [<D Merja->:1 [phi.T/fin [<DP>:2 [PRO.v [<DP>:1 [PRO.ihaile- <D mina>:2]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:2 [v [__:1 [V DP:2]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']

D: [D]
Merja-: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
mina: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 34
['Merjaa', 'ihailet', 'sina']


Using lexicon "lexicon.txt".
			=None

1.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
			=D

8.

		Consume "Merja-"

		D + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=D{N}

9.
		Next word "ihailet" contains multiple morphemes ['$[-t]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					D was opened into [D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Merja-] PRO.T/fin]

11.

		Consume "v"

		[[D Merja-] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D Merja-] PRO.T/fin{v}]

12.

		Consume "ihaile-"

		[[D Merja-] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[D Merja-] PRO.T/fin{v,V}]

13.
		Next word "sina" contains multiple morphemes ['$hum', '$def', '$2p', '$sg', '$nom', '$D', 'sina-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D Merja-] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$2p"

			=[[D Merja-] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:2'] into working memory.

		Consume "$sg"

			=[[D Merja-] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=[[D Merja-] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=[[D Merja-] PRO.T/fin{v,V}]

18.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		[[D Merja-] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D Merja-] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D Merja-] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D Merja-] [PRO.T/fin{v,V} D]]

19.

		Consume "sina"

		[[D Merja-] [T/fin{v,V} D]] + sina
			Filtering out impossible merge sites...
			Sink "sina" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*sina]
			=[[D Merja-] [PRO.T/fin{v,V} D{N}]]

20.
	>>>	Trying candidate parse [[D Merja-] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D Merja-] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Merja-] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D Merja-] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]
					Extracted head "sina" from D and created [[D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- [D sina]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Merja-] failed to tail [-VAL][ARG]
					Dropping [D Merja-]
						<D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [<D Merja->:65 [PRO.T/fin [PRO.v [<DP>:65 [PRO.ihaile- [D sina]]]]]]
					D at the right failed to tail [ARG][CAT:FIN][VAL]
						<D sina> was made an adjunct.
					Dropping <D sina>
						Floater <D sina> dropped.
						 = [<D Merja->:65 [PRO.T/fin [<DP>:66 [PRO.v [<DP>:65 [PRO.ihaile- <D sina>:66]]]]]]
					= [<D Merja-> [T/fin [<D sina> [v [<D Merja-> [ihaile- <D sina>]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:66.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:66.
					phi.T/fin acquired PHI:PER:2 by phi-Agree from <DP>:66.
			= [<D Merja-> [T/fin [<D sina> [v [<D Merja-> [ihaile- <D sina>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Merja->:65 [phi.T/fin [<DP>:66 [PRO.v [<DP>:65 [PRO.ihaile- <D sina>:66]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D sina>    (alternatives: 2. T/fin 3. <D Merja-> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D Merja-> 3. <D sina> 4. T/fin 5. <D Merja-> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ihaile-(<D Merja->)', 'PRO.v(<D sina>)']
!--->		Tests passed (with 20/178 operations) <------------------------------------
		Solution:
		[<D Merja-> [T/fin [<D sina> [v [<D Merja-> [ihaile- <D sina>]]]]]]
		Grammar: [<D Merja->:1 [phi.T/fin [<DP>:2 [PRO.v [<DP>:1 [PRO.ihaile- <D sina>:2]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:2 [v [__:1 [V DP:2]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
sina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:sina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'VAL']
sina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:sina', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
sina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:sina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'VAL']
sina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:sina', 'SPEC:A']

D: [D]
Merja-: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
sina: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 35
['Merjaa', 'ihailee', 'han']


Using lexicon "lexicon.txt".
			=None

1.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
			=D

8.

		Consume "Merja-"

		D + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=D{N}

9.
		Next word "ihailee" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					D was opened into [D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Merja-] PRO.T/fin]

11.

		Consume "v"

		[[D Merja-] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D Merja-] PRO.T/fin{v}]

12.

		Consume "ihaile-"

		[[D Merja-] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[D Merja-] PRO.T/fin{v,V}]

13.
		Next word "han" contains multiple morphemes ['$hum', '$def', '$3p', '$sg', '$nom', '$D', 'han-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D Merja-] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D Merja-] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D Merja-] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=[[D Merja-] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=[[D Merja-] PRO.T/fin{v,V}]

18.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		[[D Merja-] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D Merja-] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D Merja-] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D Merja-] [PRO.T/fin{v,V} D]]

19.

		Consume "han"

		[[D Merja-] [T/fin{v,V} D]] + han
			Filtering out impossible merge sites...
			Sink "han" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*han]
			=[[D Merja-] [PRO.T/fin{v,V} D{N}]]

20.
	>>>	Trying candidate parse [[D Merja-] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D Merja-] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Merja-] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D Merja-] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]
					Extracted head "han" from D and created [[D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- [D han]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Merja-] failed to tail [-VAL][ARG]
					Dropping [D Merja-]
						<D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [<D Merja->:69 [PRO.T/fin [PRO.v [<DP>:69 [PRO.ihaile- [D han]]]]]]
					D at the right failed to tail [ARG][CAT:FIN][VAL]
						<D han> was made an adjunct.
					Dropping <D han>
						Floater <D han> dropped.
						 = [<D Merja->:69 [PRO.T/fin [<DP>:70 [PRO.v [<DP>:69 [PRO.ihaile- <D han>:70]]]]]]
					= [<D Merja-> [T/fin [<D han> [v [<D Merja-> [ihaile- <D han>]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:70.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:70.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:70.
			= [<D Merja-> [T/fin [<D han> [v [<D Merja-> [ihaile- <D han>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Merja->:69 [phi.T/fin [<DP>:70 [PRO.v [<DP>:69 [PRO.ihaile- <D han>:70]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D han>    (alternatives: 2. T/fin 3. <D Merja-> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D Merja-> 3. <D han> 4. T/fin 5. <D Merja-> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ihaile-(<D Merja->)', 'PRO.v(<D han>)']
!--->		Tests passed (with 20/178 operations) <------------------------------------
		Solution:
		[<D Merja-> [T/fin [<D han> [v [<D Merja-> [ihaile- <D han>]]]]]]
		Grammar: [<D Merja->:1 [phi.T/fin [<DP>:2 [PRO.v [<DP>:1 [PRO.ihaile- <D han>:2]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:2 [v [__:1 [V DP:2]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A']

D: [D]
Merja-: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
han: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 36
['Merjaa', 'ihailemme', 'me']


Using lexicon "lexicon.txt".
			=None

1.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
			=D

8.

		Consume "Merja-"

		D + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=D{N}

9.
		Next word "ihailemme" contains multiple morphemes ['$[-mme]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					D was opened into [D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Merja-] PRO.T/fin]

11.

		Consume "v"

		[[D Merja-] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D Merja-] PRO.T/fin{v}]

12.

		Consume "ihaile-"

		[[D Merja-] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[D Merja-] PRO.T/fin{v,V}]

13.
		Next word "me" contains multiple morphemes ['$hum', '$def', '$1p', '$pl', '$nom', '$D', 'me-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D Merja-] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=[[D Merja-] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:1'] into working memory.

		Consume "$pl"

			=[[D Merja-] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:PL'] into working memory.

		Consume "$nom"

			=[[D Merja-] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=[[D Merja-] PRO.T/fin{v,V}]

18.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		[[D Merja-] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D Merja-] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D Merja-] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D Merja-] [PRO.T/fin{v,V} D]]

19.

		Consume "me"

		[[D Merja-] [T/fin{v,V} D]] + me
			Filtering out impossible merge sites...
			Sink "me" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*me]
			=[[D Merja-] [PRO.T/fin{v,V} D{N}]]

20.
	>>>	Trying candidate parse [[D Merja-] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D Merja-] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Merja-] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D Merja-] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]
					Extracted head "me" from D and created [[D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- [D me]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Merja-] failed to tail [-VAL][ARG]
					Dropping [D Merja-]
						<D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [<D Merja->:73 [PRO.T/fin [PRO.v [<DP>:73 [PRO.ihaile- [D me]]]]]]
					D at the right failed to tail [ARG][CAT:FIN][VAL]
						<D me> was made an adjunct.
					Dropping <D me>
						Floater <D me> dropped.
						 = [<D Merja->:73 [PRO.T/fin [<DP>:74 [PRO.v [<DP>:73 [PRO.ihaile- <D me>:74]]]]]]
					= [<D Merja-> [T/fin [<D me> [v [<D Merja-> [ihaile- <D me>]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:74.
					phi.T/fin acquired PHI:NUM:PL by phi-Agree from <DP>:74.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from <DP>:74.
			= [<D Merja-> [T/fin [<D me> [v [<D Merja-> [ihaile- <D me>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Merja->:73 [phi.T/fin [<DP>:74 [PRO.v [<DP>:73 [PRO.ihaile- <D me>:74]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D me>    (alternatives: 2. T/fin 3. <D Merja-> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D Merja-> 3. <D me> 4. T/fin 5. <D Merja-> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ihaile-(<D Merja->)', 'PRO.v(<D me>)']
!--->		Tests passed (with 20/178 operations) <------------------------------------
		Solution:
		[<D Merja-> [T/fin [<D me> [v [<D Merja-> [ihaile- <D me>]]]]]]
		Grammar: [<D Merja->:1 [phi.T/fin [<DP>:2 [PRO.v [<DP>:1 [PRO.ihaile- <D me>:2]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:2 [v [__:1 [V DP:2]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
me:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:we', 'PF:me', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
me:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:we', 'PF:me', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
me:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:we', 'PF:me', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
me:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:we', 'PF:me', 'SPEC:A']

D: [D]
Merja-: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
me: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 37
['Merjaa', 'ihailette', 'te']


Using lexicon "lexicon.txt".
			=None

1.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
			=D

8.

		Consume "Merja-"

		D + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=D{N}

9.
		Next word "ihailette" contains multiple morphemes ['$[-tte]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					D was opened into [D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Merja-] PRO.T/fin]

11.

		Consume "v"

		[[D Merja-] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D Merja-] PRO.T/fin{v}]

12.

		Consume "ihaile-"

		[[D Merja-] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[D Merja-] PRO.T/fin{v,V}]

13.
		Next word "te" contains multiple morphemes ['$hum', '$def', '$2p', '$pl', '$nom', '$D', 'te-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D Merja-] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$2p"

			=[[D Merja-] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:2'] into working memory.

		Consume "$pl"

			=[[D Merja-] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:PL'] into working memory.

		Consume "$nom"

			=[[D Merja-] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=[[D Merja-] PRO.T/fin{v,V}]

18.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		[[D Merja-] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D Merja-] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D Merja-] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D Merja-] [PRO.T/fin{v,V} D]]

19.

		Consume "te"

		[[D Merja-] [T/fin{v,V} D]] + te
			Filtering out impossible merge sites...
			Sink "te" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*te]
			=[[D Merja-] [PRO.T/fin{v,V} D{N}]]

20.
	>>>	Trying candidate parse [[D Merja-] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D Merja-] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Merja-] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D Merja-] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]
					Extracted head "te" from D and created [[D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- [D te]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Merja-] failed to tail [-VAL][ARG]
					Dropping [D Merja-]
						<D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [<D Merja->:77 [PRO.T/fin [PRO.v [<DP>:77 [PRO.ihaile- [D te]]]]]]
					D at the right failed to tail [ARG][CAT:FIN][VAL]
						<D te> was made an adjunct.
					Dropping <D te>
						Floater <D te> dropped.
						 = [<D Merja->:77 [PRO.T/fin [<DP>:78 [PRO.v [<DP>:77 [PRO.ihaile- <D te>:78]]]]]]
					= [<D Merja-> [T/fin [<D te> [v [<D Merja-> [ihaile- <D te>]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:78.
					phi.T/fin acquired PHI:NUM:PL by phi-Agree from <DP>:78.
					phi.T/fin acquired PHI:PER:2 by phi-Agree from <DP>:78.
			= [<D Merja-> [T/fin [<D te> [v [<D Merja-> [ihaile- <D te>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Merja->:77 [phi.T/fin [<DP>:78 [PRO.v [<DP>:77 [PRO.ihaile- <D te>:78]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D te>    (alternatives: 2. T/fin 3. <D Merja-> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D Merja-> 3. <D te> 4. T/fin 5. <D Merja-> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ihaile-(<D Merja->)', 'PRO.v(<D te>)']
!--->		Tests passed (with 20/178 operations) <------------------------------------
		Solution:
		[<D Merja-> [T/fin [<D te> [v [<D Merja-> [ihaile- <D te>]]]]]]
		Grammar: [<D Merja->:1 [phi.T/fin [<DP>:2 [PRO.v [<DP>:1 [PRO.ihaile- <D te>:2]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:2 [v [__:1 [V DP:2]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
te:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:te', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'VAL']
te:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:te', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
te:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:te', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'VAL']
te:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:you', 'PF:te', 'SPEC:A']

D: [D]
Merja-: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
te: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 38
['Merjaa', 'ihailevat', 'he_FI']


Using lexicon "lexicon.txt".
			=None

1.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
			=D

8.

		Consume "Merja-"

		D + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=D{N}

9.
		Next word "ihailevat" contains multiple morphemes ['$[-vat]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					D was opened into [D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Merja-] PRO.T/fin]

11.

		Consume "v"

		[[D Merja-] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D Merja-] PRO.T/fin{v}]

12.

		Consume "ihaile-"

		[[D Merja-] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[D Merja-] PRO.T/fin{v,V}]

13.
		Next word "he_FI" contains multiple morphemes ['$hum', '$def', '$3p', '$pl', '$nom', '$D', 'he-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D Merja-] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D Merja-] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$pl"

			=[[D Merja-] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:PL'] into working memory.

		Consume "$nom"

			=[[D Merja-] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=[[D Merja-] PRO.T/fin{v,V}]

18.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		[[D Merja-] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D Merja-] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D Merja-] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D Merja-] [PRO.T/fin{v,V} D]]

19.
		Ambiguous lexical item "he-" detected.

		Consume "he"

		[[D Merja-] [T/fin{v,V} D]] + he
			Filtering out impossible merge sites...
			Sink "he" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*he]
			=[[D Merja-] [PRO.T/fin{v,V} D{N}]]

20.
	>>>	Trying candidate parse [[D Merja-] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D Merja-] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Merja-] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D Merja-] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]
					Extracted head "he" from D and created [[D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- [D he]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Merja-] failed to tail [-VAL][ARG]
					Dropping [D Merja-]
						<D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [<D Merja->:81 [PRO.T/fin [PRO.v [<DP>:81 [PRO.ihaile- [D he]]]]]]
					D at the right failed to tail [ARG][CAT:FIN][VAL]
						<D he> was made an adjunct.
					Dropping <D he>
						Floater <D he> dropped.
						 = [<D Merja->:81 [PRO.T/fin [<DP>:82 [PRO.v [<DP>:81 [PRO.ihaile- <D he>:82]]]]]]
					= [<D Merja-> [T/fin [<D he> [v [<D Merja-> [ihaile- <D he>]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:82.
					phi.T/fin acquired PHI:NUM:PL by phi-Agree from <DP>:82.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:82.
			= [<D Merja-> [T/fin [<D he> [v [<D Merja-> [ihaile- <D he>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Merja->:81 [phi.T/fin [<DP>:82 [PRO.v [<DP>:81 [PRO.ihaile- <D he>:82]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D he>    (alternatives: 2. T/fin 3. <D Merja-> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D Merja-> 3. <D he> 4. T/fin 5. <D Merja-> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ihaile-(<D Merja->)', 'PRO.v(<D he>)']
!--->		Tests passed (with 20/179 operations) <------------------------------------
		Solution:
		[<D Merja-> [T/fin [<D he> [v [<D Merja-> [ihaile- <D he>]]]]]]
		Grammar: [<D Merja->:1 [phi.T/fin [<DP>:2 [PRO.v [<DP>:1 [PRO.ihaile- <D he>:2]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:2 [v [__:1 [V DP:2]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:3', 'VAL']
he:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:they', 'PF:he', 'SPEC:A']

D: [D]
Merja-: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
he: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "he"

		[[D Merja-] [T/fin{v,V} D]] + he
			Filtering out impossible merge sites...
			Sink "he" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*he]
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 39
['kuka', 'ihailee', 'Merjaa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "kuka" contains multiple morphemes ['$hum', '$def', '$3p', '$sg', '$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$wh"

			=None

6.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D/WH', 'CAT:-ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

8.

		Consume "kuka"

		D + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=D{N}

9.
		Next word "ihailee" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "kuka" from D and created [D kuka]
					Reconstructing head movement for D{N}.
					Extracted head "kuka" from D and created [D kuka]
					D was opened into [D kuka].
				Feature processing:
				Floater movement reconstruction:
					= [D kuka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D kuka] PRO.T/fin]

11.

		Consume "v"

		[[D kuka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D kuka] PRO.T/fin{v}]

12.

		Consume "ihaile-"

		[[D kuka] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[D kuka] PRO.T/fin{v,V}]

13.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[D kuka] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D kuka] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D kuka] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D kuka] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[D kuka] PRO.T/fin{v,V}]

18.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D kuka] PRO.T/fin{v,V}]

19.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D kuka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D kuka> [T/fin [<D kuka> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D kuka] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D kuka] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D kuka] [PRO.T/fin{v,V} D]]

20.

		Consume "Merja-"

		[[D kuka] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D kuka] [PRO.T/fin{v,V} D{N}]]

21.
	>>>	Trying candidate parse [[D kuka] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D kuka] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D kuka] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D kuka] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D kuka] [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]
					Extracted head "Merja-" from D and created [[D kuka] [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D kuka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D kuka]
						<D kuka> was made an adjunct.
						Floater <D kuka> dropped.
						 = [<D kuka>:85 [PRO.T/fin [<DP>:85 [PRO.v [PRO.ihaile- [D Merja-]]]]]]
					= [<D kuka> [T/fin [<D kuka> [v [ihaile- [D Merja-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Criterial features {'WH'} copied to {'T', 'FIN', 'ARG/FIN/T/T/fin', 'ARG', 'ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'T/fin'}
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:85.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:85.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:85.
			= [<D kuka> [T/fin [<D kuka> [v [ihaile- [D Merja-]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D kuka>:85 [phi.T/fin [<DP>:85 [PRO.v [PRO.ihaile- [D Merja-]]]]]] into Conceptual-Intentional system...
				(D)[ABAR:WH] was bound to an operator.
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D kuka>    (alternatives: 2. T/fin 3. <D kuka> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. <D kuka> 3. T/fin 4. <D kuka> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['(D)[ABAR:WH] was bound to an operator.', 'PRO.ihaile-([D Merja-])', 'PRO.v(<D kuka>)']
!--->		Tests passed (with 21/182 operations) <------------------------------------
		Solution:
		[<D kuka> [T/fin [<D kuka> [v [ihaile- [D Merja-]]]]]]
		Grammar: [<D kuka>:1 [phi.T/fin [<DP>:1 [PRO.v [PRO.ihaile- [D Merja-]]]]]]
		Spellout TT/finiWHP = [DP:1 [TT/finiWH [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D/WH', 'CAT:-ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/ARG/FIN/T/T/fin/FIN/T/T/fin/ARG/FIN/T/T/fin/FIN/T/T/fin/iWH/uWH', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D/WH', 'CAT:-ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D/WH', 'CAT:-ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/ARG/FIN/T/T/fin/FIN/T/T/fin/ARG/FIN/T/T/fin/FIN/T/T/fin/iWH/uWH', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D/WH', 'CAT:-ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
kuka: [N, D]
phi.T/fin: [TT/finiWH]
(D): [D, TT/finiWH]
(N): [N, D, TT/finiWH]
PRO.v: [v, TT/finiWH]
PRO.ihaile-: [V, v, TT/finiWH]
D: [D, V, v, TT/finiWH]
Merja-: [N, D, V, v, TT/finiWH]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 40
['keta', 'han', 'ihailee']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "keta" contains multiple morphemes ['$hum', '$def', '$3p', '$sg', '$par', '$wh', '$D', 'keta-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$wh"

			=None

6.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D/WH', 'CAT:-ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
			=D

8.

		Consume "ketä"

		D + ketä
			Filtering out impossible merge sites...
			Sink "ketä" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*ketä]
			=D{N}

9.
		Next word "han" contains multiple morphemes ['$hum', '$def', '$3p', '$sg', '$nom', '$D', 'han-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=D{N}

10.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=D{N}

11.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=D{N}

12.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=D{N}

13.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=D{N}

14.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "ketä" from D and created [D ketä]
					Reconstructing head movement for D{N}.
					Extracted head "ketä" from D and created [D ketä]
					D was opened into [D ketä].
				Feature processing:
				Floater movement reconstruction:
					= [D ketä]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D ketä] D]

15.

		Consume "han"

		[[D ketä] D] + han
			Filtering out impossible merge sites...
			Sink "han" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*han]
			=[[D ketä] D{N}]

16.
		Next word "ihailee" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=[[D ketä] D{N}]

17.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[[D ketä] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				[[D ketä] D{N}] + T/fin = 1]
				D{N} + T/fin = 2]
		Ranking completed:
			1. [D{N}; T/fin]
			2. [[[D ketä] D{N}]; T/fin]
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "han" from D and created [D han]
					Reconstructing head movement for D{N}.
					Extracted head "han" from D and created [D han]
					D was opened into [D han].
				Feature processing:
				Floater movement reconstruction:
					= [D han]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D ketä] [[D han] PRO.T/fin]]

18.

		Consume "v"

		[[D ketä] [[D han] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D ketä] [[D han] PRO.T/fin{v}]]

19.

		Consume "ihaile-"

		[[D ketä] [[D han] T/fin{v}]] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[D ketä] [[D han] PRO.T/fin{v,V}]]

20.
	>>>	Trying candidate parse [[D ketä] [[D han] T/fin{v,V}]] (1.)
		Reconstructing...
			Transferring [[D ketä] [[D han] PRO.T/fin{v,V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D ketä] [[D han] PRO.T/fin{v,V}]].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[D ketä] [[D han] [PRO.T/fin PRO.v{V}]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [[D ketä] [[D han] [PRO.T/fin [PRO.v PRO.ihaile-]]]]
				Feature processing:
				Floater movement reconstruction:
					[D ketä] failed to tail [-VAL][ARG]
					Dropping [D ketä]
						<D ketä> was made an adjunct.
						Floater <D ketä> dropped.
						 = [<D ketä>:86 [[D han] [PRO.T/fin [PRO.v [<DP>:86 PRO.ihaile-]]]]]
					[D han] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D han]
						<D han> was made an adjunct.
						Floater <D han> dropped.
						 = [<D ketä>:86 [<D han>:87 [PRO.T/fin [<DP>:87 [PRO.v [<DP>:86 PRO.ihaile-]]]]]]
					= [<D ketä> [<D han> [T/fin [<D han> [v [<D ketä> ihaile-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					New {'WH'} head was spawned due to the occurrence of multiple specifiers at T/fin
				Agreement reconstruction:
					PRO.uWH has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.uWH acquired PHI:DET:DEF by phi-Agree from <D han>:87.
					phi.uWH acquired PHI:NUM:SG by phi-Agree from <D han>:87.
					phi.uWH acquired PHI:PER:3 by phi-Agree from <D han>:87.
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:87.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:87.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:87.
			= [<D ketä> [uWH [<D han> [T/fin [<D han> [v [<D ketä> ihaile-]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D ketä>:86 [phi.uWH [<D han>:87 [phi.T/fin [<DP>:87 [PRO.v [<DP>:86 PRO.ihaile-]]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D han>    (alternatives: 2. T/fin 3. <D han> 4. uWH 5. <D ketä> )
				(D)[ABAR:WH] was bound to an operator.
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D ketä>    (alternatives: 2. <D han> 3. T/fin 4. <D han> 5. uWH 6. <D ketä> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['(D)[ABAR:WH] was bound to an operator.', 'PRO.ihaile-(<D ketä>)', 'PRO.v(<D han>)']
!--->		Tests passed (with 20/176 operations) <------------------------------------
		Solution:
		[<D ketä> [uWH [<D han> [T/fin [<D han> [v [<D ketä> ihaile-]]]]]]]
		Grammar: [<D ketä>:1 [phi.uWH [<D han>:2 [phi.T/fin [<DP>:2 [PRO.v [<DP>:1 PRO.ihaile-]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [DP:2 [TT/fin [__:2 [v [__:1 V]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D/WH', 'CAT:-ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
ketä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:ketä', 'SPEC:A']
uWH:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/ARG/FIN/T/T/fin/FIN/T/T/fin/ARG/FIN/T/T/fin/FIN/T/T/fin/uWH', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'PF:uWH', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D/WH', 'CAT:-ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
ketä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:ketä', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D/WH', 'CAT:-ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
ketä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:ketä', 'SPEC:A']
uWH:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/ARG/FIN/T/T/fin/FIN/T/T/fin/ARG/FIN/T/T/fin/FIN/T/T/fin/uWH', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'PF:uWH', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D/WH', 'CAT:-ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
ketä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:ketä', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
ketä: [N, D]
phi.uWH: [TT/fin]
D: [D, TT/fin]
han: [N, D, TT/fin]
phi.T/fin: [TT/fin, TT/fin]
(D): [D, TT/fin, TT/fin]
(N): [N, D, TT/fin, TT/fin]
PRO.v: [v, TT/fin, TT/fin]
(D): [D, v, TT/fin, TT/fin]
(N): [N, D, v, TT/fin, TT/fin]
PRO.ihaile-: [V, v, TT/fin, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 41
['Pekka', 'etsii', 'Merjaa', 'juosten']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

9.
		Next word "etsii" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'etsi-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					D was opened into [D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] PRO.T/fin]

11.

		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D Pekka] PRO.T/fin{v}]

12.

		Consume "etsi"

		[[D Pekka] T/fin{v}] + etsi
			Filtering out impossible merge sites...
			Sink "etsi" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*etsi]
			=[[D Pekka] PRO.T/fin{v,V}]

13.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[D Pekka] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D Pekka] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D Pekka] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D Pekka] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[D Pekka] PRO.T/fin{v,V}]

18.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D Pekka] PRO.T/fin{v,V}]

19.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.etsi (etsi) is missing complement D
				Avoid [<D Pekka> [T/fin [<D Pekka> [v etsi]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [etsi D] due to complement selection.
				[[D Pekka] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D Pekka] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.etsi" from PRO.v and created [PRO.T/fin [PRO.v PRO.etsi]]
				PRO.etsi (etsi) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{v,V} D]]

20.

		Consume "Merja-"

		[[D Pekka] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D Pekka] [PRO.T/fin{v,V} D{N}]]

21.
		Next word "juosten" contains multiple morphemes ['$Cen', 'juokse-']

		Consume "en"

		[[D Pekka] [T/fin{v,V} D{N}]] + en
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, en.
				Avoid TT/finP as SPEC, en.
				Avoid D{N} due to tail-head failure.
					D was opened into [D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
				Prioritize D{N} because all solutions were negative.
				[[D Pekka] [PRO.T/fin{v,V} D{N}]] + en = -98]
				[PRO.T/fin{v,V} D{N}] + en = -96]
				D{N} + en = 106]
		Ranking completed:
			1. [D{N}; en]
			2. [[PRO.T/fin{v,V} D{N}]; en]
			3. [[[D Pekka] [PRO.T/fin{v,V} D{N}]]; en]
		Exploring solution number (1) =[D{N} en]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					D was opened into [D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{v,V} [[D Merja-] en]]]

22.

		Consume "juokse-"

		[[D Pekka] [T/fin{v,V} [[D Merja-] en]]] + juokse-
			Filtering out impossible merge sites...
			Sink "juokse-" into en because they are inside the same phonological word.
		Exploring solution number (1) =[en*juokse-]
			=[[D Pekka] [PRO.T/fin{v,V} [[D Merja-] en{V}]]]

23.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} [[D Merja-] en{V}]]] (1.)
		Reconstructing...
			Transferring [[D Pekka] [PRO.T/fin{v,V} [[D Merja-] en{V}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [PRO.T/fin{v,V} [[D Merja-] en{V}]]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.v{V} [[D Merja-] en{V}]]]]
						Extracted head "PRO.etsi" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.v [PRO.etsi [[D Merja-] en{V}]]]]]
					Extracted head "PRO.juokse-" from en and created [[D Pekka] [PRO.T/fin [PRO.v [PRO.etsi [[D Merja-] [en PRO.juokse-]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:92 [PRO.T/fin [<DP>:92 [PRO.v [PRO.etsi [[D Merja-] [en PRO.juokse-]]]]]]]
					en at the right failed to tail [CAT:T]
						<en PRO.juokse-> was made an adjunct.
					en at the right failed to tail [CAT:T]
					= [<D Pekka> [T/fin [<D Pekka> [v [etsi [[D Merja-] <en juokse->]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:92.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:92.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:92.
			= [<D Pekka> [T/fin [<D Pekka> [v [etsi [[D Merja-] <en juokse->]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:92 [phi.T/fin [<DP>:92 [PRO.v [PRO.etsi [[D Merja-] <en PRO.juokse->]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				PRO.etsi with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D Merja-] <en juokse->]    (alternatives: 2. <D Pekka> 3. T/fin 4. <D Pekka> )
				PRO.juokse- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				Transfer to C-I successful.
			en<[ADV, V, v, TT/fin]> failed to tail features [CAT:T]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
etsi:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:search', 'PF:etsi', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
en:['-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:en', 'TAIL:CAT:T']
juokse-:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:run', 'PF:juokse-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.etsi: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]
en: [ADV, V, v, TT/fin]
PRO.juokse-: [V, ADV, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "juokse-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{v,V} D{N}] en]
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.etsi" and reconstructed it = [PRO.T/fin [PRO.v [PRO.etsi D{N}]]]
					Extracted head "Merja-" from D and created [PRO.T/fin [PRO.v [PRO.etsi [D Merja-]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [etsi [D Merja-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			=[[D Pekka] [[pro/x.T/fin [PRO.v [PRO.etsi [D Merja-]]]] en]]

24.

		Consume "juokse-"

		[[D Pekka] [[T/fin [v [etsi [D Merja-]]]] en]] + juokse-
			Filtering out impossible merge sites...
			Sink "juokse-" into en because they are inside the same phonological word.
		Exploring solution number (1) =[en*juokse-]
			=[[D Pekka] [[pro/x.T/fin [PRO.v [PRO.etsi [D Merja-]]]] en{V}]]

25.
	>>>	Trying candidate parse [[D Pekka] [[T/fin [v [etsi [D Merja-]]]] en{V}]] (2.)
		Reconstructing...
			Transferring [[D Pekka] [[pro/x.T/fin [PRO.v [PRO.etsi [D Merja-]]]] en{V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [[pro/x.T/fin [PRO.v [PRO.etsi [D Merja-]]]] en{V}]].
					Extracted head "PRO.juokse-" from en and created [[D Pekka] [[pro/x.T/fin [PRO.v [PRO.etsi [D Merja-]]]] [en PRO.juokse-]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					en at the right failed to tail [CAT:T]
						<en PRO.juokse-> was made an adjunct.
					= [[D Pekka] [[T/fin [v [etsi [D Merja-]]]] <en juokse->]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Pekka " into memory buffer from SPEC of "pro/x.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D Pekka]:1 from memory buffer into Spec of PRO.v
					Result [[D Pekka]:1 [[pro/x.T/fin [(DP):1 [PRO.v [PRO.etsi [D Merja-]]]]] <en PRO.juokse->]]
				Agreement reconstruction:
					pro/x.T/fin has unvalued phi-features {'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):1.
			= [[D Pekka] [[T/fin [[D Pekka] [v [etsi [D Merja-]]]]] <en juokse->]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:1 [[phi.T/fin [(DP):1 [PRO.v [PRO.etsi [D Merja-]]]]] <en PRO.juokse->]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Pekka]    (alternatives: 2. T/fin 3. [D Pekka] 4. [D Pekka] )
				PRO.etsi with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. [D Pekka] 3. T/fin 4. [D Pekka] 5. [D Pekka] )
				PRO.juokse- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Pekka]    (alternatives: )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.etsi([D Merja-])', 'PRO.juokse-([D Pekka])', 'PRO.v([D Pekka])']
!--->		Tests passed (with 25/295 operations) <------------------------------------
		Solution:
		[[D Pekka] [[T/fin [[D Pekka] [v [etsi [D Merja-]]]]] <en juokse->]]
		Grammar: [[D Pekka]:1 [[phi.T/fin [(DP):1 [PRO.v [PRO.etsi [D Merja-]]]]] <en PRO.juokse->]]
		Spellout TT/finP = [DP:1 [[TT/fin [__:1 [v [V [D N]]]]] ADVP]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
etsi:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:search', 'PF:etsi', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
en:['-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:en', 'TAIL:CAT:T']
juokse-:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:run', 'PF:juokse-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
etsi:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:search', 'PF:etsi', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
en:['-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:en', 'TAIL:CAT:T']
juokse-:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:run', 'PF:juokse-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.etsi: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]
en: [ADV]
PRO.juokse-: [V, ADV]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 42
['Pekka', 'etsii', 'Merjaa', 'mukavasti']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

9.
		Next word "etsii" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'etsi-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					D was opened into [D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] PRO.T/fin]

11.

		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D Pekka] PRO.T/fin{v}]

12.

		Consume "etsi"

		[[D Pekka] T/fin{v}] + etsi
			Filtering out impossible merge sites...
			Sink "etsi" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*etsi]
			=[[D Pekka] PRO.T/fin{v,V}]

13.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[D Pekka] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D Pekka] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D Pekka] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D Pekka] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[D Pekka] PRO.T/fin{v,V}]

18.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D Pekka] PRO.T/fin{v,V}]

19.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.etsi (etsi) is missing complement D
				Avoid [<D Pekka> [T/fin [<D Pekka> [v etsi]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [etsi D] due to complement selection.
				[[D Pekka] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D Pekka] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.etsi" from PRO.v and created [PRO.T/fin [PRO.v PRO.etsi]]
				PRO.etsi (etsi) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{v,V} D]]

20.

		Consume "Merja-"

		[[D Pekka] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D Pekka] [PRO.T/fin{v,V} D{N}]]

21.
		Next word "mukavasti" contains multiple morphemes ['$sti', 'mukava-']

		Consume "sti"

		[[D Pekka] [T/fin{v,V} D{N}]] + sti
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, sti.
				Avoid TT/finP as SPEC, sti.
				Avoid D{N} due to tail-head failure.
					D was opened into [D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
				Prioritize D{N} because all solutions were negative.
				[[D Pekka] [PRO.T/fin{v,V} D{N}]] + sti = -98]
				[PRO.T/fin{v,V} D{N}] + sti = -96]
				D{N} + sti = 106]
		Ranking completed:
			1. [D{N}; sti]
			2. [[PRO.T/fin{v,V} D{N}]; sti]
			3. [[[D Pekka] [PRO.T/fin{v,V} D{N}]]; sti]
		Exploring solution number (1) =[D{N} sti]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					D was opened into [D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{v,V} [[D Merja-] sti]]]

22.

		Consume "mukavasti"

		[[D Pekka] [T/fin{v,V} [[D Merja-] sti]]] + mukavasti
			Filtering out impossible merge sites...
			Sink "mukavasti" into sti because they are inside the same phonological word.
		Exploring solution number (1) =[sti*mukavasti]
			=[[D Pekka] [PRO.T/fin{v,V} [[D Merja-] sti{A}]]]

23.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} [[D Merja-] sti{A}]]] (1.)
		Reconstructing...
			Transferring [[D Pekka] [PRO.T/fin{v,V} [[D Merja-] sti{A}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [PRO.T/fin{v,V} [[D Merja-] sti{A}]]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.v{V} [[D Merja-] sti{A}]]]]
						Extracted head "PRO.etsi" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.v [PRO.etsi [[D Merja-] sti{A}]]]]]
					Extracted head "mukavasti" from sti and created [[D Pekka] [PRO.T/fin [PRO.v [PRO.etsi [[D Merja-] [sti mukavasti]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:97 [PRO.T/fin [<DP>:97 [PRO.v [PRO.etsi [[D Merja-] [sti mukavasti]]]]]]]
					sti at the right failed to tail [CAT:T]
						<sti mukavasti> was made an adjunct.
					sti at the right failed to tail [CAT:T]
					= [<D Pekka> [T/fin [<D Pekka> [v [etsi [[D Merja-] <sti mukavasti>]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:97.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:97.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:97.
			= [<D Pekka> [T/fin [<D Pekka> [v [etsi [[D Merja-] <sti mukavasti>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:97 [phi.T/fin [<DP>:97 [PRO.v [PRO.etsi [[D Merja-] <sti mukavasti>]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				PRO.etsi with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D Merja-] <sti mukavasti>]    (alternatives: 2. <D Pekka> 3. T/fin 4. <D Pekka> )
				Transfer to C-I successful.
			sti<[ADV, V, v, TT/fin]> failed to tail features [CAT:T]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
etsi:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:search', 'PF:etsi', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.etsi: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]
sti: [ADV, V, v, TT/fin]
mukavasti: [A, ADV, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "mukava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{v,V} D{N}] sti]
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.etsi" and reconstructed it = [PRO.T/fin [PRO.v [PRO.etsi D{N}]]]
					Extracted head "Merja-" from D and created [PRO.T/fin [PRO.v [PRO.etsi [D Merja-]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [etsi [D Merja-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			=[[D Pekka] [[pro/x.T/fin [PRO.v [PRO.etsi [D Merja-]]]] sti]]

24.

		Consume "mukavasti"

		[[D Pekka] [[T/fin [v [etsi [D Merja-]]]] sti]] + mukavasti
			Filtering out impossible merge sites...
			Sink "mukavasti" into sti because they are inside the same phonological word.
		Exploring solution number (1) =[sti*mukavasti]
			=[[D Pekka] [[pro/x.T/fin [PRO.v [PRO.etsi [D Merja-]]]] sti{A}]]

25.
	>>>	Trying candidate parse [[D Pekka] [[T/fin [v [etsi [D Merja-]]]] sti{A}]] (2.)
		Reconstructing...
			Transferring [[D Pekka] [[pro/x.T/fin [PRO.v [PRO.etsi [D Merja-]]]] sti{A}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [[pro/x.T/fin [PRO.v [PRO.etsi [D Merja-]]]] sti{A}]].
					Extracted head "mukavasti" from sti and created [[D Pekka] [[pro/x.T/fin [PRO.v [PRO.etsi [D Merja-]]]] [sti mukavasti]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					sti at the right failed to tail [CAT:T]
						<sti mukavasti> was made an adjunct.
					= [[D Pekka] [[T/fin [v [etsi [D Merja-]]]] <sti mukavasti>]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Pekka " into memory buffer from SPEC of "pro/x.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D Pekka]:2 from memory buffer into Spec of PRO.v
					Result [[D Pekka]:2 [[pro/x.T/fin [(DP):2 [PRO.v [PRO.etsi [D Merja-]]]]] <sti mukavasti>]]
				Agreement reconstruction:
					pro/x.T/fin has unvalued phi-features {'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):2.
			= [[D Pekka] [[T/fin [[D Pekka] [v [etsi [D Merja-]]]]] <sti mukavasti>]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:2 [[phi.T/fin [(DP):2 [PRO.v [PRO.etsi [D Merja-]]]]] <sti mukavasti>]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Pekka]    (alternatives: 2. T/fin 3. [D Pekka] 4. [D Pekka] )
				PRO.etsi with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. [D Pekka] 3. T/fin 4. [D Pekka] 5. [D Pekka] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.etsi([D Merja-])', 'PRO.v([D Pekka])']
!--->		Tests passed (with 25/291 operations) <------------------------------------
		Solution:
		[[D Pekka] [[T/fin [[D Pekka] [v [etsi [D Merja-]]]]] <sti mukavasti>]]
		Grammar: [[D Pekka]:1 [[phi.T/fin [(DP):1 [PRO.v [PRO.etsi [D Merja-]]]]] <sti mukavasti>]]
		Spellout TT/finP = [DP:1 [[TT/fin [__:1 [v [V [D N]]]]] ADVP]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
etsi:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:search', 'PF:etsi', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
etsi:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:search', 'PF:etsi', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.etsi: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]
sti: [ADV]
mukavasti: [A, ADV]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 43
['ihailen', 'Merjaa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "ihailen" contains multiple morphemes ['$[-n]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.

		Consume "ihaile-"

		T/fin{v} + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=PRO.T/fin{v,V}

5.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=PRO.T/fin{v,V}

10.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

11.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} D]

12.

		Consume "Merja-"

		[T/fin{v,V} D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[PRO.T/fin{v,V} D{N}]

13.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.ihaile-" and reconstructed it = [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]
					Extracted head "Merja-" from D and created [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [ihaile- [D Merja-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:1 from the edge of phi.T/fin.
			= [T/fin [v [ihaile- [D Merja-]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ihaile-([D Merja-])', 'PRO.v(T/fin)']
!--->		Tests passed (with 13/110 operations) <------------------------------------
		Solution:
		[T/fin [v [ihaile- [D Merja-]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 44
['ihailet', 'Merjaa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "ihailet" contains multiple morphemes ['$[-t]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.

		Consume "ihaile-"

		T/fin{v} + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=PRO.T/fin{v,V}

5.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=PRO.T/fin{v,V}

10.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

11.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} D]

12.

		Consume "Merja-"

		[T/fin{v,V} D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[PRO.T/fin{v,V} D{N}]

13.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.ihaile-" and reconstructed it = [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]
					Extracted head "Merja-" from D and created [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [ihaile- [D Merja-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:2 from the edge of phi.T/fin.
			= [T/fin [v [ihaile- [D Merja-]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ihaile-([D Merja-])', 'PRO.v(T/fin)']
!--->		Tests passed (with 13/110 operations) <------------------------------------
		Solution:
		[T/fin [v [ihaile- [D Merja-]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 45
['ihailee', 'Merjaa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "ihailee" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.

		Consume "ihaile-"

		T/fin{v} + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=PRO.T/fin{v,V}

5.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=PRO.T/fin{v,V}

10.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

11.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} D]

12.

		Consume "Merja-"

		[T/fin{v,V} D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[PRO.T/fin{v,V} D{N}]

13.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.ihaile-" and reconstructed it = [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]
					Extracted head "Merja-" from D and created [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [ihaile- [D Merja-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			= [T/fin [v [ihaile- [D Merja-]]]]
		Checking LF-interface conditions.
			Trying to transfer [pro/x.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]] into Conceptual-Intentional system...
				pro/x.T/fin with ['PHI:DET:_'] was associated at LF with:
					No antecedent found, LF-object crashes.
					Cannot be interpreted at C-I
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					Generic
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to C-I crashed.
			Final tail-head check failed.
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

pro/x.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$par".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

14.

		Adding inflectional features ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} D]

15.

		Consume "Merjaa"

		[T/fin{v,V} D] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[PRO.T/fin{v,V} D{N}]

16.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (2.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.ihaile-" and reconstructed it = [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]
					Extracted head "Merjaa" from D and created [PRO.T/fin [PRO.v [PRO.ihaile- [D Merjaa]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [ihaile- [D Merjaa]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			= [T/fin [v [ihaile- [D Merjaa]]]]
		Checking LF-interface conditions.
			Trying to transfer [pro/x.T/fin [PRO.v [PRO.ihaile- [D Merjaa]]]] into Conceptual-Intentional system...
				pro/x.T/fin with ['PHI:DET:_'] was associated at LF with:
					No antecedent found, LF-object crashes.
					Cannot be interpreted at C-I
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					Generic
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					Generic
				Transfer to C-I crashed.
			Final tail-head check failed.
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:ARG,-VAL', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

pro/x.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merjaa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihailee".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 46
['ihailemme', 'Merjaa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "ihailemme" contains multiple morphemes ['$[-mme]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.

		Consume "ihaile-"

		T/fin{v} + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=PRO.T/fin{v,V}

5.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=PRO.T/fin{v,V}

10.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

11.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} D]

12.

		Consume "Merja-"

		[T/fin{v,V} D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[PRO.T/fin{v,V} D{N}]

13.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.ihaile-" and reconstructed it = [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]
					Extracted head "Merja-" from D and created [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [ihaile- [D Merja-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:1 from the edge of phi.T/fin.
			= [T/fin [v [ihaile- [D Merja-]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ihaile-([D Merja-])', 'PRO.v(T/fin)']
!--->		Tests passed (with 13/110 operations) <------------------------------------
		Solution:
		[T/fin [v [ihaile- [D Merja-]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 47
['ihailette', 'Merjaa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "ihailette" contains multiple morphemes ['$[-tte]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.

		Consume "ihaile-"

		T/fin{v} + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=PRO.T/fin{v,V}

5.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=PRO.T/fin{v,V}

10.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

11.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} D]

12.

		Consume "Merja-"

		[T/fin{v,V} D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[PRO.T/fin{v,V} D{N}]

13.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.ihaile-" and reconstructed it = [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]
					Extracted head "Merja-" from D and created [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [ihaile- [D Merja-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:2 from the edge of phi.T/fin.
			= [T/fin [v [ihaile- [D Merja-]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ihaile-([D Merja-])', 'PRO.v(T/fin)']
!--->		Tests passed (with 13/110 operations) <------------------------------------
		Solution:
		[T/fin [v [ihaile- [D Merja-]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 48
['ihailevat', 'Merjaa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "ihailevat" contains multiple morphemes ['$[-vat]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.

		Consume "ihaile-"

		T/fin{v} + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=PRO.T/fin{v,V}

5.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=PRO.T/fin{v,V}

10.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

11.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} D]

12.

		Consume "Merja-"

		[T/fin{v,V} D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[PRO.T/fin{v,V} D{N}]

13.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.ihaile-" and reconstructed it = [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]
					Extracted head "Merja-" from D and created [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [ihaile- [D Merja-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			= [T/fin [v [ihaile- [D Merja-]]]]
		Checking LF-interface conditions.
			Trying to transfer [pro/x.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]] into Conceptual-Intentional system...
				pro/x.T/fin with ['PHI:DET:_'] was associated at LF with:
					No antecedent found, LF-object crashes.
					Cannot be interpreted at C-I
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					Generic
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to C-I crashed.
			Final tail-head check failed.
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

pro/x.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$par".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

14.

		Adding inflectional features ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} D]

15.

		Consume "Merjaa"

		[T/fin{v,V} D] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[PRO.T/fin{v,V} D{N}]

16.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (2.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.ihaile-" and reconstructed it = [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]
					Extracted head "Merjaa" from D and created [PRO.T/fin [PRO.v [PRO.ihaile- [D Merjaa]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [ihaile- [D Merjaa]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			= [T/fin [v [ihaile- [D Merjaa]]]]
		Checking LF-interface conditions.
			Trying to transfer [pro/x.T/fin [PRO.v [PRO.ihaile- [D Merjaa]]]] into Conceptual-Intentional system...
				pro/x.T/fin with ['PHI:DET:_'] was associated at LF with:
					No antecedent found, LF-object crashes.
					Cannot be interpreted at C-I
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					Generic
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					Generic
				Transfer to C-I crashed.
			Final tail-head check failed.
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:ARG,-VAL', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

pro/x.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merjaa: [N, D, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihailevat".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 49
['admire', 'Mary']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "admire" contains multiple morphemes ['$[-0]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

4.

		Consume "admire"

		T/fin{v} + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=T/fin{v,V}

5.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=T/fin{v,V}

10.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[T/fin{v,V} D]

11.

		Consume "Mary"

		[T/fin{v,V} D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[T/fin{v,V} D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [T/fin{v,V} D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.admire" and reconstructed it = [T/fin [PRO.v [PRO.admire D{N}]]]
					Extracted head "Mary" from D and created [T/fin [PRO.v [PRO.admire [D Mary]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [admire [D Mary]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
					Extraposition will be tried on [T/fin [PRO.v [PRO.admire [D Mary]]]].
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
			= [T/fin [v [admire [D Mary]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admire-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admire".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 50
['admires', 'Mary']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "admires" contains multiple morphemes ['$[-s]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

4.

		Consume "admire"

		T/fin{v} + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=T/fin{v,V}

5.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=T/fin{v,V}

10.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[T/fin{v,V} D]

11.

		Consume "Mary"

		[T/fin{v,V} D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[T/fin{v,V} D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [T/fin{v,V} D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.admire" and reconstructed it = [T/fin [PRO.v [PRO.admire D{N}]]]
					Extracted head "Mary" from D and created [T/fin [PRO.v [PRO.admire [D Mary]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [admire [D Mary]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
					Extraposition will be tried on [T/fin [PRO.v [PRO.admire [D Mary]]]].
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
			= [T/fin [v [admire [D Mary]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.admire: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admire-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admires".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 51
['adori', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "adori" contains multiple morphemes ['$[-i]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.

		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=PRO.T/fin{v,V}

5.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

10.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} D]

11.

		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[PRO.T/fin{v,V} D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.adora" and reconstructed it = [PRO.T/fin [PRO.v [PRO.adora D{N}]]]
					Extracted head "Luisa" from D and created [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [adora [D Luisa]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:2 from the edge of phi.T/fin.
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.adora [D Luisa]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v(T/fin)']
!--->		Tests passed (with 12/104 operations) <------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.adora [D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 52
['adora', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "adora" contains multiple morphemes ['$[-a]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.

		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=PRO.T/fin{v,V}

5.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

10.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} D]

11.

		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[PRO.T/fin{v,V} D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.adora" and reconstructed it = [PRO.T/fin [PRO.v [PRO.adora D{N}]]]
					Extracted head "Luisa" from D and created [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [adora [D Luisa]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.adora [D Luisa]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v(T/fin)']
!--->		Tests passed (with 12/104 operations) <------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.adora [D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 53
['adoriamo', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "adoriamo" contains multiple morphemes ['$[-iamo]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.

		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=PRO.T/fin{v,V}

5.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

10.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} D]

11.

		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[PRO.T/fin{v,V} D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.adora" and reconstructed it = [PRO.T/fin [PRO.v [PRO.adora D{N}]]]
					Extracted head "Luisa" from D and created [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [adora [D Luisa]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:1 from the edge of phi.T/fin.
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.adora [D Luisa]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v(T/fin)']
!--->		Tests passed (with 12/104 operations) <------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.adora [D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 54
['adorate', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "adorate" contains multiple morphemes ['$[-te]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:2', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.

		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=PRO.T/fin{v,V}

5.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

10.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} D]

11.

		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[PRO.T/fin{v,V} D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.adora" and reconstructed it = [PRO.T/fin [PRO.v [PRO.adora D{N}]]]
					Extracted head "Luisa" from D and created [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [adora [D Luisa]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:2 from the edge of phi.T/fin.
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.adora [D Luisa]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v(T/fin)']
!--->		Tests passed (with 12/104 operations) <------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.adora [D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 55
['adorano', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "adorano" contains multiple morphemes ['$[-no]', '$T/fin', '$v', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.

		Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=PRO.T/fin{v,V}

5.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

10.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} D]

11.

		Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[PRO.T/fin{v,V} D{N}]

12.
	>>>	Trying candidate parse [T/fin{v,V} D{N}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.adora" and reconstructed it = [PRO.T/fin [PRO.v [PRO.adora D{N}]]]
					Extracted head "Luisa" from D and created [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [adora [D Luisa]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:PL from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:3 from the edge of phi.T/fin.
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.adora [D Luisa]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.adora([D Luisa])', 'PRO.v(T/fin)']
!--->		Tests passed (with 12/104 operations) <------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.adora [D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 56
['Pekka', 'sanoo', 'etta', 'mina', 'ihailen', 'Merjaa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

9.
		Next word "sanoo" contains multiple morphemes ['$[-V]', '$T/fin', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					D was opened into [D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] PRO.T/fin]

11.

		Consume "sano-"

		[[D Pekka] T/fin] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sano-]
			=[[D Pekka] PRO.T/fin{V}]

12.

		Consume "että"

		[[D Pekka] T/fin{V}] + että
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> sano-]]] että] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} että]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.sano-" from PRO.T/fin and created [PRO.T/fin PRO.sano-]
				PRO.sano- (sano-) is missing complement FORCE
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} että]]

13.
		Next word "mina" contains multiple morphemes ['$hum', '$def', '$1p', '$sg', '$nom', '$D', 'mina-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D Pekka] [PRO.T/fin{V} että]]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=[[D Pekka] [PRO.T/fin{V} että]]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=[[D Pekka] [PRO.T/fin{V} että]]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=[[D Pekka] [PRO.T/fin{V} että]]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=[[D Pekka] [PRO.T/fin{V} että]]

18.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		[[D Pekka] [T/fin{V} että]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- että]]]] D] due to bad left branch.
				Reject [[T/fin [sano- että]] D] due to bad left branch.
		Exploring solution number (1) =[että D]
			Transferring että to LF.
				head movement reconstruction:
					Reconstructing head movement for että.
				Feature processing:
				Floater movement reconstruction:
					= että
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				että probing for CAT:T/fin failed.
				A phi-marked head "että" lacks complement
					Extraposition will be tried on että.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} [että D]]]

19.

		Consume "mina"

		[[D Pekka] [T/fin{V} [että D]]] + mina
			Filtering out impossible merge sites...
			Sink "mina" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mina]
			=[[D Pekka] [PRO.T/fin{V} [että D{N}]]]

20.
		Next word "ihailen" contains multiple morphemes ['$[-n]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=[[D Pekka] [PRO.T/fin{V} [että D{N}]]]

21.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[[D Pekka] [T/fin{V} [että D{N}]]] + T/fin
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- [että <D mina>]]]]] PRO.T/fin] due to bad left branch.
				Reject [[T/fin [sano- [että <D mina>]]] PRO.T/fin] due to bad left branch.
				Reject [[että <D mina>] PRO.T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mina" from D and created [D mina]
					Reconstructing head movement for D{N}.
					Extracted head "mina" from D and created [D mina]
					D was opened into [D mina].
				Feature processing:
				Floater movement reconstruction:
					= [D mina]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} [että [[D mina] PRO.T/fin]]]]

22.

		Consume "v"

		[[D Pekka] [T/fin{V} [että [[D mina] T/fin]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D Pekka] [PRO.T/fin{V} [että [[D mina] PRO.T/fin{v}]]]]

23.

		Consume "ihaile-"

		[[D Pekka] [T/fin{V} [että [[D mina] T/fin{v}]]]] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[D Pekka] [PRO.T/fin{V} [että [[D mina] PRO.T/fin{v,V}]]]]

24.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[D Pekka] [PRO.T/fin{V} [että [[D mina] PRO.T/fin{v,V}]]]]

25.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D Pekka] [PRO.T/fin{V} [että [[D mina] PRO.T/fin{v,V}]]]]

26.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D Pekka] [PRO.T/fin{V} [että [[D mina] PRO.T/fin{v,V}]]]]

27.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D Pekka] [PRO.T/fin{V} [että [[D mina] PRO.T/fin{v,V}]]]]

28.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[D Pekka] [PRO.T/fin{V} [että [[D mina] PRO.T/fin{v,V}]]]]

29.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D Pekka] [PRO.T/fin{V} [että [[D mina] PRO.T/fin{v,V}]]]]

30.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D Pekka] [T/fin{V} [että [[D mina] T/fin{v,V}]]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D Pekka> [T/fin [<D Pekka> [sano- [että [<D mina> [T/fin [<D mina> [v ihaile-]]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [T/fin [sano- [että [<D mina> [T/fin [<D mina> [v ihaile-]]]]]]] as left branch because it constitutes illicit structure.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [että [<D mina> [T/fin [<D mina> [v ihaile-]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D mina> [T/fin [<D mina> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D Pekka] [PRO.T/fin{V} [että [[D mina] PRO.T/fin{v,V}]]]] + D = -197]
				[PRO.T/fin{V} [että [[D mina] PRO.T/fin{v,V}]]] + D = -194]
				[että [[D mina] PRO.T/fin{v,V}]] + D = -94]
				[[D mina] PRO.T/fin{v,V}] + D = -188]
				PRO.T/fin{v,V} + D = 170]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[että [[D mina] PRO.T/fin{v,V}]]; D]
			3. [[[D mina] PRO.T/fin{v,V}]; D]
			4. [[PRO.T/fin{V} [että [[D mina] PRO.T/fin{v,V}]]]; D]
			5. [[[D Pekka] [PRO.T/fin{V} [että [[D mina] PRO.T/fin{v,V}]]]]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} [että [[D mina] [PRO.T/fin{v,V} D]]]]]

31.

		Consume "Merja-"

		[[D Pekka] [T/fin{V} [että [[D mina] [T/fin{v,V} D]]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D Pekka] [PRO.T/fin{V} [että [[D mina] [PRO.T/fin{v,V} D{N}]]]]]

32.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [että [[D mina] [T/fin{v,V} D{N}]]]]] (1.)
		Reconstructing...
			Transferring [[D Pekka] [PRO.T/fin{V} [että [[D mina] [PRO.T/fin{v,V} D{N}]]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [PRO.T/fin{V} [että [[D mina] [PRO.T/fin{v,V} D{N}]]]]].
						Extracted head "PRO.sano-" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.sano- [että [[D mina] [PRO.T/fin{v,V} D{N}]]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.sano- [että [[D mina] [PRO.T/fin [PRO.v{V} D{N}]]]]]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.sano- [että [[D mina] [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]]]]]
					Extracted head "Merja-" from D and created [[D Pekka] [PRO.T/fin [PRO.sano- [että [[D mina] [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:111 [PRO.T/fin [<DP>:111 [PRO.sano- [että [[D mina] [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]]]]]]
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
						<D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<D Pekka>:111 [PRO.T/fin [<DP>:111 [PRO.sano- [että [<D mina>:112 [PRO.T/fin [<DP>:112 [PRO.v [PRO.ihaile- [D Merja-]]]]]]]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [sano- [että [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:111.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:111.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:111.
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:112.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:112.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from <DP>:112.
			= [<D Pekka> [T/fin [<D Pekka> [sano- [että [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:111 [phi.T/fin [<DP>:111 [PRO.sano- [että [<D mina>:112 [phi.T/fin [<DP>:112 [PRO.v [PRO.ihaile- [D Merja-]]]]]]]]]]] into Conceptual-Intentional system...
				PRO.sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> 4. <D Pekka> 5. T/fin 6. <D Pekka> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. <D mina> 3. T/fin 4. <D mina> 5. <D Pekka> 6. T/fin 7. <D Pekka> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ihaile-([D Merja-])', 'PRO.sano-(<D Pekka>)', 'PRO.v(<D mina>)']
!--->		Tests passed (with 32/314 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [sano- [että [<D mina> [T/fin [<D mina> [v [ihaile- [D Merja-]]]]]]]]]]]
		Grammar: [<D Pekka>:1 [phi.T/fin [<DP>:1 [PRO.sano- [että [<D mina>:2 [phi.T/fin [<DP>:2 [PRO.v [PRO.ihaile- [D Merja-]]]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [ [DP:2 [TT/fin [__:2 [v [V [D N]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
D: [D, , V, TT/fin]
mina: [N, D, , V, TT/fin]
phi.T/fin: [TT/fin, , V, TT/fin]
(D): [D, TT/fin, , V, TT/fin]
(N): [N, D, TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.ihaile-: [V, v, TT/fin, , V, TT/fin]
D: [D, V, v, TT/fin, , V, TT/fin]
Merja-: [N, D, V, v, TT/fin, , V, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 57
['Pekka', 'sanoo', 'etta', 'ihailen', 'Merjaa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

9.
		Next word "sanoo" contains multiple morphemes ['$[-V]', '$T/fin', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					D was opened into [D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] PRO.T/fin]

11.

		Consume "sano-"

		[[D Pekka] T/fin] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sano-]
			=[[D Pekka] PRO.T/fin{V}]

12.

		Consume "että"

		[[D Pekka] T/fin{V}] + että
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> sano-]]] että] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} että]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.sano-" from PRO.T/fin and created [PRO.T/fin PRO.sano-]
				PRO.sano- (sano-) is missing complement FORCE
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} että]]

13.
		Next word "ihailen" contains multiple morphemes ['$[-n]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=[[D Pekka] [PRO.T/fin{V} että]]

14.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[[D Pekka] [T/fin{V} että]] + T/fin
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- että]]]] PRO.T/fin] due to bad left branch.
				Reject [[T/fin [sano- että]] PRO.T/fin] due to bad left branch.
		Exploring solution number (1) =[että T/fin]
			Transferring että to LF.
				head movement reconstruction:
					Reconstructing head movement for että.
				Feature processing:
				Floater movement reconstruction:
					= että
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				että probing for CAT:T/fin failed.
				A phi-marked head "että" lacks complement
					Extraposition will be tried on että.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin]]]

15.

		Consume "v"

		[[D Pekka] [T/fin{V} [että T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v}]]]

16.

		Consume "ihaile-"

		[[D Pekka] [T/fin{V} [että T/fin{v}]]] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

17.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

18.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

19.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

20.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

21.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

22.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

23.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D Pekka] [T/fin{V} [että T/fin{v,V}]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin [v ihaile-]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [T/fin [sano- [että [T/fin [v ihaile-]]]]] as left branch because it constitutes illicit structure.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [että [T/fin [v ihaile-]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]] + D = -197]
				[PRO.T/fin{V} [että PRO.T/fin{v,V}]] + D = -194]
				[että PRO.T/fin{v,V}] + D = -94]
				PRO.T/fin{v,V} + D = 166]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[että PRO.T/fin{v,V}]; D]
			3. [[PRO.T/fin{V} [että PRO.T/fin{v,V}]]; D]
			4. [[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} D]]]]

24.

		Consume "Merja-"

		[[D Pekka] [T/fin{V} [että [T/fin{v,V} D]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} D{N}]]]]

25.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [että [T/fin{v,V} D{N}]]]] (1.)
		Reconstructing...
			Transferring [[D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} D{N}]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} D{N}]]]].
						Extracted head "PRO.sano-" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin{v,V} D{N}]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v{V} D{N}]]]]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]]]]
					Extracted head "Merja-" from D and created [[D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:117 [PRO.T/fin [<DP>:117 [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin [v [ihaile- [D Merja-]]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:117.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:117.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:117.
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:1 from the edge of phi.T/fin.
			= [<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin [v [ihaile- [D Merja-]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:117 [phi.T/fin [<DP>:117 [PRO.sano- [että [phi.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]]]]] into Conceptual-Intentional system...
				PRO.sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: 2. <D Pekka> 3. T/fin 4. <D Pekka> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. T/fin 3. <D Pekka> 4. T/fin 5. <D Pekka> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ihaile-([D Merja-])', 'PRO.sano-(<D Pekka>)', 'PRO.v(T/fin)']
!--->		Tests passed (with 25/252 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin [v [ihaile- [D Merja-]]]]]]]]]
		Grammar: [<D Pekka>:1 [phi.T/fin [<DP>:1 [PRO.sano- [että [phi.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [ [TT/fin [v [V [D N]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
phi.T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.ihaile-: [V, v, TT/fin, , V, TT/fin]
D: [D, V, v, TT/fin, , V, TT/fin]
Merja-: [N, D, V, v, TT/fin, , V, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 58
['Pekka', 'sanoo', 'etta', 'ihailee', 'Merjaa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

9.
		Next word "sanoo" contains multiple morphemes ['$[-V]', '$T/fin', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					D was opened into [D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] PRO.T/fin]

11.

		Consume "sano-"

		[[D Pekka] T/fin] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sano-]
			=[[D Pekka] PRO.T/fin{V}]

12.

		Consume "että"

		[[D Pekka] T/fin{V}] + että
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> sano-]]] että] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} että]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.sano-" from PRO.T/fin and created [PRO.T/fin PRO.sano-]
				PRO.sano- (sano-) is missing complement FORCE
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} että]]

13.
		Next word "ihailee" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=[[D Pekka] [PRO.T/fin{V} että]]

14.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[[D Pekka] [T/fin{V} että]] + T/fin
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- että]]]] PRO.T/fin] due to bad left branch.
				Reject [[T/fin [sano- että]] PRO.T/fin] due to bad left branch.
		Exploring solution number (1) =[että T/fin]
			Transferring että to LF.
				head movement reconstruction:
					Reconstructing head movement for että.
				Feature processing:
				Floater movement reconstruction:
					= että
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				että probing for CAT:T/fin failed.
				A phi-marked head "että" lacks complement
					Extraposition will be tried on että.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin]]]

15.

		Consume "v"

		[[D Pekka] [T/fin{V} [että T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v}]]]

16.

		Consume "ihaile-"

		[[D Pekka] [T/fin{V} [että T/fin{v}]]] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

17.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

18.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

19.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

20.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

21.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

22.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

23.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D Pekka] [T/fin{V} [että T/fin{v,V}]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin [v ihaile-]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [T/fin [sano- [että [T/fin [v ihaile-]]]]] as left branch because it constitutes illicit structure.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [että [T/fin [v ihaile-]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]] + D = -197]
				[PRO.T/fin{V} [että PRO.T/fin{v,V}]] + D = -194]
				[että PRO.T/fin{v,V}] + D = -94]
				PRO.T/fin{v,V} + D = 166]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[että PRO.T/fin{v,V}]; D]
			3. [[PRO.T/fin{V} [että PRO.T/fin{v,V}]]; D]
			4. [[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} D]]]]

24.

		Consume "Merja-"

		[[D Pekka] [T/fin{V} [että [T/fin{v,V} D]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} D{N}]]]]

25.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [että [T/fin{v,V} D{N}]]]] (1.)
		Reconstructing...
			Transferring [[D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} D{N}]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} D{N}]]]].
						Extracted head "PRO.sano-" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin{v,V} D{N}]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v{V} D{N}]]]]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]]]]
					Extracted head "Merja-" from D and created [[D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:122 [PRO.T/fin [<DP>:122 [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin [v [ihaile- [D Merja-]]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:122.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:122.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:122.
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			= [<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin [v [ihaile- [D Merja-]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:122 [phi.T/fin [<DP>:122 [PRO.sano- [että [pro/x.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]]]]] into Conceptual-Intentional system...
				PRO.sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				pro/x.T/fin with ['PHI:DET:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. <D Pekka> 3. T/fin 4. <D Pekka> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ihaile-([D Merja-])', 'PRO.sano-(<D Pekka>)', 'PRO.v(<D Pekka>)', 'pro/x.T/fin(<D Pekka>)']
!--->		Tests passed (with 25/253 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin [v [ihaile- [D Merja-]]]]]]]]]
		Grammar: [<D Pekka>:1 [phi.T/fin [<DP>:1 [PRO.sano- [että [pro/x.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [ [TT/fin [v [V [D N]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.ihaile-: [V, v, TT/fin, , V, TT/fin]
D: [D, V, v, TT/fin, , V, TT/fin]
Merja-: [N, D, V, v, TT/fin, , V, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 59
['mina', 'sanon', 'etta', 'ihailee', 'Merjaa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "mina" contains multiple morphemes ['$hum', '$def', '$1p', '$sg', '$nom', '$D', 'mina-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

7.

		Consume "mina"

		D + mina
			Filtering out impossible merge sites...
			Sink "mina" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mina]
			=D{N}

8.
		Next word "sanon" contains multiple morphemes ['$[-n]', '$T/fin', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "mina" from D and created [D mina]
					Reconstructing head movement for D{N}.
					Extracted head "mina" from D and created [D mina]
					D was opened into [D mina].
				Feature processing:
				Floater movement reconstruction:
					= [D mina]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D mina] PRO.T/fin]

10.

		Consume "sano-"

		[[D mina] T/fin] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sano-]
			=[[D mina] PRO.T/fin{V}]

11.

		Consume "että"

		[[D mina] T/fin{V}] + että
			Filtering out impossible merge sites...
				Reject [[<D mina> [T/fin [<D mina> sano-]]] että] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} että]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.sano-" from PRO.T/fin and created [PRO.T/fin PRO.sano-]
				PRO.sano- (sano-) is missing complement FORCE
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[D mina] [PRO.T/fin{V} että]]

12.
		Next word "ihailee" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=[[D mina] [PRO.T/fin{V} että]]

13.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[[D mina] [T/fin{V} että]] + T/fin
			Filtering out impossible merge sites...
				Reject [[<D mina> [T/fin [<D mina> [sano- että]]]] PRO.T/fin] due to bad left branch.
				Reject [[T/fin [sano- että]] PRO.T/fin] due to bad left branch.
		Exploring solution number (1) =[että T/fin]
			Transferring että to LF.
				head movement reconstruction:
					Reconstructing head movement for että.
				Feature processing:
				Floater movement reconstruction:
					= että
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				että probing for CAT:T/fin failed.
				A phi-marked head "että" lacks complement
					Extraposition will be tried on että.
				Agreement reconstruction:
			=[[D mina] [PRO.T/fin{V} [että PRO.T/fin]]]

14.

		Consume "v"

		[[D mina] [T/fin{V} [että T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D mina] [PRO.T/fin{V} [että PRO.T/fin{v}]]]

15.

		Consume "ihaile-"

		[[D mina] [T/fin{V} [että T/fin{v}]]] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

16.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

18.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

19.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

20.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

21.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

22.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] [T/fin{V} [että T/fin{v,V}]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D mina> [T/fin [<D mina> [sano- [että [T/fin [v ihaile-]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [T/fin [sano- [että [T/fin [v ihaile-]]]]] as left branch because it constitutes illicit structure.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [että [T/fin [v ihaile-]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]] + D = -197]
				[PRO.T/fin{V} [että PRO.T/fin{v,V}]] + D = -194]
				[että PRO.T/fin{v,V}] + D = -94]
				PRO.T/fin{v,V} + D = 166]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[että PRO.T/fin{v,V}]; D]
			3. [[PRO.T/fin{V} [että PRO.T/fin{v,V}]]; D]
			4. [[[D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D mina] [PRO.T/fin{V} [että [PRO.T/fin{v,V} D]]]]

23.

		Consume "Merja-"

		[[D mina] [T/fin{V} [että [T/fin{v,V} D]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D mina] [PRO.T/fin{V} [että [PRO.T/fin{v,V} D{N}]]]]

24.
	>>>	Trying candidate parse [[D mina] [T/fin{V} [että [T/fin{v,V} D{N}]]]] (1.)
		Reconstructing...
			Transferring [[D mina] [PRO.T/fin{V} [että [PRO.T/fin{v,V} D{N}]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] [PRO.T/fin{V} [että [PRO.T/fin{v,V} D{N}]]]].
						Extracted head "PRO.sano-" and reconstructed it = [[D mina] [PRO.T/fin [PRO.sano- [että [PRO.T/fin{v,V} D{N}]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[D mina] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v{V} D{N}]]]]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D mina] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]]]]
					Extracted head "Merja-" from D and created [[D mina] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
						<D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<D mina>:127 [PRO.T/fin [<DP>:127 [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]]]]]
					= [<D mina> [T/fin [<D mina> [sano- [että [T/fin [v [ihaile- [D Merja-]]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:127.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:127.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from <DP>:127.
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			= [<D mina> [T/fin [<D mina> [sano- [että [T/fin [v [ihaile- [D Merja-]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D mina>:127 [phi.T/fin [<DP>:127 [PRO.sano- [että [pro/x.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]]]]] into Conceptual-Intentional system...
				PRO.sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				pro/x.T/fin with ['PHI:DET:_'] was associated at LF with:
					No antecedent found, LF-object crashes.
					Cannot be interpreted at C-I
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. <D mina> 3. T/fin 4. <D mina> )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
mina: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.ihaile-: [V, v, TT/fin, , V, TT/fin]
D: [D, V, v, TT/fin, , V, TT/fin]
Merja-: [N, D, V, v, TT/fin, , V, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[että PRO.T/fin{v,V}] D]
			Transferring [että PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [että PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [että [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [että [PRO.T/fin [PRO.v PRO.ihaile-]]]
				Feature processing:
				Floater movement reconstruction:
					= [että [T/fin [v ihaile-]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [että [PRO.T/fin [PRO.v PRO.ihaile-]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			=[[D mina] [PRO.T/fin{V} [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] D]]]

25.

		Consume "Merja-"

		[[D mina] [T/fin{V} [[että [T/fin [v ihaile-]]] D]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D mina] [PRO.T/fin{V} [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] D{N}]]]

26.
	>>>	Trying candidate parse [[D mina] [T/fin{V} [[että [T/fin [v ihaile-]]] D{N}]]] (2.)
		Reconstructing...
			Transferring [[D mina] [PRO.T/fin{V} [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] D{N}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] [PRO.T/fin{V} [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] D{N}]]].
						Extracted head "PRO.sano-" and reconstructed it = [[D mina] [PRO.T/fin [PRO.sano- [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] D{N}]]]]
					Extracted head "Merja-" from D and created [[D mina] [PRO.T/fin [PRO.sano- [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] [D Merja-]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
						<D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<D mina>:128 [PRO.T/fin [<DP>:128 [PRO.sano- [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] [D Merja-]]]]]]
					= [<D mina> [T/fin [<D mina> [sano- [[että [T/fin [v ihaile-]]] [D Merja-]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					PRO.sano- (sano-) is missing a mandatory complement FORCE
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [<D mina>:128 [PRO.T/fin [<DP>:128 [PRO.sano- [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] [D Merja-]]]]]].
						<D Merja-> was made an adjunct.
					<D Merja-> was made adjunct by an extraposition rule.
				PRO.ihaile- (ihaile-) is missing complement D
					The structure is still illicit! Try phi-tailing as a last resort?
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:128.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:128.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from <DP>:128.
					pro/x.T/fin has unvalued phi-features {'PHI:DET:_'}
			= [<D mina> [T/fin [<D mina> [sano- [[että [T/fin [v ihaile-]]] <D Merja->]]]]]
		Checking LF-interface conditions.
				PRO.ihaile- (ihaile-) is missing complement D
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'TAIL:PHI:DET:DEF,PHI:HUM:HUM,PHI:NUM:SG,PHI:PER:3,!COMP:*', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
mina: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.ihaile-: [V, v, TT/fin, , V, TT/fin]
D: [D, V, TT/fin]
Merja-: [N, D, V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[PRO.T/fin{V} [että PRO.T/fin{v,V}]] D]
			Transferring [PRO.T/fin{V} [että PRO.T/fin{v,V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [että PRO.T/fin{v,V}]].
						Extracted head "PRO.sano-" and reconstructed it = [PRO.T/fin [PRO.sano- [että PRO.T/fin{v,V}]]]
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin [PRO.sano- [että [PRO.T/fin PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v PRO.ihaile-]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [sano- [että [T/fin [v ihaile-]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v PRO.ihaile-]]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:1 from the edge of phi.T/fin.
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			=[[D mina] [[phi.T/fin [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]] D]]

27.

		Consume "Merja-"

		[[D mina] [[T/fin [sano- [että [T/fin [v ihaile-]]]]] D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D mina] [[phi.T/fin [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]] D{N}]]

28.
	>>>	Trying candidate parse [[D mina] [[T/fin [sano- [että [T/fin [v ihaile-]]]]] D{N}]] (3.)
		Reconstructing...
			Transferring [[D mina] [[phi.T/fin [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]] D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] [[phi.T/fin [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]] D{N}]].
					Extracted head "Merja-" from D and created [[D mina] [[phi.T/fin [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]] [D Merja-]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
					D at the right failed to tail [-VAL][ARG]
						<D Merja-> was made an adjunct.
					Dropping <D Merja->
						Floater <D Merja-> dropped.
						 = [[D mina] [[phi.T/fin [PRO.sano- [<DP>:129 [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]] <D Merja->:129]]
					Dropping <DP>:129
						Floater <D Merja-> dropped.
						 = [[D mina] [[phi.T/fin [PRO.sano- [<DP>:129 [että [pro/x.T/fin [PRO.v [<DP>:129 PRO.ihaile-]]]]]]] <D Merja->:129]]
					= [[D mina] [[T/fin [sano- [<D Merja-> [että [T/fin [v [<D Merja-> ihaile-]]]]]]] <D Merja->]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D mina " into memory buffer from SPEC of "phi.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D mina]:3 from memory buffer into Spec of PRO.sano-
					Result [[D mina]:3 [[phi.T/fin [(DP):3 [PRO.sano- [<DP>:129 [että [pro/x.T/fin [PRO.v [<DP>:129 PRO.ihaile-]]]]]]]] <D Merja->:129]]
				Agreement reconstruction:
					pro/x.T/fin has unvalued phi-features {'PHI:DET:_'}
			= [[D mina] [[T/fin [[D mina] [sano- [<D Merja-> [että [T/fin [v [<D Merja-> ihaile-]]]]]]]] <D Merja->]]
		Checking LF-interface conditions.
			Trying to transfer [[D mina]:3 [[phi.T/fin [(DP):3 [PRO.sano- [<DP>:129 [että [pro/x.T/fin [PRO.v [<DP>:129 PRO.ihaile-]]]]]]]] <D Merja->:129]] into Conceptual-Intentional system...
				PRO.sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mina]    (alternatives: 2. T/fin 3. [D mina] 4. [D mina] )
				pro/x.T/fin with ['PHI:DET:_'] was associated at LF with:
					No antecedent found, LF-object crashes.
					Cannot be interpreted at C-I
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Merja->    (alternatives: 2. [D mina] 3. T/fin 4. [D mina] 5. [D mina] )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D Merja-> 3. [D mina] 4. T/fin 5. [D mina] 6. [D mina] )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
mina: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
(D): [D, V, TT/fin]
(N): [N, D, V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
(D): [D, v, TT/fin, , V, TT/fin]
(N): [N, D, v, TT/fin, , V, TT/fin]
PRO.ihaile-: [V, v, TT/fin, , V, TT/fin]
D: [D]
Merja-: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (4) =[[[D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]] D]
			Transferring [[D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]].
						Extracted head "PRO.sano-" and reconstructed it = [[D mina] [PRO.T/fin [PRO.sano- [että PRO.T/fin{v,V}]]]]
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[D mina] [PRO.T/fin [PRO.sano- [että [PRO.T/fin PRO.v{V}]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [[D mina] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v PRO.ihaile-]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
						<D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<D mina>:131 [PRO.T/fin [<DP>:131 [PRO.sano- [että [PRO.T/fin [PRO.v PRO.ihaile-]]]]]]]
					= [<D mina> [T/fin [<D mina> [sano- [että [T/fin [v ihaile-]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [<D mina>:131 [PRO.T/fin [<DP>:131 [PRO.sano- [että [PRO.T/fin [PRO.v PRO.ihaile-]]]]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:131.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:131.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from <DP>:131.
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			=[[<D mina>:131 [phi.T/fin [<DP>:131 [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]]] D]

29.

		Consume "Merja-"

		[[<D mina> [T/fin [<D mina> [sano- [että [T/fin [v ihaile-]]]]]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[<D mina>:131 [phi.T/fin [<DP>:131 [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]]] D{N}]

30.
	>>>	Trying candidate parse [[<D mina> [T/fin [<D mina> [sano- [että [T/fin [v ihaile-]]]]]]] D{N}] (4.)
		Reconstructing...
			Transferring [[<D mina>:131 [phi.T/fin [<DP>:131 [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]]] D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<D mina>:131 [phi.T/fin [<DP>:131 [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]]] D{N}].
					Extracted head "Merja-" from D and created [[<D mina>:131 [phi.T/fin [<DP>:131 [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]]] [D Merja-]]
				Feature processing:
				Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D Merja-> was made an adjunct.
					Dropping <D Merja->
						Floater <D Merja-> dropped.
						 = [[<D mina>:131 [phi.T/fin [<DP>:131 [PRO.sano- [<DP>:132 [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]]]] <D Merja->:132]
					Dropping <DP>:132
						Floater <D Merja-> dropped.
						 = [[<D mina>:131 [phi.T/fin [<DP>:131 [PRO.sano- [<DP>:132 [että [pro/x.T/fin [PRO.v [<DP>:132 PRO.ihaile-]]]]]]]]] <D Merja->:132]
					= [[<D mina> [T/fin [<D mina> [sano- [<D Merja-> [että [T/fin [v [<D Merja-> ihaile-]]]]]]]]] <D Merja->]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					pro/x.T/fin has unvalued phi-features {'PHI:DET:_'}
			= [[<D mina> [T/fin [<D mina> [sano- [<D Merja-> [että [T/fin [v [<D Merja-> ihaile-]]]]]]]]] <D Merja->]
		Checking LF-interface conditions.
			Trying to transfer [[<D mina>:131 [phi.T/fin [<DP>:131 [PRO.sano- [<DP>:132 [että [pro/x.T/fin [PRO.v [<DP>:132 PRO.ihaile-]]]]]]]]] <D Merja->:132] into Conceptual-Intentional system...
				PRO.sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				pro/x.T/fin with ['PHI:DET:_'] was associated at LF with:
					No antecedent found, LF-object crashes.
					Cannot be interpreted at C-I
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D mina> 3. T/fin 4. <D mina> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D Merja-> 3. <D mina> 4. T/fin 5. <D mina> )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
mina: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
(D): [D, V, TT/fin]
(N): [N, D, V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
(D): [D, v, TT/fin, , V, TT/fin]
(N): [N, D, v, TT/fin, , V, TT/fin]
PRO.ihaile-: [V, v, TT/fin, , V, TT/fin]
D: [D]
Merja-: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$par".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

31.

		Adding inflectional features ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D mina] [T/fin{V} [että T/fin{v,V}]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D mina> [T/fin [<D mina> [sano- [että [T/fin [v ihaile-]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [T/fin [sano- [että [T/fin [v ihaile-]]]]] as left branch because it constitutes illicit structure.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [että [T/fin [v ihaile-]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]] + D = -197]
				[PRO.T/fin{V} [että PRO.T/fin{v,V}]] + D = -194]
				[että PRO.T/fin{v,V}] + D = -94]
				PRO.T/fin{v,V} + D = 166]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[että PRO.T/fin{v,V}]; D]
			3. [[PRO.T/fin{V} [että PRO.T/fin{v,V}]]; D]
			4. [[[D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D mina] [PRO.T/fin{V} [että [PRO.T/fin{v,V} D]]]]

32.

		Consume "Merjaa"

		[[D mina] [T/fin{V} [että [T/fin{v,V} D]]]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D mina] [PRO.T/fin{V} [että [PRO.T/fin{v,V} D{N}]]]]

33.
	>>>	Trying candidate parse [[D mina] [T/fin{V} [että [T/fin{v,V} D{N}]]]] (5.)
		Reconstructing...
			Transferring [[D mina] [PRO.T/fin{V} [että [PRO.T/fin{v,V} D{N}]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] [PRO.T/fin{V} [että [PRO.T/fin{v,V} D{N}]]]].
						Extracted head "PRO.sano-" and reconstructed it = [[D mina] [PRO.T/fin [PRO.sano- [että [PRO.T/fin{v,V} D{N}]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[D mina] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v{V} D{N}]]]]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D mina] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]]]]
					Extracted head "Merjaa" from D and created [[D mina] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- [D Merjaa]]]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
						<D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<D mina>:136 [PRO.T/fin [<DP>:136 [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- [D Merjaa]]]]]]]]]
					= [<D mina> [T/fin [<D mina> [sano- [että [T/fin [v [ihaile- [D Merjaa]]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:136.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:136.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from <DP>:136.
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			= [<D mina> [T/fin [<D mina> [sano- [että [T/fin [v [ihaile- [D Merjaa]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D mina>:136 [phi.T/fin [<DP>:136 [PRO.sano- [että [pro/x.T/fin [PRO.v [PRO.ihaile- [D Merjaa]]]]]]]]] into Conceptual-Intentional system...
				PRO.sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				pro/x.T/fin with ['PHI:DET:_'] was associated at LF with:
					No antecedent found, LF-object crashes.
					Cannot be interpreted at C-I
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:ARG,-VAL', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
mina: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.ihaile-: [V, v, TT/fin, , V, TT/fin]
D: [D, V, v, TT/fin, , V, TT/fin]
Merjaa: [N, D, V, v, TT/fin, , V, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[että PRO.T/fin{v,V}] D]
			Transferring [että PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [että PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [että [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [että [PRO.T/fin [PRO.v PRO.ihaile-]]]
				Feature processing:
				Floater movement reconstruction:
					= [että [T/fin [v ihaile-]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [että [PRO.T/fin [PRO.v PRO.ihaile-]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			=[[D mina] [PRO.T/fin{V} [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] D]]]

34.

		Consume "Merjaa"

		[[D mina] [T/fin{V} [[että [T/fin [v ihaile-]]] D]]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D mina] [PRO.T/fin{V} [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] D{N}]]]

35.
	>>>	Trying candidate parse [[D mina] [T/fin{V} [[että [T/fin [v ihaile-]]] D{N}]]] (6.)
		Reconstructing...
			Transferring [[D mina] [PRO.T/fin{V} [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] D{N}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] [PRO.T/fin{V} [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] D{N}]]].
						Extracted head "PRO.sano-" and reconstructed it = [[D mina] [PRO.T/fin [PRO.sano- [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] D{N}]]]]
					Extracted head "Merjaa" from D and created [[D mina] [PRO.T/fin [PRO.sano- [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] [D Merjaa]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
						<D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<D mina>:137 [PRO.T/fin [<DP>:137 [PRO.sano- [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] [D Merjaa]]]]]]
					= [<D mina> [T/fin [<D mina> [sano- [[että [T/fin [v ihaile-]]] [D Merjaa]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					PRO.sano- (sano-) is missing a mandatory complement FORCE
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [<D mina>:137 [PRO.T/fin [<DP>:137 [PRO.sano- [[että [pro/x.T/fin [PRO.v PRO.ihaile-]]] [D Merjaa]]]]]].
						<D Merjaa> was made an adjunct.
					<D Merjaa> was made adjunct by an extraposition rule.
				PRO.ihaile- (ihaile-) is missing complement D
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:137.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:137.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from <DP>:137.
					pro/x.T/fin has unvalued phi-features {'PHI:DET:_'}
			= [<D mina> [T/fin [<D mina> [sano- [[että [T/fin [v ihaile-]]] <D Merjaa>]]]]]
		Checking LF-interface conditions.
				PRO.ihaile- (ihaile-) is missing complement D
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:ARG,-VAL', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
mina: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.ihaile-: [V, v, TT/fin, , V, TT/fin]
D: [D, V, TT/fin]
Merjaa: [N, D, V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[PRO.T/fin{V} [että PRO.T/fin{v,V}]] D]
			Transferring [PRO.T/fin{V} [että PRO.T/fin{v,V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [että PRO.T/fin{v,V}]].
						Extracted head "PRO.sano-" and reconstructed it = [PRO.T/fin [PRO.sano- [että PRO.T/fin{v,V}]]]
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin [PRO.sano- [että [PRO.T/fin PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v PRO.ihaile-]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [sano- [että [T/fin [v ihaile-]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v PRO.ihaile-]]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:1 from the edge of phi.T/fin.
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			=[[D mina] [[phi.T/fin [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]] D]]

36.

		Consume "Merjaa"

		[[D mina] [[T/fin [sano- [että [T/fin [v ihaile-]]]]] D]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D mina] [[phi.T/fin [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]] D{N}]]

37.
	>>>	Trying candidate parse [[D mina] [[T/fin [sano- [että [T/fin [v ihaile-]]]]] D{N}]] (7.)
		Reconstructing...
			Transferring [[D mina] [[phi.T/fin [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]] D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] [[phi.T/fin [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]] D{N}]].
					Extracted head "Merjaa" from D and created [[D mina] [[phi.T/fin [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]] [D Merjaa]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
					D at the right failed to tail [-VAL][ARG]
						<D Merjaa> was made an adjunct.
					Dropping <D Merjaa>
						Floater <D Merjaa> dropped.
						 = [[D mina] [[phi.T/fin [PRO.sano- [<DP>:138 [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]] <D Merjaa>:138]]
					Dropping <DP>:138
						Floater <D Merjaa> dropped.
						 = [[D mina] [[phi.T/fin [PRO.sano- [<DP>:138 [että [pro/x.T/fin [PRO.v [<DP>:138 PRO.ihaile-]]]]]]] <D Merjaa>:138]]
					= [[D mina] [[T/fin [sano- [<D Merjaa> [että [T/fin [v [<D Merjaa> ihaile-]]]]]]] <D Merjaa>]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D mina " into memory buffer from SPEC of "phi.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D mina]:4 from memory buffer into Spec of PRO.sano-
					Result [[D mina]:4 [[phi.T/fin [(DP):4 [PRO.sano- [<DP>:138 [että [pro/x.T/fin [PRO.v [<DP>:138 PRO.ihaile-]]]]]]]] <D Merjaa>:138]]
				Agreement reconstruction:
					pro/x.T/fin has unvalued phi-features {'PHI:DET:_'}
			= [[D mina] [[T/fin [[D mina] [sano- [<D Merjaa> [että [T/fin [v [<D Merjaa> ihaile-]]]]]]]] <D Merjaa>]]
		Checking LF-interface conditions.
			Trying to transfer [[D mina]:4 [[phi.T/fin [(DP):4 [PRO.sano- [<DP>:138 [että [pro/x.T/fin [PRO.v [<DP>:138 PRO.ihaile-]]]]]]]] <D Merjaa>:138]] into Conceptual-Intentional system...
				PRO.sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mina]    (alternatives: 2. T/fin 3. [D mina] 4. [D mina] )
				pro/x.T/fin with ['PHI:DET:_'] was associated at LF with:
					No antecedent found, LF-object crashes.
					Cannot be interpreted at C-I
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mina]    (alternatives: 2. T/fin 3. [D mina] 4. [D mina] )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D mina]    (alternatives: 2. T/fin 3. [D mina] 4. [D mina] )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'VAL', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
mina: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
(D): [D, V, TT/fin]
(N): [N, D, V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
(D): [D, v, TT/fin, , V, TT/fin]
(N): [N, D, v, TT/fin, , V, TT/fin]
PRO.ihaile-: [V, v, TT/fin, , V, TT/fin]
D: [D]
Merjaa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (4) =[[[D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]] D]
			Transferring [[D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D mina] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]].
						Extracted head "PRO.sano-" and reconstructed it = [[D mina] [PRO.T/fin [PRO.sano- [että PRO.T/fin{v,V}]]]]
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[D mina] [PRO.T/fin [PRO.sano- [että [PRO.T/fin PRO.v{V}]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [[D mina] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v PRO.ihaile-]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
						<D mina> was made an adjunct.
						Floater <D mina> dropped.
						 = [<D mina>:140 [PRO.T/fin [<DP>:140 [PRO.sano- [että [PRO.T/fin [PRO.v PRO.ihaile-]]]]]]]
					= [<D mina> [T/fin [<D mina> [sano- [että [T/fin [v ihaile-]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.ihaile- (ihaile-) is missing complement D
					Extraposition will be tried on [<D mina>:140 [PRO.T/fin [<DP>:140 [PRO.sano- [että [PRO.T/fin [PRO.v PRO.ihaile-]]]]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:140.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:140.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from <DP>:140.
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			=[[<D mina>:140 [phi.T/fin [<DP>:140 [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]]] D]

38.

		Consume "Merjaa"

		[[<D mina> [T/fin [<D mina> [sano- [että [T/fin [v ihaile-]]]]]]] D] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[<D mina>:140 [phi.T/fin [<DP>:140 [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]]] D{N}]

39.
	>>>	Trying candidate parse [[<D mina> [T/fin [<D mina> [sano- [että [T/fin [v ihaile-]]]]]]] D{N}] (8.)
		Reconstructing...
			Transferring [[<D mina>:140 [phi.T/fin [<DP>:140 [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]]] D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<D mina>:140 [phi.T/fin [<DP>:140 [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]]] D{N}].
					Extracted head "Merjaa" from D and created [[<D mina>:140 [phi.T/fin [<DP>:140 [PRO.sano- [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]]] [D Merjaa]]
				Feature processing:
				Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
						<D Merjaa> was made an adjunct.
					Dropping <D Merjaa>
						Floater <D Merjaa> dropped.
						 = [[<D mina>:140 [phi.T/fin [<DP>:140 [PRO.sano- [<DP>:141 [että [pro/x.T/fin [PRO.v PRO.ihaile-]]]]]]]] <D Merjaa>:141]
					Dropping <DP>:141
						Floater <D Merjaa> dropped.
						 = [[<D mina>:140 [phi.T/fin [<DP>:140 [PRO.sano- [<DP>:141 [että [pro/x.T/fin [PRO.v [<DP>:141 PRO.ihaile-]]]]]]]]] <D Merjaa>:141]
					= [[<D mina> [T/fin [<D mina> [sano- [<D Merjaa> [että [T/fin [v [<D Merjaa> ihaile-]]]]]]]]] <D Merjaa>]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					pro/x.T/fin has unvalued phi-features {'PHI:DET:_'}
			= [[<D mina> [T/fin [<D mina> [sano- [<D Merjaa> [että [T/fin [v [<D Merjaa> ihaile-]]]]]]]]] <D Merjaa>]
		Checking LF-interface conditions.
			Trying to transfer [[<D mina>:140 [phi.T/fin [<DP>:140 [PRO.sano- [<DP>:141 [että [pro/x.T/fin [PRO.v [<DP>:141 PRO.ihaile-]]]]]]]]] <D Merjaa>:141] into Conceptual-Intentional system...
				PRO.sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				pro/x.T/fin with ['PHI:DET:_'] was associated at LF with:
					No antecedent found, LF-object crashes.
					Cannot be interpreted at C-I
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D mina> )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'VAL', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'VAL']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
mina: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
(D): [D, V, TT/fin]
(N): [N, D, V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
(D): [D, v, TT/fin, , V, TT/fin]
(N): [N, D, v, TT/fin, , V, TT/fin]
PRO.ihaile-: [V, v, TT/fin, , V, TT/fin]
D: [D]
Merjaa: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihailee".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "etta".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sano-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sanon".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mina-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$nom".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$1p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mina".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 60
['Pekka', 'sanoo', 'etta', 'Jukka', 'sanoo', 'etta', 'ihailee', 'Merjaa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

9.
		Next word "sanoo" contains multiple morphemes ['$[-V]', '$T/fin', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					D was opened into [D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] PRO.T/fin]

11.

		Consume "sano-"

		[[D Pekka] T/fin] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sano-]
			=[[D Pekka] PRO.T/fin{V}]

12.

		Consume "että"

		[[D Pekka] T/fin{V}] + että
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> sano-]]] että] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} että]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.sano-" from PRO.T/fin and created [PRO.T/fin PRO.sano-]
				PRO.sano- (sano-) is missing complement FORCE
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} että]]

13.
		Next word "Jukka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Jukka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[D Pekka] [PRO.T/fin{V} että]]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D Pekka] [PRO.T/fin{V} että]]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D Pekka] [PRO.T/fin{V} että]]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D Pekka] [PRO.T/fin{V} että]]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=[[D Pekka] [PRO.T/fin{V} että]]

18.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=[[D Pekka] [PRO.T/fin{V} että]]

19.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		[[D Pekka] [T/fin{V} että]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- että]]]] D] due to bad left branch.
				Reject [[T/fin [sano- että]] D] due to bad left branch.
		Exploring solution number (1) =[että D]
			Transferring että to LF.
				head movement reconstruction:
					Reconstructing head movement for että.
				Feature processing:
				Floater movement reconstruction:
					= että
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				että probing for CAT:T/fin failed.
				A phi-marked head "että" lacks complement
					Extraposition will be tried on että.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} [että D]]]

20.

		Consume "Jukka"

		[[D Pekka] [T/fin{V} [että D]]] + Jukka
			Filtering out impossible merge sites...
			Sink "Jukka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Jukka]
			=[[D Pekka] [PRO.T/fin{V} [että D{N}]]]

21.
		Next word "sanoo" contains multiple morphemes ['$[-V]', '$T/fin', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=[[D Pekka] [PRO.T/fin{V} [että D{N}]]]

22.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[[D Pekka] [T/fin{V} [että D{N}]]] + T/fin
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- [että <D Jukka>]]]]] PRO.T/fin] due to bad left branch.
				Reject [[T/fin [sano- [että <D Jukka>]]] PRO.T/fin] due to bad left branch.
				Reject [[että <D Jukka>] PRO.T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Jukka" from D and created [D Jukka]
					Reconstructing head movement for D{N}.
					Extracted head "Jukka" from D and created [D Jukka]
					D was opened into [D Jukka].
				Feature processing:
				Floater movement reconstruction:
					= [D Jukka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} [että [[D Jukka] PRO.T/fin]]]]

23.

		Consume "sano-"

		[[D Pekka] [T/fin{V} [että [[D Jukka] T/fin]]]] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sano-]
			=[[D Pekka] [PRO.T/fin{V} [että [[D Jukka] PRO.T/fin{V}]]]]

24.

		Consume "että"

		[[D Pekka] [T/fin{V} [että [[D Jukka] T/fin{V}]]]] + että
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- [että [<D Jukka> [T/fin [<D Jukka> sano-]]]]]]]] että] due to bad left branch.
				Reject [[T/fin [sano- [että [<D Jukka> [T/fin [<D Jukka> sano-]]]]]] että] due to bad left branch.
				Reject [[että [<D Jukka> [T/fin [<D Jukka> sano-]]]] että] due to bad left branch.
				Reject [[<D Jukka> [T/fin [<D Jukka> sano-]]] että] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} että]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.sano-" from PRO.T/fin and created [PRO.T/fin PRO.sano-]
				PRO.sano- (sano-) is missing complement FORCE
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} [että [[D Jukka] [PRO.T/fin{V} että]]]]]

25.
		Next word "ihailee" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=[[D Pekka] [PRO.T/fin{V} [että [[D Jukka] [PRO.T/fin{V} että]]]]]

26.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[[D Pekka] [T/fin{V} [että [[D Jukka] [T/fin{V} että]]]]] + T/fin
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- [että [<D Jukka> [T/fin [<D Jukka> [sano- että]]]]]]]]] PRO.T/fin] due to bad left branch.
				Reject [[T/fin [sano- [että [<D Jukka> [T/fin [<D Jukka> [sano- että]]]]]]] PRO.T/fin] due to bad left branch.
				Reject [[että [<D Jukka> [T/fin [<D Jukka> [sano- että]]]]] PRO.T/fin] due to bad left branch.
				Reject [[<D Jukka> [T/fin [<D Jukka> [sano- että]]]] PRO.T/fin] due to bad left branch.
				Reject [[T/fin [sano- että]] PRO.T/fin] due to bad left branch.
		Exploring solution number (1) =[että T/fin]
			Transferring että to LF.
				head movement reconstruction:
					Reconstructing head movement for että.
				Feature processing:
				Floater movement reconstruction:
					= että
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				että probing for CAT:T/fin failed.
				A phi-marked head "että" lacks complement
					Extraposition will be tried on että.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} [että [[D Jukka] [PRO.T/fin{V} [että PRO.T/fin]]]]]]

27.

		Consume "v"

		[[D Pekka] [T/fin{V} [että [[D Jukka] [T/fin{V} [että T/fin]]]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D Pekka] [PRO.T/fin{V} [että [[D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v}]]]]]]

28.

		Consume "ihaile-"

		[[D Pekka] [T/fin{V} [että [[D Jukka] [T/fin{V} [että T/fin{v}]]]]]] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[D Pekka] [PRO.T/fin{V} [että [[D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]]]]

29.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[D Pekka] [PRO.T/fin{V} [että [[D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]]]]

30.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D Pekka] [PRO.T/fin{V} [että [[D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]]]]

31.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D Pekka] [PRO.T/fin{V} [että [[D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]]]]

32.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D Pekka] [PRO.T/fin{V} [että [[D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]]]]

33.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[D Pekka] [PRO.T/fin{V} [että [[D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]]]]

34.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D Pekka] [PRO.T/fin{V} [että [[D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]]]]

35.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D Pekka] [T/fin{V} [että [[D Jukka] [T/fin{V} [että T/fin{v,V}]]]]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D Pekka> [T/fin [<D Pekka> [sano- [että [<D Jukka> [T/fin [<D Jukka> [sano- [että [T/fin [v ihaile-]]]]]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [T/fin [sano- [että [<D Jukka> [T/fin [<D Jukka> [sano- [että [T/fin [v ihaile-]]]]]]]]]] as left branch because it constitutes illicit structure.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [että [<D Jukka> [T/fin [<D Jukka> [sano- [että [T/fin [v ihaile-]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [<D Jukka> [T/fin [<D Jukka> [sano- [että [T/fin [v ihaile-]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [T/fin [sano- [että [T/fin [v ihaile-]]]]] as left branch because it constitutes illicit structure.
				PRO.ihaile- (ihaile-) is missing complement D
				Avoid [että [T/fin [v ihaile-]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D Pekka] [PRO.T/fin{V} [että [[D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]]]] + D = -197]
				[PRO.T/fin{V} [että [[D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]]] + D = -194]
				[että [[D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]] + D = -94]
				[[D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]] + D = -188]
				[PRO.T/fin{V} [että PRO.T/fin{v,V}]] + D = -185]
				[että PRO.T/fin{v,V}] + D = -88]
				PRO.T/fin{v,V} + D = 178]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[että PRO.T/fin{v,V}]; D]
			3. [[että [[D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]]; D]
			4. [[PRO.T/fin{V} [että PRO.T/fin{v,V}]]; D]
			5. [[[D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]; D]
			6. [[PRO.T/fin{V} [että [[D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]]]; D]
			7. [[[D Pekka] [PRO.T/fin{V} [että [[D Jukka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]]]]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} [että [[D Jukka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} D]]]]]]]

36.

		Consume "Merja-"

		[[D Pekka] [T/fin{V} [että [[D Jukka] [T/fin{V} [että [T/fin{v,V} D]]]]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D Pekka] [PRO.T/fin{V} [että [[D Jukka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} D{N}]]]]]]]

37.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [että [[D Jukka] [T/fin{V} [että [T/fin{v,V} D{N}]]]]]]] (1.)
		Reconstructing...
			Transferring [[D Pekka] [PRO.T/fin{V} [että [[D Jukka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} D{N}]]]]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [PRO.T/fin{V} [että [[D Jukka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} D{N}]]]]]]].
						Extracted head "PRO.sano-" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.sano- [että [[D Jukka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} D{N}]]]]]]]]
						Extracted head "PRO.sano-" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.sano- [että [[D Jukka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin{v,V} D{N}]]]]]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.sano- [että [[D Jukka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v{V} D{N}]]]]]]]]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.sano- [että [[D Jukka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]]]]]]]]
					Extracted head "Merja-" from D and created [[D Pekka] [PRO.T/fin [PRO.sano- [että [[D Jukka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]]]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:166 [PRO.T/fin [<DP>:166 [PRO.sano- [että [[D Jukka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]]]]]]]]]
					[D Jukka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Jukka]
						<D Jukka> was made an adjunct.
						Floater <D Jukka> dropped.
						 = [<D Pekka>:166 [PRO.T/fin [<DP>:166 [PRO.sano- [että [<D Jukka>:167 [PRO.T/fin [<DP>:167 [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]]]]]]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [sano- [että [<D Jukka> [T/fin [<D Jukka> [sano- [että [T/fin [v [ihaile- [D Merja-]]]]]]]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:166.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:166.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:166.
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:167.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:167.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:167.
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			= [<D Pekka> [T/fin [<D Pekka> [sano- [että [<D Jukka> [T/fin [<D Jukka> [sano- [että [T/fin [v [ihaile- [D Merja-]]]]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:166 [phi.T/fin [<DP>:166 [PRO.sano- [että [<D Jukka>:167 [phi.T/fin [<DP>:167 [PRO.sano- [että [pro/x.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]]]]]]]]]] into Conceptual-Intentional system...
				PRO.sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				PRO.sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Jukka>    (alternatives: 2. T/fin 3. <D Jukka> 4. <D Pekka> 5. T/fin 6. <D Pekka> )
				pro/x.T/fin with ['PHI:DET:_'] was associated at LF with:
					1. <D Jukka>    (alternatives: 2. T/fin 3. <D Pekka> 4. T/fin )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Jukka>    (alternatives: 2. T/fin 3. <D Jukka> 4. <D Pekka> 5. T/fin 6. <D Pekka> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. <D Jukka> 3. T/fin 4. <D Jukka> 5. <D Pekka> 6. T/fin 7. <D Pekka> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ihaile-([D Merja-])', 'PRO.sano-(<D Jukka>)', 'PRO.sano-(<D Pekka>)', 'PRO.v(<D Jukka>)', 'pro/x.T/fin(<D Jukka>)']
!--->		Tests passed (with 37/397 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [sano- [että [<D Jukka> [T/fin [<D Jukka> [sano- [että [T/fin [v [ihaile- [D Merja-]]]]]]]]]]]]]]
		Grammar: [<D Pekka>:1 [phi.T/fin [<DP>:1 [PRO.sano- [että [<D Jukka>:2 [phi.T/fin [<DP>:2 [PRO.sano- [että [pro/x.T/fin [PRO.v [PRO.ihaile- [D Merja-]]]]]]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [ [DP:2 [TT/fin [__:2 [V [ [TT/fin [v [V [D N]]]]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Jukka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Jukka', 'PF:Jukka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Jukka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Jukka', 'PF:Jukka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Jukka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Jukka', 'PF:Jukka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Jukka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Jukka', 'PF:Jukka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
D: [D, , V, TT/fin]
Jukka: [N, D, , V, TT/fin]
phi.T/fin: [TT/fin, , V, TT/fin]
(D): [D, TT/fin, , V, TT/fin]
(N): [N, D, TT/fin, , V, TT/fin]
PRO.sano-: [V, TT/fin, , V, TT/fin]
että: [, V, TT/fin, , V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin, , V, TT/fin]
PRO.ihaile-: [V, v, TT/fin, , V, TT/fin, , V, TT/fin]
D: [D, V, v, TT/fin, , V, TT/fin, , V, TT/fin]
Merja-: [N, D, V, v, TT/fin, , V, TT/fin, , V, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 61
['we', 'said', 'that', 'I', 'admire', 'Mary']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "we" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$pl', '$D', 'we-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.

		Consume "$pl"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
			=D

7.

		Consume "we"

		D + we
			Filtering out impossible merge sites...
			Sink "we" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*we]
			=D{N}

8.
		Next word "said" contains multiple morphemes ['$[-0]', '$T/fin', 'say-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "we" from D and created [D we]
					Reconstructing head movement for D{N}.
					Extracted head "we" from D and created [D we]
					D was opened into [D we].
				Feature processing:
				Floater movement reconstruction:
					= [D we]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D we] T/fin]

10.

		Consume "say"

		[[D we] T/fin] + say
			Filtering out impossible merge sites...
			Sink "say" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*say]
			=[[D we] T/fin{V}]

11.

		Consume "that"

		[[D we] T/fin{V}] + that
			Filtering out impossible merge sites...
				Reject [[[D we] [T/fin [[D we] say]]] that] due to bad left branch.
		Exploring solution number (1) =[T/fin{V} that]
			Transferring T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{V}.
					Extracted head "PRO.say" from T/fin and created [T/fin PRO.say]
				An EPP-head "T/fin" lacks specifier but needs one.
				PRO.say (say) is missing complement FORCE
					T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				A phi-marked head "T/fin{V}" lacks complement
				An EPP-head "T/fin{V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{V}.
				Agreement reconstruction:
			=[[D we] [T/fin{V} that]]

12.
		Next word "I" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$sg', '$D', 'I-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=[[D we] [T/fin{V} that]]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D we] [T/fin{V} that]]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=[[D we] [T/fin{V} that]]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=[[D we] [T/fin{V} that]]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D we] [T/fin{V} that]]

17.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']

		Consume "D"

		[[D we] [T/fin{V} that]] + D
			Filtering out impossible merge sites...
				Reject [[[D we] [T/fin [[D we] [say that]]]] D] due to bad left branch.
				Reject [[T/fin [say that]] D] due to bad left branch.
		Exploring solution number (1) =[that D]
			Transferring that to LF.
				head movement reconstruction:
					Reconstructing head movement for that.
				Feature processing:
				Floater movement reconstruction:
					= that
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				that probing for CAT:T/fin failed.
				A phi-marked head "that" lacks complement
					Extraposition will be tried on that.
				Agreement reconstruction:
			=[[D we] [T/fin{V} [that D]]]

18.

		Consume "I"

		[[D we] [T/fin{V} [that D]]] + I
			Filtering out impossible merge sites...
			Sink "I" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*I]
			=[[D we] [T/fin{V} [that D{N}]]]

19.
		Next word "admire" contains multiple morphemes ['$[-0]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=[[D we] [T/fin{V} [that D{N}]]]

20.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[[D we] [T/fin{V} [that D{N}]]] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D we] [T/fin [[D we] [say [that [D I]]]]]] T/fin] due to bad left branch.
				Reject [[T/fin [say [that [D I]]]] T/fin] due to bad left branch.
				Reject [[that [D I]] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "I" from D and created [D I]
					Reconstructing head movement for D{N}.
					Extracted head "I" from D and created [D I]
					D was opened into [D I].
				Feature processing:
				Floater movement reconstruction:
					= [D I]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D we] [T/fin{V} [that [[D I] T/fin]]]]

21.

		Consume "v"

		[[D we] [T/fin{V} [that [[D I] T/fin]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D we] [T/fin{V} [that [[D I] T/fin{v}]]]]

22.

		Consume "admire"

		[[D we] [T/fin{V} [that [[D I] T/fin{v}]]]] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[D we] [T/fin{V} [that [[D I] T/fin{v,V}]]]]

23.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D we] [T/fin{V} [that [[D I] T/fin{v,V}]]]]

24.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D we] [T/fin{V} [that [[D I] T/fin{v,V}]]]]

25.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D we] [T/fin{V} [that [[D I] T/fin{v,V}]]]]

26.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D we] [T/fin{V} [that [[D I] T/fin{v,V}]]]]

27.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D we] [T/fin{V} [that [[D I] T/fin{v,V}]]]]

28.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D we] [T/fin{V} [that [[D I] T/fin{v,V}]]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				An EPP-head "T/fin" lacks specifier but needs one.
				Avoid [T/fin [say [that [[D I] [T/fin [[D I] [v admire]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[D we] [T/fin{V} [that [[D I] T/fin{v,V}]]]] + D = -98]
				[T/fin{V} [that [[D I] T/fin{v,V}]]] + D = -194]
				[that [[D I] T/fin{v,V}]] + D = 3]
				[[D I] T/fin{v,V}] + D = -92]
				T/fin{v,V} + D = 215]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[that [[D I] T/fin{v,V}]]; D]
			3. [[[D I] T/fin{v,V}]; D]
			4. [[[D we] [T/fin{V} [that [[D I] T/fin{v,V}]]]]; D]
			5. [[T/fin{V} [that [[D I] T/fin{v,V}]]]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[D we] [T/fin{V} [that [[D I] [T/fin{v,V} D]]]]]

29.

		Consume "Mary"

		[[D we] [T/fin{V} [that [[D I] [T/fin{v,V} D]]]]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[[D we] [T/fin{V} [that [[D I] [T/fin{v,V} D{N}]]]]]

30.
	>>>	Trying candidate parse [[D we] [T/fin{V} [that [[D I] [T/fin{v,V} D{N}]]]]] (1.)
		Reconstructing...
			Transferring [[D we] [T/fin{V} [that [[D I] [T/fin{v,V} D{N}]]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D we] [T/fin{V} [that [[D I] [T/fin{v,V} D{N}]]]]].
						Extracted head "PRO.say" and reconstructed it = [[D we] [T/fin [PRO.say [that [[D I] [T/fin{v,V} D{N}]]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[D we] [T/fin [PRO.say [that [[D I] [T/fin [PRO.v{V} D{N}]]]]]]]
						Extracted head "PRO.admire" and reconstructed it = [[D we] [T/fin [PRO.say [that [[D I] [T/fin [PRO.v [PRO.admire D{N}]]]]]]]]
					Extracted head "Mary" from D and created [[D we] [T/fin [PRO.say [that [[D I] [T/fin [PRO.v [PRO.admire [D Mary]]]]]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D we] [T/fin [say [that [[D I] [T/fin [v [admire [D Mary]]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D we " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D we]:46 from memory buffer into Spec of PRO.say
					Result [[D we]:46 [T/fin [(DP):46 [PRO.say [that [[D I] [T/fin [PRO.v [PRO.admire [D Mary]]]]]]]]]]
					Moving "D I " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D I]:47 from memory buffer into Spec of PRO.v
					Result [[D we]:46 [T/fin [(DP):46 [PRO.say [that [[D I]:47 [T/fin [(DP):47 [PRO.v [PRO.admire [D Mary]]]]]]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):46.
					T/fin acquired PHI:GEN:N by phi-Agree from (DP):46.
					T/fin acquired PHI:NUM:PL by phi-Agree from (DP):46.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):46.
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):47.
					T/fin acquired PHI:GEN:N by phi-Agree from (DP):47.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):47.
					T/fin acquired PHI:PER:1 by phi-Agree from (DP):47.
			= [[D we] [T/fin [[D we] [say [that [[D I] [T/fin [[D I] [v [admire [D Mary]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D we]:46 [T/fin [(DP):46 [PRO.say [that [[D I]:47 [T/fin [(DP):47 [PRO.v [PRO.admire [D Mary]]]]]]]]]]] into Conceptual-Intentional system...
				PRO.say with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D we]    (alternatives: 2. T/fin 3. [D we] )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin 3. [D I] 4. [D we] 5. T/fin 6. [D we] )
				PRO.admire with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: 2. [D I] 3. T/fin 4. [D I] 5. [D we] 6. T/fin 7. [D we] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.admire([D Mary])', 'PRO.say([D we])', 'PRO.v([D I])']
!--->		Tests passed (with 30/301 operations) <------------------------------------
		Solution:
		[[D we] [T/fin [[D we] [say [that [[D I] [T/fin [[D I] [v [admire [D Mary]]]]]]]]]]]
		Grammar: [[D we]:1 [T/fin [(DP):1 [PRO.say [that [[D I]:2 [T/fin [(DP):2 [PRO.v [PRO.admire [D Mary]]]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [ [DP:2 [TT/fin [__:2 [v [V [D N]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL', 'null']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A', 'null']
say:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:say', 'PF:say', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
that:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:EN', 'LF:that', 'PF:that']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL', 'null']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A', 'null']
say:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:say', 'PF:say', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
that:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:EN', 'LF:that', 'PF:that']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D]
we: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.say: [V, TT/fin]
that: [, V, TT/fin]
D: [D, , V, TT/fin]
I: [N, D, , V, TT/fin]
T/fin: [TT/fin, , V, TT/fin]
(D): [D, TT/fin, , V, TT/fin]
(N): [N, D, TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.admire: [V, v, TT/fin, , V, TT/fin]
D: [D, V, v, TT/fin, , V, TT/fin]
Mary: [N, D, V, v, TT/fin, , V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 62
['John', 'said', 'that', 'admire', 'Mary']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
			=D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*John]
			=D{N}

8.
		Next word "said" contains multiple morphemes ['$[-0]', '$T/fin', 'say-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					D was opened into [D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D John] T/fin]

10.

		Consume "say"

		[[D John] T/fin] + say
			Filtering out impossible merge sites...
			Sink "say" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*say]
			=[[D John] T/fin{V}]

11.

		Consume "that"

		[[D John] T/fin{V}] + that
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] say]]] that] due to bad left branch.
		Exploring solution number (1) =[T/fin{V} that]
			Transferring T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{V}.
					Extracted head "PRO.say" from T/fin and created [T/fin PRO.say]
				An EPP-head "T/fin" lacks specifier but needs one.
				PRO.say (say) is missing complement FORCE
					T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				A phi-marked head "T/fin{V}" lacks complement
				An EPP-head "T/fin{V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{V}.
				Agreement reconstruction:
			=[[D John] [T/fin{V} that]]

12.
		Next word "admire" contains multiple morphemes ['$[-0]', '$T/fin', '$v', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=[[D John] [T/fin{V} that]]

13.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[[D John] [T/fin{V} that]] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [say that]]]] T/fin] due to bad left branch.
				Reject [[T/fin [say that]] T/fin] due to bad left branch.
		Exploring solution number (1) =[that T/fin]
			Transferring that to LF.
				head movement reconstruction:
					Reconstructing head movement for that.
				Feature processing:
				Floater movement reconstruction:
					= that
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				that probing for CAT:T/fin failed.
				A phi-marked head "that" lacks complement
					Extraposition will be tried on that.
				Agreement reconstruction:
			=[[D John] [T/fin{V} [that T/fin]]]

14.

		Consume "v"

		[[D John] [T/fin{V} [that T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D John] [T/fin{V} [that T/fin{v}]]]

15.

		Consume "admire"

		[[D John] [T/fin{V} [that T/fin{v}]]] + admire
			Filtering out impossible merge sites...
			Sink "admire" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*admire]
			=[[D John] [T/fin{V} [that T/fin{v,V}]]]

16.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D John] [T/fin{V} [that T/fin{v,V}]]]

17.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D John] [T/fin{V} [that T/fin{v,V}]]]

18.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D John] [T/fin{V} [that T/fin{v,V}]]]

19.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D John] [T/fin{V} [that T/fin{v,V}]]]

20.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D John] [T/fin{V} [that T/fin{v,V}]]]

21.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D John] [T/fin{V} [that T/fin{v,V}]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				An EPP-head "T/fin" lacks specifier but needs one.
				Avoid [T/fin [say [that [T/fin [v admire]]]]] as left branch because it constitutes illicit structure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[D John] [T/fin{V} [that T/fin{v,V}]]] + D = -98]
				[T/fin{V} [that T/fin{v,V}]] + D = -194]
				[that T/fin{v,V}] + D = 3]
				T/fin{v,V} + D = 212]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[that T/fin{v,V}]; D]
			3. [[[D John] [T/fin{V} [that T/fin{v,V}]]]; D]
			4. [[T/fin{V} [that T/fin{v,V}]]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.v PRO.admire]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[D John] [T/fin{V} [that [T/fin{v,V} D]]]]

22.

		Consume "Mary"

		[[D John] [T/fin{V} [that [T/fin{v,V} D]]]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[[D John] [T/fin{V} [that [T/fin{v,V} D{N}]]]]

23.
	>>>	Trying candidate parse [[D John] [T/fin{V} [that [T/fin{v,V} D{N}]]]] (1.)
		Reconstructing...
			Transferring [[D John] [T/fin{V} [that [T/fin{v,V} D{N}]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D John] [T/fin{V} [that [T/fin{v,V} D{N}]]]].
						Extracted head "PRO.say" and reconstructed it = [[D John] [T/fin [PRO.say [that [T/fin{v,V} D{N}]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[D John] [T/fin [PRO.say [that [T/fin [PRO.v{V} D{N}]]]]]]
						Extracted head "PRO.admire" and reconstructed it = [[D John] [T/fin [PRO.say [that [T/fin [PRO.v [PRO.admire D{N}]]]]]]]
					Extracted head "Mary" from D and created [[D John] [T/fin [PRO.say [that [T/fin [PRO.v [PRO.admire [D Mary]]]]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin [say [that [T/fin [v [admire [D Mary]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D John]:52 from memory buffer into Spec of PRO.say
					Result [[D John]:52 [T/fin [(DP):52 [PRO.say [that [T/fin [PRO.v [PRO.admire [D Mary]]]]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):52.
					Feature PHI:GEN:M was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):52.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):52.
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):52.
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
			= [[D John] [T/fin [[D John] [say [that [T/fin [v [admire [D Mary]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D John]:52 [T/fin [(DP):52 [PRO.say [that [T/fin [PRO.v [PRO.admire [D Mary]]]]]]]]] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.say with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin 3. [D John] )
				T/fin with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: 2. [D John] 3. T/fin 4. [D John] )
				PRO.admire with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: 2. T/fin 3. [D John] 4. T/fin 5. [D John] )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M*', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
say:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:say', 'PF:say', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
that:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:EN', 'LF:that', 'PF:that']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.say: [V, TT/fin]
that: [, V, TT/fin]
T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.admire: [V, v, TT/fin, , V, TT/fin]
D: [D, V, v, TT/fin, , V, TT/fin]
Mary: [N, D, V, v, TT/fin, , V, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[that T/fin{v,V}] D]
			Transferring [that T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [that T/fin{v,V}].
					Extracted head "PRO.v{V}" from T/fin and created [that [T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [that [T/fin [PRO.v PRO.admire]]]
				Feature processing:
				Floater movement reconstruction:
					= [that [T/fin [v admire]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
			=[[D John] [T/fin{V} [[that [T/fin [PRO.v PRO.admire]]] D]]]

24.

		Consume "Mary"

		[[D John] [T/fin{V} [[that [T/fin [v admire]]] D]]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[[D John] [T/fin{V} [[that [T/fin [PRO.v PRO.admire]]] D{N}]]]

25.
	>>>	Trying candidate parse [[D John] [T/fin{V} [[that [T/fin [v admire]]] D{N}]]] (2.)
		Reconstructing...
			Transferring [[D John] [T/fin{V} [[that [T/fin [PRO.v PRO.admire]]] D{N}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D John] [T/fin{V} [[that [T/fin [PRO.v PRO.admire]]] D{N}]]].
						Extracted head "PRO.say" and reconstructed it = [[D John] [T/fin [PRO.say [[that [T/fin [PRO.v PRO.admire]]] D{N}]]]]
					Extracted head "Mary" from D and created [[D John] [T/fin [PRO.say [[that [T/fin [PRO.v PRO.admire]]] [D Mary]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin [say [[that [T/fin [v admire]]] [D Mary]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D John]:53 from memory buffer into Spec of PRO.say
					Result [[D John]:53 [T/fin [(DP):53 [PRO.say [[that [T/fin [PRO.v PRO.admire]]] [D Mary]]]]]]
					PRO.say (say) is missing a mandatory complement FORCE
					Extraposition will be tried on [[D John]:53 [T/fin [(DP):53 [PRO.say [[that [T/fin [PRO.v PRO.admire]]] [D Mary]]]]]].
						<D Mary> was made an adjunct.
					<D Mary> was made adjunct by an extraposition rule.
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):53.
					Feature PHI:GEN:M was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):53.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):53.
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):53.
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
			= [[D John] [T/fin [[D John] [say [[that [T/fin [v admire]]] <D Mary>]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D John]:53 [T/fin [(DP):53 [PRO.say [[that [T/fin [PRO.v PRO.admire]]] <D Mary>]]]]] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.say with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin 3. [D John] )
				T/fin with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: 2. [D John] 3. T/fin 4. [D John] )
				PRO.admire with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: 2. [D John] 3. T/fin 4. [D John] )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M*', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
say:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:say', 'PF:say', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
that:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:EN', 'LF:that', 'PF:that']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.say: [V, TT/fin]
that: [, V, TT/fin]
T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.admire: [V, v, TT/fin, , V, TT/fin]
D: [D, V, TT/fin]
Mary: [N, D, V, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D John] [T/fin{V} [that T/fin{v,V}]]] D]
			Transferring [[D John] [T/fin{V} [that T/fin{v,V}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D John] [T/fin{V} [that T/fin{v,V}]]].
						Extracted head "PRO.say" and reconstructed it = [[D John] [T/fin [PRO.say [that T/fin{v,V}]]]]
					Extracted head "PRO.v{V}" from T/fin and created [[D John] [T/fin [PRO.say [that [T/fin PRO.v{V}]]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [[D John] [T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin [say [that [T/fin [v admire]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D John]:54 from memory buffer into Spec of PRO.say
					Result [[D John]:54 [T/fin [(DP):54 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):54.
					Feature PHI:GEN:M was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):54.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):54.
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):54.
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
			=[[[D John]:54 [T/fin [(DP):54 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]] D]

26.

		Consume "Mary"

		[[[D John] [T/fin [[D John] [say [that [T/fin [v admire]]]]]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[[[D John]:54 [T/fin [(DP):54 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]] D{N}]

27.
	>>>	Trying candidate parse [[[D John] [T/fin [[D John] [say [that [T/fin [v admire]]]]]]] D{N}] (3.)
		Reconstructing...
			Transferring [[[D John]:54 [T/fin [(DP):54 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]] D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[D John]:54 [T/fin [(DP):54 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]] D{N}].
					Extracted head "Mary" from D and created [[[D John]:54 [T/fin [(DP):54 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]] [D Mary]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D John] [T/fin [[D John] [say [that [T/fin [v admire]]]]]]] [D Mary]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				D has unaccetable specifier [[D John]:54 [T/fin [(DP):54 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]].
					Extraposition will be tried on [[[D John]:54 [T/fin [(DP):54 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]] [D Mary]].
						<D Mary> was made an adjunct.
					<D Mary> was made adjunct by an extraposition rule.
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
			= [[[D John] [T/fin [[D John] [say [that [T/fin [v admire]]]]]]] <D Mary>]
		Checking LF-interface conditions.
			Trying to transfer [[[D John]:54 [T/fin [(DP):54 [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]]] <D Mary>] into Conceptual-Intentional system...
				T/fin induces a phi-feature conflict.
				PRO.say with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin 3. [D John] )
				T/fin with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: 2. [D John] 3. T/fin 4. [D John] )
				PRO.admire with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: 2. [D John] 3. T/fin 4. [D John] )
				Transfer to C-I crashed.
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M*', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
say:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:say', 'PF:say', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
that:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:EN', 'LF:that', 'PF:that']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.say: [V, TT/fin]
that: [, V, TT/fin]
T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.admire: [V, v, TT/fin, , V, TT/fin]
D: [D]
Mary: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (4) =[[T/fin{V} [that T/fin{v,V}]] D]
			Transferring [T/fin{V} [that T/fin{v,V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [T/fin{V} [that T/fin{v,V}]].
						Extracted head "PRO.say" and reconstructed it = [T/fin [PRO.say [that T/fin{v,V}]]]
					Extracted head "PRO.v{V}" from T/fin and created [T/fin [PRO.say [that [T/fin PRO.v{V}]]]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.admire" from PRO.v and created [T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [say [that [T/fin [v admire]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
					Extraposition will be tried on [T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]].
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
			=[[D John] [[T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]] D]]

28.

		Consume "Mary"

		[[D John] [[T/fin [say [that [T/fin [v admire]]]]] D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[[D John] [[T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]] D{N}]]

29.
	>>>	Trying candidate parse [[D John] [[T/fin [say [that [T/fin [v admire]]]]] D{N}]] (4.)
		Reconstructing...
			Transferring [[D John] [[T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]] D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D John] [[T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]] D{N}]].
					Extracted head "Mary" from D and created [[D John] [[T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]] [D Mary]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [[T/fin [say [that [T/fin [v admire]]]]] [D Mary]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				D has unaccetable specifier [T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]].
					Extraposition will be tried on [[D John] [[T/fin [PRO.say [that [T/fin [PRO.v PRO.admire]]]]] [D Mary]]].
						<D Mary> was made an adjunct.
					<D Mary> was made adjunct by an extraposition rule.
				[D John] has no thematic role.
					The structure is still illicit! Try phi-tailing as a last resort?
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF from the edge of T/fin.
					Feature PHI:GEN:M was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:GEN:M from the edge of T/fin.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
			= [[D John] [[T/fin [say [that [T/fin [v admire]]]]] <D Mary>]]
		Checking LF-interface conditions.
				[D John] has no thematic role.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M*', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
say:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:say', 'PF:say', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
that:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:EN', 'LF:that', 'PF:that']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:PHI:DET:DEF,PHI:GEN:F,PHI:HUM:HUM,PHI:NUM:SG,PHI:PER:3,!COMP:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D]
John: [N, D]
T/fin: [TT/fin]
PRO.say: [V, TT/fin]
that: [, V, TT/fin]
T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.admire: [V, v, TT/fin, , V, TT/fin]
D: [D]
Mary: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admire-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "admire".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "that".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "say-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "said".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 63
['John', 'said', 'that', 'dmires', 'Mary']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
			=D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*John]
			=D{N}

8.
		Next word "said" contains multiple morphemes ['$[-0]', '$T/fin', 'say-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					D was opened into [D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D John] T/fin]

10.

		Consume "say"

		[[D John] T/fin] + say
			Filtering out impossible merge sites...
			Sink "say" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*say]
			=[[D John] T/fin{V}]

11.

		Consume "that"

		[[D John] T/fin{V}] + that
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] say]]] that] due to bad left branch.
		Exploring solution number (1) =[T/fin{V} that]
			Transferring T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{V}.
					Extracted head "PRO.say" from T/fin and created [T/fin PRO.say]
				An EPP-head "T/fin" lacks specifier but needs one.
				PRO.say (say) is missing complement FORCE
					T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				A phi-marked head "T/fin{V}" lacks complement
				An EPP-head "T/fin{V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{V}.
				Agreement reconstruction:
			=[[D John] [T/fin{V} that]]

12.

		Consume "?"

		[[D John] [T/fin{V} that]] + ?
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [say that]]]] ?] due to bad left branch.
				Reject [[T/fin [say that]] ?] due to bad left branch.
		Exploring solution number (1) =[that ?]
			Transferring that to LF.
				head movement reconstruction:
					Reconstructing head movement for that.
				Feature processing:
				Floater movement reconstruction:
					= that
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				that probing for CAT:T/fin failed.
				A phi-marked head "that" lacks complement
					Extraposition will be tried on that.
				Agreement reconstruction:
			=[[D John] [T/fin{V} [that ?]]]

13.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D John] [T/fin{V} [that ?]]]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D John] [T/fin{V} [that ?]]]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D John] [T/fin{V} [that ?]]]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D John] [T/fin{V} [that ?]]]

17.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D John] [T/fin{V} [that ?]]]

18.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D John] [T/fin{V} [that ?]]] + D
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [say [that ?]]]]] D] due to bad left branch.
				Reject [[T/fin [say [that ?]]] D] due to bad left branch.
				Reject [[that ?] D] due to bad left branch.
		Exploring solution number (1) =[? D]
			Transferring ? to LF.
				head movement reconstruction:
					Reconstructing head movement for ?.
				Feature processing:
				Floater movement reconstruction:
					= ?
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D John] [T/fin{V} [that [? D]]]]

19.

		Consume "Mary"

		[[D John] [T/fin{V} [that [? D]]]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[[D John] [T/fin{V} [that [? D{N}]]]]

20.
	>>>	Trying candidate parse [[D John] [T/fin{V} [that [? D{N}]]]] (1.)
		Reconstructing...
			Transferring [[D John] [T/fin{V} [that [? D{N}]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D John] [T/fin{V} [that [? D{N}]]]].
						Extracted head "PRO.say" and reconstructed it = [[D John] [T/fin [PRO.say [that [? D{N}]]]]]
					Extracted head "Mary" from D and created [[D John] [T/fin [PRO.say [that [? [D Mary]]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin [say [that [? [D Mary]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D John]:58 from memory buffer into Spec of PRO.say
					Result [[D John]:58 [T/fin [(DP):58 [PRO.say [that [? [D Mary]]]]]]]
				that probing for CAT:T/fin failed.
					Extraposition will be tried on [[D John]:58 [T/fin [(DP):58 [PRO.say [that [? [D Mary]]]]]]].
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):58.
					Feature PHI:GEN:M was not matched in T/fin and was marked as bad.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):58.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):58.
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):58.
			= [[D John] [T/fin [[D John] [say [that [? [D Mary]]]]]]]
		Checking LF-interface conditions.
				that probing for CAT:T/fin failed.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:M*', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
say:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:say', 'PF:say', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
that:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:EN', 'LF:that', 'PF:that']
?:['CAT:X', 'PF:?']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.say: [V, TT/fin]
that: [, V, TT/fin]
?: [, , V, TT/fin]
D: [D, , , V, TT/fin]
Mary: [N, D, , , V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "dmires".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "that".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "say-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "said".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 64
['Merjaa', 'ihailen', 'mina']


Using lexicon "lexicon.txt".
			=None

1.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
			=D

8.

		Consume "Merja-"

		D + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=D{N}

9.
		Next word "ihailen" contains multiple morphemes ['$[-n]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					D was opened into [D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Merja-] PRO.T/fin]

11.

		Consume "v"

		[[D Merja-] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D Merja-] PRO.T/fin{v}]

12.

		Consume "ihaile-"

		[[D Merja-] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[D Merja-] PRO.T/fin{v,V}]

13.
		Next word "mina" contains multiple morphemes ['$hum', '$def', '$1p', '$sg', '$nom', '$D', 'mina-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D Merja-] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=[[D Merja-] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=[[D Merja-] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=[[D Merja-] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=[[D Merja-] PRO.T/fin{v,V}]

18.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		[[D Merja-] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D Merja-] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D Merja-] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [PRO.T/fin [PRO.v PRO.ihaile-]]
				PRO.ihaile- (ihaile-) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D Merja-] [PRO.T/fin{v,V} D]]

19.

		Consume "mina"

		[[D Merja-] [T/fin{v,V} D]] + mina
			Filtering out impossible merge sites...
			Sink "mina" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mina]
			=[[D Merja-] [PRO.T/fin{v,V} D{N}]]

20.
	>>>	Trying candidate parse [[D Merja-] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D Merja-] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Merja-] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D Merja-] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.ihaile-" and reconstructed it = [[D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- D{N}]]]]
					Extracted head "mina" from D and created [[D Merja-] [PRO.T/fin [PRO.v [PRO.ihaile- [D mina]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Merja-] failed to tail [-VAL][ARG]
					Dropping [D Merja-]
						<D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [<D Merja->:170 [PRO.T/fin [PRO.v [<DP>:170 [PRO.ihaile- [D mina]]]]]]
					D at the right failed to tail [ARG][CAT:FIN][VAL]
						<D mina> was made an adjunct.
					Dropping <D mina>
						Floater <D mina> dropped.
						 = [<D Merja->:170 [PRO.T/fin [<DP>:171 [PRO.v [<DP>:170 [PRO.ihaile- <D mina>:171]]]]]]
					= [<D Merja-> [T/fin [<D mina> [v [<D Merja-> [ihaile- <D mina>]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:171.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:171.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from <DP>:171.
			= [<D Merja-> [T/fin [<D mina> [v [<D Merja-> [ihaile- <D mina>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Merja->:170 [phi.T/fin [<DP>:171 [PRO.v [<DP>:170 [PRO.ihaile- <D mina>:171]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D mina>    (alternatives: 2. T/fin 3. <D Merja-> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D Merja-> 3. <D mina> 4. T/fin 5. <D Merja-> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ihaile-(<D Merja->)', 'PRO.v(<D mina>)']
!--->		Tests passed (with 20/178 operations) <------------------------------------
		Solution:
		[<D Merja-> [T/fin [<D mina> [v [<D Merja-> [ihaile- <D mina>]]]]]]
		Grammar: [<D Merja->:1 [phi.T/fin [<DP>:2 [PRO.v [<DP>:1 [PRO.ihaile- <D mina>:2]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:2 [v [__:1 [V DP:2]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']

D: [D]
Merja-: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]
D: [D, V, v, TT/fin]
mina: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 65
['Merjaa', 'ihailen']


Using lexicon "lexicon.txt".
			=None

1.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
			=D

8.

		Consume "Merja-"

		D + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=D{N}

9.
		Next word "ihailen" contains multiple morphemes ['$[-n]', '$T/fin', '$v', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					D was opened into [D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Merja-] PRO.T/fin]

11.

		Consume "v"

		[[D Merja-] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D Merja-] PRO.T/fin{v}]

12.

		Consume "ihaile-"

		[[D Merja-] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*ihaile-]
			=[[D Merja-] PRO.T/fin{v,V}]

13.
	>>>	Trying candidate parse [[D Merja-] T/fin{v,V}] (1.)
		Reconstructing...
			Transferring [[D Merja-] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Merja-] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[D Merja-] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ihaile-" from PRO.v and created [[D Merja-] [PRO.T/fin [PRO.v PRO.ihaile-]]]
				Feature processing:
				Floater movement reconstruction:
					[D Merja-] failed to tail [-VAL][ARG]
					Dropping [D Merja-]
						<D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [<D Merja->:172 [PRO.T/fin [PRO.v [<DP>:172 PRO.ihaile-]]]]
					= [<D Merja-> [T/fin [v [<D Merja-> ihaile-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:1 from the edge of phi.T/fin.
			= [<D Merja-> [T/fin [v [<D Merja-> ihaile-]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Merja->:172 [phi.T/fin [PRO.v [<DP>:172 PRO.ihaile-]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: 2. <D Merja-> )
				PRO.ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Merja->    (alternatives: 2. T/fin 3. <D Merja-> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ihaile-(<D Merja->)', 'PRO.v(T/fin)']
!--->		Tests passed (with 13/111 operations) <------------------------------------
		Solution:
		[<D Merja-> [T/fin [v [<D Merja-> ihaile-]]]]
		Grammar: [<D Merja->:1 [phi.T/fin [PRO.v [<DP>:1 PRO.ihaile-]]]]
		Spellout TT/finP = [DP:1 [TT/fin [v [__:1 V]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
Merja-: [N, D]
phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.ihaile-: [V, v, TT/fin]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 66
['Pekka', 'sanoo', 'etta', 'istuu', 'mukavasti']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

9.
		Next word "sanoo" contains multiple morphemes ['$[-V]', '$T/fin', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					D was opened into [D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] PRO.T/fin]

11.

		Consume "sano-"

		[[D Pekka] T/fin] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sano-]
			=[[D Pekka] PRO.T/fin{V}]

12.

		Consume "että"

		[[D Pekka] T/fin{V}] + että
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> sano-]]] että] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} että]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.sano-" from PRO.T/fin and created [PRO.T/fin PRO.sano-]
				PRO.sano- (sano-) is missing complement FORCE
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} että]]

13.
		Next word "istuu" contains multiple morphemes ['$[-V]', '$T/fin', 'istu-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=[[D Pekka] [PRO.T/fin{V} että]]

14.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[[D Pekka] [T/fin{V} että]] + T/fin
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- että]]]] PRO.T/fin] due to bad left branch.
				Reject [[T/fin [sano- että]] PRO.T/fin] due to bad left branch.
		Exploring solution number (1) =[että T/fin]
			Transferring että to LF.
				head movement reconstruction:
					Reconstructing head movement for että.
				Feature processing:
				Floater movement reconstruction:
					= että
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				että probing for CAT:T/fin failed.
				A phi-marked head "että" lacks complement
					Extraposition will be tried on että.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin]]]

15.

		Consume "istuu"

		[[D Pekka] [T/fin{V} [että T/fin]]] + istuu
			Filtering out impossible merge sites...
			Sink "istuu" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*istuu]
			=[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin{V}]]]

16.
		Next word "mukavasti" contains multiple morphemes ['$sti', 'mukava-']

		Consume "sti"

		[[D Pekka] [T/fin{V} [että T/fin{V}]]] + sti
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, sti.
				Avoid TT/finP as SPEC, sti.
				Avoid P as SPEC, sti.
				Considering [että PRO.T/fin{V}] due to legitimate tail-head configuration.
				Considering PRO.T/fin{V} due to legitimate tail-head configuration.
				[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin{V}]]] + sti = -98]
				[PRO.T/fin{V} [että PRO.T/fin{V}]] + sti = -96]
				[että PRO.T/fin{V}] + sti = 109]
				PRO.T/fin{V} + sti = 208]
		Ranking completed:
			1. [PRO.T/fin{V}; sti]
			2. [[että PRO.T/fin{V}]; sti]
			3. [[PRO.T/fin{V} [että PRO.T/fin{V}]]; sti]
			4. [[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin{V}]]]; sti]
		Exploring solution number (1) =[PRO.T/fin{V} sti]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.istuu" from PRO.T/fin and created [PRO.T/fin PRO.istuu]
					PRO.T/fin{V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{V} sti]]]]

17.

		Consume "mukavasti"

		[[D Pekka] [T/fin{V} [että [T/fin{V} sti]]]] + mukavasti
			Filtering out impossible merge sites...
			Sink "mukavasti" into sti because they are inside the same phonological word.
		Exploring solution number (1) =[sti*mukavasti]
			=[[D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{V} sti{A}]]]]

18.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [että [T/fin{V} sti{A}]]]] (1.)
		Reconstructing...
			Transferring [[D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{V} sti{A}]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{V} sti{A}]]]].
						Extracted head "PRO.sano-" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin{V} sti{A}]]]]]
						Extracted head "PRO.istuu" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.istuu sti{A}]]]]]]
					Extracted head "mukavasti" from sti and created [[D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.istuu [sti mukavasti]]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:177 [PRO.T/fin [<DP>:177 [PRO.sano- [että [PRO.T/fin [PRO.istuu [sti mukavasti]]]]]]]]
					sti at the right failed to tail [CAT:T]
						<sti mukavasti> was made an adjunct.
					= [<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin [istuu <sti mukavasti>]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:177.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:177.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:177.
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			= [<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin [istuu <sti mukavasti>]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:177 [phi.T/fin [<DP>:177 [PRO.sano- [että [pro/x.T/fin [PRO.istuu <sti mukavasti>]]]]]]] into Conceptual-Intentional system...
				PRO.sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				pro/x.T/fin with ['PHI:DET:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				PRO.istuu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				Transfer to C-I successful.
			sti<[ADV, V, TT/fin, , V, TT/fin]> failed to tail features [CAT:T]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.istuu: [V, TT/fin, , V, TT/fin]
sti: [ADV, V, TT/fin, , V, TT/fin]
mukavasti: [A, ADV, V, TT/fin, , V, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "mukava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[että PRO.T/fin{V}] sti]
			Transferring [että PRO.T/fin{V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [että PRO.T/fin{V}].
					Extracted head "PRO.istuu" from PRO.T/fin and created [että [PRO.T/fin PRO.istuu]]
				Feature processing:
				Floater movement reconstruction:
					= [että [T/fin istuu]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			=[[D Pekka] [PRO.T/fin{V} [[että [pro/x.T/fin PRO.istuu]] sti]]]

19.

		Consume "mukavasti"

		[[D Pekka] [T/fin{V} [[että [T/fin istuu]] sti]]] + mukavasti
			Filtering out impossible merge sites...
			Sink "mukavasti" into sti because they are inside the same phonological word.
		Exploring solution number (1) =[sti*mukavasti]
			=[[D Pekka] [PRO.T/fin{V} [[että [pro/x.T/fin PRO.istuu]] sti{A}]]]

20.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [[että [T/fin istuu]] sti{A}]]] (2.)
		Reconstructing...
			Transferring [[D Pekka] [PRO.T/fin{V} [[että [pro/x.T/fin PRO.istuu]] sti{A}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [PRO.T/fin{V} [[että [pro/x.T/fin PRO.istuu]] sti{A}]]].
						Extracted head "PRO.sano-" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.sano- [[että [pro/x.T/fin PRO.istuu]] sti{A}]]]]
					Extracted head "mukavasti" from sti and created [[D Pekka] [PRO.T/fin [PRO.sano- [[että [pro/x.T/fin PRO.istuu]] [sti mukavasti]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:178 [PRO.T/fin [<DP>:178 [PRO.sano- [[että [pro/x.T/fin PRO.istuu]] [sti mukavasti]]]]]]
					sti at the right failed to tail [CAT:T]
						<sti mukavasti> was made an adjunct.
					sti at the right failed to tail [CAT:T]
					= [<D Pekka> [T/fin [<D Pekka> [sano- [[että [T/fin istuu]] <sti mukavasti>]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:178.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:178.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:178.
					pro/x.T/fin has unvalued phi-features {'PHI:DET:_'}
			= [<D Pekka> [T/fin [<D Pekka> [sano- [[että [T/fin istuu]] <sti mukavasti>]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:178 [phi.T/fin [<DP>:178 [PRO.sano- [[että [pro/x.T/fin PRO.istuu]] <sti mukavasti>]]]]] into Conceptual-Intentional system...
				PRO.sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				pro/x.T/fin with ['PHI:DET:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				PRO.istuu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				Transfer to C-I successful.
			sti<[ADV, V, TT/fin]> failed to tail features [CAT:T]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.istuu: [V, TT/fin, , V, TT/fin]
sti: [ADV, V, TT/fin]
mukavasti: [A, ADV, V, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "mukava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[PRO.T/fin{V} [että PRO.T/fin{V}]] sti]
			Transferring [PRO.T/fin{V} [että PRO.T/fin{V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [että PRO.T/fin{V}]].
						Extracted head "PRO.sano-" and reconstructed it = [PRO.T/fin [PRO.sano- [että PRO.T/fin{V}]]]
					Extracted head "PRO.istuu" from PRO.T/fin and created [PRO.T/fin [PRO.sano- [että [PRO.T/fin PRO.istuu]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [sano- [että [T/fin istuu]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			=[[D Pekka] [[pro/x.T/fin [PRO.sano- [että [pro/x.T/fin PRO.istuu]]]] sti]]

21.

		Consume "mukavasti"

		[[D Pekka] [[T/fin [sano- [että [T/fin istuu]]]] sti]] + mukavasti
			Filtering out impossible merge sites...
			Sink "mukavasti" into sti because they are inside the same phonological word.
		Exploring solution number (1) =[sti*mukavasti]
			=[[D Pekka] [[pro/x.T/fin [PRO.sano- [että [pro/x.T/fin PRO.istuu]]]] sti{A}]]

22.
	>>>	Trying candidate parse [[D Pekka] [[T/fin [sano- [että [T/fin istuu]]]] sti{A}]] (3.)
		Reconstructing...
			Transferring [[D Pekka] [[pro/x.T/fin [PRO.sano- [että [pro/x.T/fin PRO.istuu]]]] sti{A}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [[pro/x.T/fin [PRO.sano- [että [pro/x.T/fin PRO.istuu]]]] sti{A}]].
					Extracted head "mukavasti" from sti and created [[D Pekka] [[pro/x.T/fin [PRO.sano- [että [pro/x.T/fin PRO.istuu]]]] [sti mukavasti]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					sti at the right failed to tail [CAT:T]
						<sti mukavasti> was made an adjunct.
					= [[D Pekka] [[T/fin [sano- [että [T/fin istuu]]]] <sti mukavasti>]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Pekka " into memory buffer from SPEC of "pro/x.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D Pekka]:5 from memory buffer into Spec of PRO.sano-
					Result [[D Pekka]:5 [[pro/x.T/fin [(DP):5 [PRO.sano- [että [pro/x.T/fin PRO.istuu]]]]] <sti mukavasti>]]
				Agreement reconstruction:
					pro/x.T/fin has unvalued phi-features {'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):5.
					pro/x.T/fin has unvalued phi-features {'PHI:DET:_'}
			= [[D Pekka] [[T/fin [[D Pekka] [sano- [että [T/fin istuu]]]]] <sti mukavasti>]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:5 [[phi.T/fin [(DP):5 [PRO.sano- [että [pro/x.T/fin PRO.istuu]]]]] <sti mukavasti>]] into Conceptual-Intentional system...
				PRO.sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Pekka]    (alternatives: 2. T/fin 3. [D Pekka] 4. [D Pekka] )
				pro/x.T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [D Pekka]    (alternatives: 2. T/fin )
				PRO.istuu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Pekka]    (alternatives: 2. T/fin 3. [D Pekka] 4. [D Pekka] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.istuu([D Pekka])', 'PRO.sano-([D Pekka])', 'pro/x.T/fin([D Pekka])']
!--->		Tests passed (with 22/342 operations) <------------------------------------
		Solution:
		[[D Pekka] [[T/fin [[D Pekka] [sano- [että [T/fin istuu]]]]] <sti mukavasti>]]
		Grammar: [[D Pekka]:1 [[phi.T/fin [(DP):1 [PRO.sano- [että [pro/x.T/fin PRO.istuu]]]]] <sti mukavasti>]]
		Spellout TT/finP = [DP:1 [[TT/fin [__:1 [V [ [TT/fin V]]]]] ADVP]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.istuu: [V, TT/fin, , V, TT/fin]
sti: [ADV]
mukavasti: [A, ADV]

			Checking if the sentence is ambiguous...


\========================================================================
# 67
['istuu', 'mukavasti']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "istuu" contains multiple morphemes ['$[-V]', '$T/fin', 'istu-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "istuu"

		T/fin + istuu
			Filtering out impossible merge sites...
			Sink "istuu" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*istuu]
			=PRO.T/fin{V}

4.
		Next word "mukavasti" contains multiple morphemes ['$sti', 'mukava-']

		Consume "sti"

		T/fin{V} + sti
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{V} sti]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.istuu" from PRO.T/fin and created [PRO.T/fin PRO.istuu]
					PRO.T/fin{V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[PRO.T/fin{V} sti]

5.

		Consume "mukavasti"

		[T/fin{V} sti] + mukavasti
			Filtering out impossible merge sites...
			Sink "mukavasti" into sti because they are inside the same phonological word.
		Exploring solution number (1) =[sti*mukavasti]
			=[PRO.T/fin{V} sti{A}]

6.
	>>>	Trying candidate parse [T/fin{V} sti{A}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{V} sti{A}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} sti{A}].
						Extracted head "PRO.istuu" and reconstructed it = [PRO.T/fin [PRO.istuu sti{A}]]
					Extracted head "mukavasti" from sti and created [PRO.T/fin [PRO.istuu [sti mukavasti]]]
				Feature processing:
				Floater movement reconstruction:
					sti at the right failed to tail [CAT:T]
						<sti mukavasti> was made an adjunct.
					= [T/fin [istuu <sti mukavasti>]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			= [T/fin [istuu <sti mukavasti>]]
		Checking LF-interface conditions.
			Trying to transfer [pro/x.T/fin [PRO.istuu <sti mukavasti>]] into Conceptual-Intentional system...
				pro/x.T/fin with ['PHI:DET:_'] was associated at LF with:
					No antecedent found, LF-object crashes.
					Cannot be interpreted at C-I
				PRO.istuu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					Generic
				Transfer to C-I crashed.
			sti<[ADV, V, TT/fin]> failed to tail features [CAT:T]
			Final tail-head check failed.
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

pro/x.T/fin: [TT/fin]
PRO.istuu: [V, TT/fin]
sti: [ADV, V, TT/fin]
mukavasti: [A, ADV, V, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "mukava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "mukavasti".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "istu-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "istuu".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 68
['tassa', 'istuu', 'mukavasti']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "tassa" contains multiple morphemes ['$P', 'tama']
			=PRO.P

2.
		Next word "tama" contains multiple morphemes ['$def', '$3p', '$sg', '$D', 'tama-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.P

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.P

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=PRO.P

5.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		P + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=PRO.P{D}

6.

		Consume "tama"

		P{D} + tama
			Filtering out impossible merge sites...
			Sink "tama" into P{D} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*tama]
			=PRO.P{D,N}

7.
		Next word "istuu" contains multiple morphemes ['$[-V]', '$T/fin', 'istu-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=PRO.P{D,N}

8.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		P{D,N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.P{D,N} T/fin]
			Transferring PRO.P{D,N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.P{D,N}.
					Extracted head "D{N}" from PRO.P and created [PRO.P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "tama" from D and created [PRO.P [D tama]]
					Reconstructing head movement for PRO.P{D,N}.
					Extracted head "D{N}" from PRO.P and created [PRO.P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "tama" from D and created [PRO.P [D tama]]
					PRO.P was opened into [PRO.P [D tama]].
				Feature processing:
				Floater movement reconstruction:
					= [P [D tama]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[PRO.P [D tama]] PRO.T/fin]

9.

		Consume "istuu"

		[[P [D tama]] T/fin] + istuu
			Filtering out impossible merge sites...
			Sink "istuu" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*istuu]
			=[[PRO.P [D tama]] PRO.T/fin{V}]

10.
		Next word "mukavasti" contains multiple morphemes ['$sti', 'mukava-']

		Consume "sti"

		[[P [D tama]] T/fin{V}] + sti
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, sti.
				Considering PRO.T/fin{V} due to legitimate tail-head configuration.
				[[PRO.P [D tama]] PRO.T/fin{V}] + sti = -98]
				PRO.T/fin{V} + sti = 204]
		Ranking completed:
			1. [PRO.T/fin{V}; sti]
			2. [[[PRO.P [D tama]] PRO.T/fin{V}]; sti]
		Exploring solution number (1) =[PRO.T/fin{V} sti]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.istuu" from PRO.T/fin and created [PRO.T/fin PRO.istuu]
					PRO.T/fin{V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[PRO.P [D tama]] [PRO.T/fin{V} sti]]

11.

		Consume "mukavasti"

		[[P [D tama]] [T/fin{V} sti]] + mukavasti
			Filtering out impossible merge sites...
			Sink "mukavasti" into sti because they are inside the same phonological word.
		Exploring solution number (1) =[sti*mukavasti]
			=[[PRO.P [D tama]] [PRO.T/fin{V} sti{A}]]

12.
	>>>	Trying candidate parse [[P [D tama]] [T/fin{V} sti{A}]] (1.)
		Reconstructing...
			Transferring [[PRO.P [D tama]] [PRO.T/fin{V} sti{A}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[PRO.P [D tama]] [PRO.T/fin{V} sti{A}]].
						Extracted head "PRO.istuu" and reconstructed it = [[PRO.P [D tama]] [PRO.T/fin [PRO.istuu sti{A}]]]
					Extracted head "mukavasti" from sti and created [[PRO.P [D tama]] [PRO.T/fin [PRO.istuu [sti mukavasti]]]]
				Feature processing:
				Floater movement reconstruction:
					sti at the right failed to tail [CAT:T]
						<sti mukavasti> was made an adjunct.
					= [[P [D tama]] [T/fin [istuu <sti mukavasti>]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "P D tama " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[P [D N]]]
					Dropping constituent [PRO.P [D tama]]:8 from memory buffer into Spec of PRO.istuu
					Result [[PRO.P [D tama]]:8 [PRO.T/fin [(PP):8 [PRO.istuu <sti mukavasti>]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			= [[P [D tama]] [T/fin [[P [D tama]] [istuu <sti mukavasti>]]]]
		Checking LF-interface conditions.
			Trying to transfer [[PRO.P [D tama]]:8 [pro/x.T/fin [(PP):8 [PRO.istuu <sti mukavasti>]]]] into Conceptual-Intentional system...
				pro/x.T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [P [D tama]]    (alternatives: )
				(P) with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tama]    (alternatives: )
				PRO.istuu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					Generic
				Transfer to C-I successful.
			sti<[ADV, V, TT/fin]> failed to tail features [CAT:T]
			Final tail-head check failed.
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A', 'null']
istuu:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

PRO.P: [P]
D: [D, P]
tama: [N, D, P]
pro/x.T/fin: [TT/fin]
(P): [P, TT/fin]
(D): [D, P, TT/fin]
(N): [N, D, P, TT/fin]
PRO.istuu: [V, TT/fin]
sti: [ADV, V, TT/fin]
mukavasti: [A, ADV, V, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "mukava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[PRO.P [D tama]] PRO.T/fin{V}] sti]
			Transferring [[PRO.P [D tama]] PRO.T/fin{V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[PRO.P [D tama]] PRO.T/fin{V}].
					Extracted head "PRO.istuu" from PRO.T/fin and created [[PRO.P [D tama]] [PRO.T/fin PRO.istuu]]
				Feature processing:
				Floater movement reconstruction:
					= [[P [D tama]] [T/fin istuu]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "P D tama " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[P [D N]]]
					Dropping constituent [PRO.P [D tama]]:9 from memory buffer into Spec of PRO.istuu
					Result [[PRO.P [D tama]]:9 [PRO.T/fin [(PP):9 PRO.istuu]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			=[[[PRO.P [D tama]]:9 [pro/x.T/fin [(PP):9 PRO.istuu]]] sti]

13.

		Consume "mukavasti"

		[[[P [D tama]] [T/fin [[P [D tama]] istuu]]] sti] + mukavasti
			Filtering out impossible merge sites...
			Sink "mukavasti" into sti because they are inside the same phonological word.
		Exploring solution number (1) =[sti*mukavasti]
			=[[[PRO.P [D tama]]:9 [pro/x.T/fin [(PP):9 PRO.istuu]]] sti{A}]

14.
	>>>	Trying candidate parse [[[P [D tama]] [T/fin [[P [D tama]] istuu]]] sti{A}] (2.)
		Reconstructing...
			Transferring [[[PRO.P [D tama]]:9 [pro/x.T/fin [(PP):9 PRO.istuu]]] sti{A}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[PRO.P [D tama]]:9 [pro/x.T/fin [(PP):9 PRO.istuu]]] sti{A}].
					Extracted head "mukavasti" from sti and created [[[PRO.P [D tama]]:9 [pro/x.T/fin [(PP):9 PRO.istuu]]] [sti mukavasti]]
				Feature processing:
				Floater movement reconstruction:
					sti at the right failed to tail [CAT:T]
						<sti mukavasti> was made an adjunct.
					= [[[P [D tama]] [T/fin [[P [D tama]] istuu]]] <sti mukavasti>]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					pro/x.T/fin has unvalued phi-features {'PHI:DET:_'}
			= [[[P [D tama]] [T/fin [[P [D tama]] istuu]]] <sti mukavasti>]
		Checking LF-interface conditions.
			Trying to transfer [[[PRO.P [D tama]]:9 [pro/x.T/fin [(PP):9 PRO.istuu]]] <sti mukavasti>] into Conceptual-Intentional system...
				pro/x.T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [P [D tama]]    (alternatives: )
				(P) with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tama]    (alternatives: )
				PRO.istuu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					Generic
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['(P)([D tama])', 'Generic', 'pro/x.T/fin([P [D tama]])']
!--->		Tests passed (with 14/199 operations) <------------------------------------
		Solution:
		[[[P [D tama]] [T/fin [[P [D tama]] istuu]]] <sti mukavasti>]
		Grammar: [[[PRO.P [D tama]]:1 [pro/x.T/fin [(PP):1 PRO.istuu]]] <sti mukavasti>]
		Spellout TT/finP = [[PP:1 [TT/fin [__:1 V]]] ADVP]
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A', 'null']
istuu:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A', 'null']
istuu:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

PRO.P: [P]
D: [D, P]
tama: [N, D, P]
pro/x.T/fin: [TT/fin]
(P): [P, TT/fin]
(D): [D, P, TT/fin]
(N): [N, D, P, TT/fin]
PRO.istuu: [V, TT/fin]
sti: [ADV]
mukavasti: [A, ADV]

			Checking if the sentence is ambiguous...


\========================================================================
# 69
['Pekka', 'sanoo', 'etta', 'tassa', 'istuu', 'mukavasti']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

9.
		Next word "sanoo" contains multiple morphemes ['$[-V]', '$T/fin', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					D was opened into [D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] PRO.T/fin]

11.

		Consume "sano-"

		[[D Pekka] T/fin] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sano-]
			=[[D Pekka] PRO.T/fin{V}]

12.

		Consume "että"

		[[D Pekka] T/fin{V}] + että
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> sano-]]] että] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} että]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.sano-" from PRO.T/fin and created [PRO.T/fin PRO.sano-]
				PRO.sano- (sano-) is missing complement FORCE
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} että]]

13.
		Next word "tassa" contains multiple morphemes ['$P', 'tama']

		Consume "P"

		[[D Pekka] [T/fin{V} että]] + P
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- että]]]] PRO.P] due to bad left branch.
				Reject [[T/fin [sano- että]] PRO.P] due to bad left branch.
		Exploring solution number (1) =[että P]
			Transferring että to LF.
				head movement reconstruction:
					Reconstructing head movement for että.
				Feature processing:
				Floater movement reconstruction:
					= että
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				että probing for CAT:T/fin failed.
				A phi-marked head "että" lacks complement
					Extraposition will be tried on että.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} [että PRO.P]]]

14.
		Next word "tama" contains multiple morphemes ['$def', '$3p', '$sg', '$D', 'tama-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D Pekka] [PRO.T/fin{V} [että PRO.P]]]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D Pekka] [PRO.T/fin{V} [että PRO.P]]]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D Pekka] [PRO.T/fin{V} [että PRO.P]]]

17.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D Pekka] [T/fin{V} [että P]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P*D]
			=[[D Pekka] [PRO.T/fin{V} [että PRO.P{D}]]]

18.

		Consume "tama"

		[[D Pekka] [T/fin{V} [että P{D}]]] + tama
			Filtering out impossible merge sites...
			Sink "tama" into P{D} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.P{D}*tama]
			=[[D Pekka] [PRO.T/fin{V} [että PRO.P{D,N}]]]

19.
		Next word "istuu" contains multiple morphemes ['$[-V]', '$T/fin', 'istu-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=[[D Pekka] [PRO.T/fin{V} [että PRO.P{D,N}]]]

20.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[[D Pekka] [T/fin{V} [että P{D,N}]]] + T/fin
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- [että [P [D tama]]]]]]] PRO.T/fin] due to bad left branch.
				Reject [[T/fin [sano- [että [P [D tama]]]]] PRO.T/fin] due to bad left branch.
				Reject [[että [P [D tama]]] PRO.T/fin] due to bad left branch.
		Exploring solution number (1) =[PRO.P{D,N} T/fin]
			Transferring PRO.P{D,N} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.P{D,N}.
					Extracted head "D{N}" from PRO.P and created [PRO.P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "tama" from D and created [PRO.P [D tama]]
					Reconstructing head movement for PRO.P{D,N}.
					Extracted head "D{N}" from PRO.P and created [PRO.P D{N}]
					Reconstructing head movement for D{N}.
					Extracted head "tama" from D and created [PRO.P [D tama]]
					PRO.P was opened into [PRO.P [D tama]].
				Feature processing:
				Floater movement reconstruction:
					= [P [D tama]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} [että [[PRO.P [D tama]] PRO.T/fin]]]]

21.

		Consume "istuu"

		[[D Pekka] [T/fin{V} [että [[P [D tama]] T/fin]]]] + istuu
			Filtering out impossible merge sites...
			Sink "istuu" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*istuu]
			=[[D Pekka] [PRO.T/fin{V} [että [[PRO.P [D tama]] PRO.T/fin{V}]]]]

22.
		Next word "mukavasti" contains multiple morphemes ['$sti', 'mukava-']

		Consume "sti"

		[[D Pekka] [T/fin{V} [että [[P [D tama]] T/fin{V}]]]] + sti
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, sti.
				Avoid TT/finP as SPEC, sti.
				Avoid P as SPEC, sti.
				Considering [että [[PRO.P [D tama]] PRO.T/fin{V}]] due to legitimate tail-head configuration.
				Avoid TT/finP as SPEC, sti.
				Avoid [[PRO.P [D tama]] PRO.T/fin{V}] due to tail-head failure.
				Considering PRO.T/fin{V} due to legitimate tail-head configuration.
				[[D Pekka] [PRO.T/fin{V} [että [[PRO.P [D tama]] PRO.T/fin{V}]]]] + sti = -98]
				[PRO.T/fin{V} [että [[PRO.P [D tama]] PRO.T/fin{V}]]] + sti = -96]
				[että [[PRO.P [D tama]] PRO.T/fin{V}]] + sti = 109]
				[[PRO.P [D tama]] PRO.T/fin{V}] + sti = -188]
				PRO.T/fin{V} + sti = 210]
		Ranking completed:
			1. [PRO.T/fin{V}; sti]
			2. [[että [[PRO.P [D tama]] PRO.T/fin{V}]]; sti]
			3. [[PRO.T/fin{V} [että [[PRO.P [D tama]] PRO.T/fin{V}]]]; sti]
			4. [[[D Pekka] [PRO.T/fin{V} [että [[PRO.P [D tama]] PRO.T/fin{V}]]]]; sti]
			5. [[[PRO.P [D tama]] PRO.T/fin{V}]; sti]
		Exploring solution number (1) =[PRO.T/fin{V} sti]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.istuu" from PRO.T/fin and created [PRO.T/fin PRO.istuu]
					PRO.T/fin{V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} [että [[PRO.P [D tama]] [PRO.T/fin{V} sti]]]]]

23.

		Consume "mukavasti"

		[[D Pekka] [T/fin{V} [että [[P [D tama]] [T/fin{V} sti]]]]] + mukavasti
			Filtering out impossible merge sites...
			Sink "mukavasti" into sti because they are inside the same phonological word.
		Exploring solution number (1) =[sti*mukavasti]
			=[[D Pekka] [PRO.T/fin{V} [että [[PRO.P [D tama]] [PRO.T/fin{V} sti{A}]]]]]

24.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [että [[P [D tama]] [T/fin{V} sti{A}]]]]] (1.)
		Reconstructing...
			Transferring [[D Pekka] [PRO.T/fin{V} [että [[PRO.P [D tama]] [PRO.T/fin{V} sti{A}]]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [PRO.T/fin{V} [että [[PRO.P [D tama]] [PRO.T/fin{V} sti{A}]]]]].
						Extracted head "PRO.sano-" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.sano- [että [[PRO.P [D tama]] [PRO.T/fin{V} sti{A}]]]]]]
						Extracted head "PRO.istuu" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.sano- [että [[PRO.P [D tama]] [PRO.T/fin [PRO.istuu sti{A}]]]]]]]
					Extracted head "mukavasti" from sti and created [[D Pekka] [PRO.T/fin [PRO.sano- [että [[PRO.P [D tama]] [PRO.T/fin [PRO.istuu [sti mukavasti]]]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:184 [PRO.T/fin [<DP>:184 [PRO.sano- [että [[PRO.P [D tama]] [PRO.T/fin [PRO.istuu [sti mukavasti]]]]]]]]]
					sti at the right failed to tail [CAT:T]
						<sti mukavasti> was made an adjunct.
					= [<D Pekka> [T/fin [<D Pekka> [sano- [että [[P [D tama]] [T/fin [istuu <sti mukavasti>]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "P D tama " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[P [D N]]]
					Dropping constituent [PRO.P [D tama]]:18 from memory buffer into Spec of PRO.istuu
					Result [<D Pekka>:184 [PRO.T/fin [<DP>:184 [PRO.sano- [että [[PRO.P [D tama]]:18 [PRO.T/fin [(PP):18 [PRO.istuu <sti mukavasti>]]]]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:184.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:184.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:184.
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			= [<D Pekka> [T/fin [<D Pekka> [sano- [että [[P [D tama]] [T/fin [[P [D tama]] [istuu <sti mukavasti>]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:184 [phi.T/fin [<DP>:184 [PRO.sano- [että [[PRO.P [D tama]]:18 [pro/x.T/fin [(PP):18 [PRO.istuu <sti mukavasti>]]]]]]]]] into Conceptual-Intentional system...
				PRO.sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				pro/x.T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [P [D tama]]    (alternatives: )
				(P) with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tama]    (alternatives: 2. <D Pekka> 3. T/fin 4. <D Pekka> )
				PRO.istuu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				Transfer to C-I successful.
			sti<[ADV, V, TT/fin, , V, TT/fin]> failed to tail features [CAT:T]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A', 'null']
istuu:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
PRO.P: [P, , V, TT/fin]
D: [D, P, , V, TT/fin]
tama: [N, D, P, , V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
(P): [P, TT/fin, , V, TT/fin]
(D): [D, P, TT/fin, , V, TT/fin]
(N): [N, D, P, TT/fin, , V, TT/fin]
PRO.istuu: [V, TT/fin, , V, TT/fin]
sti: [ADV, V, TT/fin, , V, TT/fin]
mukavasti: [A, ADV, V, TT/fin, , V, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "mukava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[että [[PRO.P [D tama]] PRO.T/fin{V}]] sti]
			Transferring [että [[PRO.P [D tama]] PRO.T/fin{V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [että [[PRO.P [D tama]] PRO.T/fin{V}]].
					Extracted head "PRO.istuu" from PRO.T/fin and created [että [[PRO.P [D tama]] [PRO.T/fin PRO.istuu]]]
				Feature processing:
				Floater movement reconstruction:
					= [että [[P [D tama]] [T/fin istuu]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "P D tama " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[P [D N]]]
					Dropping constituent [PRO.P [D tama]]:19 from memory buffer into Spec of PRO.istuu
					Result [että [[PRO.P [D tama]]:19 [PRO.T/fin [(PP):19 PRO.istuu]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			=[[D Pekka] [PRO.T/fin{V} [[että [[PRO.P [D tama]]:19 [pro/x.T/fin [(PP):19 PRO.istuu]]]] sti]]]

25.

		Consume "mukavasti"

		[[D Pekka] [T/fin{V} [[että [[P [D tama]] [T/fin [[P [D tama]] istuu]]]] sti]]] + mukavasti
			Filtering out impossible merge sites...
			Sink "mukavasti" into sti because they are inside the same phonological word.
		Exploring solution number (1) =[sti*mukavasti]
			=[[D Pekka] [PRO.T/fin{V} [[että [[PRO.P [D tama]]:19 [pro/x.T/fin [(PP):19 PRO.istuu]]]] sti{A}]]]

26.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [[että [[P [D tama]] [T/fin [[P [D tama]] istuu]]]] sti{A}]]] (2.)
		Reconstructing...
			Transferring [[D Pekka] [PRO.T/fin{V} [[että [[PRO.P [D tama]]:19 [pro/x.T/fin [(PP):19 PRO.istuu]]]] sti{A}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [PRO.T/fin{V} [[että [[PRO.P [D tama]]:19 [pro/x.T/fin [(PP):19 PRO.istuu]]]] sti{A}]]].
						Extracted head "PRO.sano-" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.sano- [[että [[PRO.P [D tama]]:19 [pro/x.T/fin [(PP):19 PRO.istuu]]]] sti{A}]]]]
					Extracted head "mukavasti" from sti and created [[D Pekka] [PRO.T/fin [PRO.sano- [[että [[PRO.P [D tama]]:19 [pro/x.T/fin [(PP):19 PRO.istuu]]]] [sti mukavasti]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:185 [PRO.T/fin [<DP>:185 [PRO.sano- [[että [[PRO.P [D tama]]:19 [pro/x.T/fin [(PP):19 PRO.istuu]]]] [sti mukavasti]]]]]]
					sti at the right failed to tail [CAT:T]
						<sti mukavasti> was made an adjunct.
					sti at the right failed to tail [CAT:T]
					= [<D Pekka> [T/fin [<D Pekka> [sano- [[että [[P [D tama]] [T/fin [[P [D tama]] istuu]]]] <sti mukavasti>]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:185.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:185.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:185.
					pro/x.T/fin has unvalued phi-features {'PHI:DET:_'}
			= [<D Pekka> [T/fin [<D Pekka> [sano- [[että [[P [D tama]] [T/fin [[P [D tama]] istuu]]]] <sti mukavasti>]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:185 [phi.T/fin [<DP>:185 [PRO.sano- [[että [[PRO.P [D tama]]:19 [pro/x.T/fin [(PP):19 PRO.istuu]]]] <sti mukavasti>]]]]] into Conceptual-Intentional system...
				PRO.sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				pro/x.T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [P [D tama]]    (alternatives: )
				(P) with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tama]    (alternatives: 2. <D Pekka> 3. T/fin 4. <D Pekka> )
				PRO.istuu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				Transfer to C-I successful.
			sti<[ADV, V, TT/fin]> failed to tail features [CAT:T]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A', 'null']
istuu:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
PRO.P: [P, , V, TT/fin]
D: [D, P, , V, TT/fin]
tama: [N, D, P, , V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
(P): [P, TT/fin, , V, TT/fin]
(D): [D, P, TT/fin, , V, TT/fin]
(N): [N, D, P, TT/fin, , V, TT/fin]
PRO.istuu: [V, TT/fin, , V, TT/fin]
sti: [ADV, V, TT/fin]
mukavasti: [A, ADV, V, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "mukava-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[PRO.T/fin{V} [että [[PRO.P [D tama]] PRO.T/fin{V}]]] sti]
			Transferring [PRO.T/fin{V} [että [[PRO.P [D tama]] PRO.T/fin{V}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{V} [että [[PRO.P [D tama]] PRO.T/fin{V}]]].
						Extracted head "PRO.sano-" and reconstructed it = [PRO.T/fin [PRO.sano- [että [[PRO.P [D tama]] PRO.T/fin{V}]]]]
					Extracted head "PRO.istuu" from PRO.T/fin and created [PRO.T/fin [PRO.sano- [että [[PRO.P [D tama]] [PRO.T/fin PRO.istuu]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [sano- [että [[P [D tama]] [T/fin istuu]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "P D tama " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[P [D N]]]
					Dropping constituent [PRO.P [D tama]]:20 from memory buffer into Spec of PRO.istuu
					Result [PRO.T/fin [PRO.sano- [että [[PRO.P [D tama]]:20 [PRO.T/fin [(PP):20 PRO.istuu]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			=[[D Pekka] [[pro/x.T/fin [PRO.sano- [että [[PRO.P [D tama]]:20 [pro/x.T/fin [(PP):20 PRO.istuu]]]]]] sti]]

27.

		Consume "mukavasti"

		[[D Pekka] [[T/fin [sano- [että [[P [D tama]] [T/fin [[P [D tama]] istuu]]]]]] sti]] + mukavasti
			Filtering out impossible merge sites...
			Sink "mukavasti" into sti because they are inside the same phonological word.
		Exploring solution number (1) =[sti*mukavasti]
			=[[D Pekka] [[pro/x.T/fin [PRO.sano- [että [[PRO.P [D tama]]:20 [pro/x.T/fin [(PP):20 PRO.istuu]]]]]] sti{A}]]

28.
	>>>	Trying candidate parse [[D Pekka] [[T/fin [sano- [että [[P [D tama]] [T/fin [[P [D tama]] istuu]]]]]] sti{A}]] (3.)
		Reconstructing...
			Transferring [[D Pekka] [[pro/x.T/fin [PRO.sano- [että [[PRO.P [D tama]]:20 [pro/x.T/fin [(PP):20 PRO.istuu]]]]]] sti{A}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [[pro/x.T/fin [PRO.sano- [että [[PRO.P [D tama]]:20 [pro/x.T/fin [(PP):20 PRO.istuu]]]]]] sti{A}]].
					Extracted head "mukavasti" from sti and created [[D Pekka] [[pro/x.T/fin [PRO.sano- [että [[PRO.P [D tama]]:20 [pro/x.T/fin [(PP):20 PRO.istuu]]]]]] [sti mukavasti]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					sti at the right failed to tail [CAT:T]
						<sti mukavasti> was made an adjunct.
					= [[D Pekka] [[T/fin [sano- [että [[P [D tama]] [T/fin [[P [D tama]] istuu]]]]]] <sti mukavasti>]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Pekka " into memory buffer from SPEC of "pro/x.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D Pekka]:21 from memory buffer into Spec of PRO.sano-
					Result [[D Pekka]:21 [[pro/x.T/fin [(DP):21 [PRO.sano- [että [[PRO.P [D tama]]:20 [pro/x.T/fin [(PP):20 PRO.istuu]]]]]]] <sti mukavasti>]]
				Agreement reconstruction:
					pro/x.T/fin has unvalued phi-features {'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):21.
					pro/x.T/fin has unvalued phi-features {'PHI:DET:_'}
			= [[D Pekka] [[T/fin [[D Pekka] [sano- [että [[P [D tama]] [T/fin [[P [D tama]] istuu]]]]]]] <sti mukavasti>]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:21 [[phi.T/fin [(DP):21 [PRO.sano- [että [[PRO.P [D tama]]:20 [pro/x.T/fin [(PP):20 PRO.istuu]]]]]]] <sti mukavasti>]] into Conceptual-Intentional system...
				PRO.sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Pekka]    (alternatives: 2. T/fin 3. [D Pekka] 4. [D Pekka] )
				pro/x.T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [P [D tama]]    (alternatives: )
				(P) with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tama]    (alternatives: 2. [D Pekka] 3. T/fin 4. [D Pekka] 5. [D Pekka] )
				PRO.istuu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Pekka]    (alternatives: 2. T/fin 3. [D Pekka] 4. [D Pekka] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['(P)([D tama])', 'Generic', 'PRO.istuu([D Pekka])', 'PRO.sano-([D Pekka])', 'pro/x.T/fin([P [D tama]])']
!--->		Tests passed (with 28/420 operations) <------------------------------------
		Solution:
		[[D Pekka] [[T/fin [[D Pekka] [sano- [että [[P [D tama]] [T/fin [[P [D tama]] istuu]]]]]]] <sti mukavasti>]]
		Grammar: [[D Pekka]:1 [[phi.T/fin [(DP):1 [PRO.sano- [että [[PRO.P [D tama]]:2 [pro/x.T/fin [(PP):2 PRO.istuu]]]]]]] <sti mukavasti>]]
		Spellout TT/finP = [DP:1 [[TT/fin [__:1 [V [ [PP:2 [TT/fin [__:2 V]]]]]]] ADVP]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A', 'null']
istuu:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A', 'null']
istuu:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
PRO.P: [P, , V, TT/fin]
D: [D, P, , V, TT/fin]
tama: [N, D, P, , V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
(P): [P, TT/fin, , V, TT/fin]
(D): [D, P, TT/fin, , V, TT/fin]
(N): [N, D, P, TT/fin, , V, TT/fin]
PRO.istuu: [V, TT/fin, , V, TT/fin]
sti: [ADV]
mukavasti: [A, ADV]

			Checking if the sentence is ambiguous...


\========================================================================
# 70
['Pekka', 'haluaa', 'lahtea']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

9.
		Next word "haluaa" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					D was opened into [D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] PRO.T/fin]

11.

		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D Pekka] PRO.T/fin{v}]

12.

		Consume "haluaa"

		[[D Pekka] T/fin{v}] + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*haluaa]
			=[[D Pekka] PRO.T/fin{v,V}]

13.
		Next word "lahtea" contains multiple morphemes ['$A/inf', 'lahte-']

		Consume "A/inf"

		[[D Pekka] T/fin{v,V}] + A/inf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] A/inf] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{v,V} A/inf]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.haluaa" from PRO.v and created [PRO.T/fin [PRO.v PRO.haluaa]]
				A phi-marked head "PRO.haluaa" lacks complement
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{v,V} A/inf]]

14.

		Consume "lahtea"

		[[D Pekka] [T/fin{v,V} A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[[D Pekka] [PRO.T/fin{v,V} A/inf{V}]]

15.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} A/inf{V}]] (1.)
		Reconstructing...
			Transferring [[D Pekka] [PRO.T/fin{v,V} A/inf{V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [PRO.T/fin{v,V} A/inf{V}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.v{V} A/inf{V}]]]
						Extracted head "PRO.haluaa" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.v [PRO.haluaa A/inf{V}]]]]
					Extracted head "PRO.lahtea" from A/inf and created [[D Pekka] [PRO.T/fin [PRO.v [PRO.haluaa [A/inf PRO.lahtea]]]]]
				Feature processing:
					A/inf has neutralized PHI-feature, will be resolved into -ARG due to PRO.haluaa
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:187 [PRO.T/fin [<DP>:187 [PRO.v [PRO.haluaa [A/inf PRO.lahtea]]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [v [haluaa [A/inf lahtea]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:187.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:187.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:187.
			= [<D Pekka> [T/fin [<D Pekka> [v [haluaa [A/inf lahtea]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:187 [phi.T/fin [<DP>:187 [PRO.v [PRO.haluaa [A/inf PRO.lahtea]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				PRO.haluaa with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				PRO.lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.haluaa(<D Pekka>)', 'PRO.lahtea(<D Pekka>)', 'PRO.v(<D Pekka>)']
!--->		Tests passed (with 15/145 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v [haluaa [A/inf lahtea]]]]]]
		Grammar: [<D Pekka>:1 [phi.T/fin [<DP>:1 [PRO.v [PRO.haluaa [A/inf PRO.lahtea]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [INF V]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.haluaa: [V, v, TT/fin]
A/inf: [INF, V, v, TT/fin]
PRO.lahtea: [V, INF, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 71
['Pekka', 'kaskee', 'Merjan', 'lahtea']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

9.
		Next word "kaskee" contains multiple morphemes ['$[-V]', '$T/fin', '$v*', 'kaske-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					D was opened into [D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] PRO.T/fin]

11.

		Consume "v*"

		[[D Pekka] T/fin] + v*
			Filtering out impossible merge sites...
			Sink "v*" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v*]
			=[[D Pekka] PRO.T/fin{v}]

12.
		Ambiguous lexical item "kaske-" detected.

		Consume "kaske"

		[[D Pekka] T/fin{v}] + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*kaske]
			=[[D Pekka] PRO.T/fin{v,V}]

13.
		Next word "Merjan" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$gen', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[D Pekka] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D Pekka] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D Pekka] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D Pekka] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$gen"

			=[[D Pekka] PRO.T/fin{v,V}]

18.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.

		Consume "$D"

			=[[D Pekka] PRO.T/fin{v,V}]

19.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']

		Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.kaske (kaske) is missing complement A/inf
				Avoid [<D Pekka> [T/fin [<D Pekka> [v* kaske]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				[[D Pekka] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 56]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D Pekka] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v*{V}" from PRO.T/fin and created [PRO.T/fin PRO.v*{V}]
					Reconstructing head movement for PRO.v*{V}.
					Extracted head "PRO.kaske" from PRO.v* and created [PRO.T/fin [PRO.v* PRO.kaske]]
				PRO.kaske (kaske) is missing complement A/inf
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{v,V} D]]

20.

		Consume "Merja-"

		[[D Pekka] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D Pekka] [PRO.T/fin{v,V} D{N}]]

21.
		Next word "lahtea" contains multiple morphemes ['$A/inf', 'lahte-']

		Consume "A/inf"

		[[D Pekka] [T/fin{v,V} D{N}]] + A/inf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v* [kaske <D Merja->]]]]] A/inf] due to bad left branch.
				Reject [[T/fin [v* [kaske <D Merja->]]] A/inf] due to bad left branch.
		Exploring solution number (1) =[D{N} A/inf]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					D was opened into [D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{v,V} [[D Merja-] A/inf]]]

22.

		Consume "lahtea"

		[[D Pekka] [T/fin{v,V} [[D Merja-] A/inf]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[[D Pekka] [PRO.T/fin{v,V} [[D Merja-] A/inf{V}]]]

23.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} [[D Merja-] A/inf{V}]]] (1.)
		Reconstructing...
			Transferring [[D Pekka] [PRO.T/fin{v,V} [[D Merja-] A/inf{V}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [PRO.T/fin{v,V} [[D Merja-] A/inf{V}]]].
						Extracted head "PRO.v*{V}" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.v*{V} [[D Merja-] A/inf{V}]]]]
						Extracted head "PRO.kaske" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.v* [PRO.kaske [[D Merja-] A/inf{V}]]]]]
					Extracted head "PRO.lahtea" from A/inf and created [[D Pekka] [PRO.T/fin [PRO.v* [PRO.kaske [[D Merja-] [A/inf PRO.lahtea]]]]]]
				Feature processing:
					A/inf has neutralized PHI-feature, will be resolved into +ARG due to PRO.kaske
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:191 [PRO.T/fin [<DP>:191 [PRO.v* [PRO.kaske [[D Merja-] [A/inf PRO.lahtea]]]]]]]
					[D Merja-] failed to tail [ARG][CAT:INF][VAL]
					Dropping [D Merja-]
						<D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [<D Pekka>:191 [PRO.T/fin [<DP>:191 [PRO.v* [PRO.kaske [<D Merja->:192 [A/inf [<DP>:192 PRO.lahtea]]]]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [v* [kaske [<D Merja-> [A/inf [<D Merja-> lahtea]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:191.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:191.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:191.
			= [<D Pekka> [T/fin [<D Pekka> [v* [kaske [<D Merja-> [A/inf [<D Merja-> lahtea]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:191 [phi.T/fin [<DP>:191 [PRO.v* [PRO.kaske [<D Merja->:192 [A/inf [<DP>:192 PRO.lahtea]]]]]]]] into Conceptual-Intentional system...
				PRO.v* with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				PRO.kaske with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					Generic
				PRO.lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D Merja-> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Generic', 'PRO.lahtea(<D Merja->)', 'PRO.v*(<D Pekka>)']
!--->		Tests passed (with 23/216 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v* [kaske [<D Merja-> [A/inf [<D Merja-> lahtea]]]]]]]]
		Grammar: [<D Pekka>:1 [phi.T/fin [<DP>:1 [PRO.v* [PRO.kaske [<D Merja->:2 [A/inf [<DP>:2 PRO.lahtea]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [DP:2 [INF [__:2 V]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v*: [v, TT/fin]
PRO.kaske: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]
A/inf: [INF, V, v, TT/fin]
(D): [D, INF, V, v, TT/fin]
(N): [N, D, INF, V, v, TT/fin]
PRO.lahtea: [V, INF, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "kaske"

		[[D Pekka] T/fin{v}] + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*kaske]


\========================================================================
# 72
['Pekka', 'haluaa', 'Merjan', 'lahtea']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

9.
		Next word "haluaa" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					D was opened into [D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] PRO.T/fin]

11.

		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D Pekka] PRO.T/fin{v}]

12.

		Consume "haluaa"

		[[D Pekka] T/fin{v}] + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*haluaa]
			=[[D Pekka] PRO.T/fin{v,V}]

13.
		Next word "Merjan" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$gen', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[D Pekka] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D Pekka] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D Pekka] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D Pekka] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$gen"

			=[[D Pekka] PRO.T/fin{v,V}]

18.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.

		Consume "$D"

			=[[D Pekka] PRO.T/fin{v,V}]

19.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']

		Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				A phi-marked head "PRO.haluaa" lacks complement
				Avoid [<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [haluaa D] due to complement selection.
				[[D Pekka] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D Pekka] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.haluaa" from PRO.v and created [PRO.T/fin [PRO.v PRO.haluaa]]
				A phi-marked head "PRO.haluaa" lacks complement
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{v,V} D]]

20.

		Consume "Merja-"

		[[D Pekka] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D Pekka] [PRO.T/fin{v,V} D{N}]]

21.
		Next word "lahtea" contains multiple morphemes ['$A/inf', 'lahte-']

		Consume "A/inf"

		[[D Pekka] [T/fin{v,V} D{N}]] + A/inf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v [haluaa <D Merja->]]]]] A/inf] due to bad left branch.
				Reject [[T/fin [v [haluaa <D Merja->]]] A/inf] due to bad left branch.
		Exploring solution number (1) =[D{N} A/inf]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					D was opened into [D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{v,V} [[D Merja-] A/inf]]]

22.

		Consume "lahtea"

		[[D Pekka] [T/fin{v,V} [[D Merja-] A/inf]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[[D Pekka] [PRO.T/fin{v,V} [[D Merja-] A/inf{V}]]]

23.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} [[D Merja-] A/inf{V}]]] (1.)
		Reconstructing...
			Transferring [[D Pekka] [PRO.T/fin{v,V} [[D Merja-] A/inf{V}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [PRO.T/fin{v,V} [[D Merja-] A/inf{V}]]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.v{V} [[D Merja-] A/inf{V}]]]]
						Extracted head "PRO.haluaa" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.v [PRO.haluaa [[D Merja-] A/inf{V}]]]]]
					Extracted head "PRO.lahtea" from A/inf and created [[D Pekka] [PRO.T/fin [PRO.v [PRO.haluaa [[D Merja-] [A/inf PRO.lahtea]]]]]]
				Feature processing:
					A/inf has neutralized PHI-feature, will be resolved into -ARG due to PRO.haluaa
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:196 [PRO.T/fin [<DP>:196 [PRO.v [PRO.haluaa [[D Merja-] [A/inf PRO.lahtea]]]]]]]
					[D Merja-] failed to tail [ARG][CAT:INF][VAL]
					Dropping [D Merja-]
					= [<D Pekka> [T/fin [<D Pekka> [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				hD failed internal tail test.
				A/inf (A/inf) has a specifier [D Merja-] but is marked for -EPP behavior.
					Extraposition will be tried on [<D Pekka>:196 [PRO.T/fin [<DP>:196 [PRO.v [PRO.haluaa [[D Merja-] [A/inf PRO.lahtea]]]]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:196.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:196.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:196.
			= [<D Pekka> [T/fin [<D Pekka> [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]]
		Checking LF-interface conditions.
				hD failed internal tail test.
				A/inf (A/inf) has a specifier [D Merja-] but is marked for -EPP behavior.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.haluaa: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]
A/inf: [INF, V, v, TT/fin]
PRO.lahtea: [V, INF, V, v, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D Pekka] PRO.T/fin{v,V}] D]
			Transferring [[D Pekka] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] PRO.T/fin{v,V}].
					Extracted head "PRO.v{V}" from PRO.T/fin and created [[D Pekka] [PRO.T/fin PRO.v{V}]]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.haluaa" from PRO.v and created [[D Pekka] [PRO.T/fin [PRO.v PRO.haluaa]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:197 [PRO.T/fin [<DP>:197 [PRO.v PRO.haluaa]]]]
					= [<D Pekka> [T/fin [<D Pekka> [v haluaa]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				A phi-marked head "PRO.haluaa" lacks complement
					Extraposition will be tried on [<D Pekka>:197 [PRO.T/fin [<DP>:197 [PRO.v PRO.haluaa]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:197.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:197.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:197.
			=[[<D Pekka>:197 [phi.T/fin [<DP>:197 [PRO.v PRO.haluaa]]]] D]

24.

		Consume "Merja-"

		[[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[<D Pekka>:197 [phi.T/fin [<DP>:197 [PRO.v PRO.haluaa]]]] D{N}]

25.
		Next word "lahtea" contains multiple morphemes ['$A/inf', 'lahte-']

		Consume "A/inf"

		[[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] D{N}] + A/inf
			Filtering out impossible merge sites...
				Reject [[[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] <D Merja->] A/inf] due to bad left branch.
		Exploring solution number (1) =[D{N} A/inf]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					D was opened into [D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[<D Pekka>:197 [phi.T/fin [<DP>:197 [PRO.v PRO.haluaa]]]] [[D Merja-] A/inf]]

26.

		Consume "lahtea"

		[[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] [[D Merja-] A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[[<D Pekka>:197 [phi.T/fin [<DP>:197 [PRO.v PRO.haluaa]]]] [[D Merja-] A/inf{V}]]

27.
	>>>	Trying candidate parse [[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] [[D Merja-] A/inf{V}]] (2.)
		Reconstructing...
			Transferring [[<D Pekka>:197 [phi.T/fin [<DP>:197 [PRO.v PRO.haluaa]]]] [[D Merja-] A/inf{V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<D Pekka>:197 [phi.T/fin [<DP>:197 [PRO.v PRO.haluaa]]]] [[D Merja-] A/inf{V}]].
					Extracted head "PRO.lahtea" from A/inf and created [[<D Pekka>:197 [phi.T/fin [<DP>:197 [PRO.v PRO.haluaa]]]] [[D Merja-] [A/inf PRO.lahtea]]]
				Feature processing:
				Floater movement reconstruction:
					[D Merja-] failed to tail [ARG][CAT:INF][VAL]
					Dropping [D Merja-]
					= [[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] [[D Merja-] [A/inf lahtea]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				A phi-marked head "PRO.haluaa" lacks complement
				A/inf has unaccetable specifier [D Merja-].
					Extraposition will be tried on [[<D Pekka>:197 [phi.T/fin [<DP>:197 [PRO.v PRO.haluaa]]]] [[D Merja-] [A/inf PRO.lahtea]]].
				Agreement reconstruction:
			= [[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] [[D Merja-] [A/inf lahtea]]]
		Checking LF-interface conditions.
				A phi-marked head "PRO.haluaa" lacks complement
				A/inf has unaccetable specifier [D Merja-].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.haluaa: [V, v, TT/fin]
D: [D]
Merja-: [N, D]
A/inf: [INF]
PRO.lahtea: [V, INF]


		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$gen".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "halua-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "haluaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$nom".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 73
['Pekka', 'kaskee', 'lahtea']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

9.
		Next word "kaskee" contains multiple morphemes ['$[-V]', '$T/fin', '$v*', 'kaske-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					D was opened into [D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] PRO.T/fin]

11.

		Consume "v*"

		[[D Pekka] T/fin] + v*
			Filtering out impossible merge sites...
			Sink "v*" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v*]
			=[[D Pekka] PRO.T/fin{v}]

12.
		Ambiguous lexical item "kaske-" detected.

		Consume "kaske"

		[[D Pekka] T/fin{v}] + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*kaske]
			=[[D Pekka] PRO.T/fin{v,V}]

13.
		Next word "lahtea" contains multiple morphemes ['$A/inf', 'lahte-']

		Consume "A/inf"

		[[D Pekka] T/fin{v,V}] + A/inf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v* kaske]]]] A/inf] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{v,V} A/inf]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v*{V}" from PRO.T/fin and created [PRO.T/fin PRO.v*{V}]
					Reconstructing head movement for PRO.v*{V}.
					Extracted head "PRO.kaske" from PRO.v* and created [PRO.T/fin [PRO.v* PRO.kaske]]
				PRO.kaske (kaske) is missing complement A/inf
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{v,V} A/inf]]

14.

		Consume "lahtea"

		[[D Pekka] [T/fin{v,V} A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[[D Pekka] [PRO.T/fin{v,V} A/inf{V}]]

15.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} A/inf{V}]] (1.)
		Reconstructing...
			Transferring [[D Pekka] [PRO.T/fin{v,V} A/inf{V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [PRO.T/fin{v,V} A/inf{V}]].
						Extracted head "PRO.v*{V}" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.v*{V} A/inf{V}]]]
						Extracted head "PRO.kaske" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.v* [PRO.kaske A/inf{V}]]]]
					Extracted head "PRO.lahtea" from A/inf and created [[D Pekka] [PRO.T/fin [PRO.v* [PRO.kaske [A/inf PRO.lahtea]]]]]
				Feature processing:
					A/inf has neutralized PHI-feature, will be resolved into +ARG due to PRO.kaske
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:199 [PRO.T/fin [<DP>:199 [PRO.v* [PRO.kaske [A/inf PRO.lahtea]]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [v* [kaske [A/inf lahtea]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "A/inf" lacks specifier but needs one.
					Extraposition will be tried on [<D Pekka>:199 [PRO.T/fin [<DP>:199 [PRO.v* [PRO.kaske [A/inf PRO.lahtea]]]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:199.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:199.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:199.
			= [<D Pekka> [T/fin [<D Pekka> [v* [kaske [A/inf lahtea]]]]]]
		Checking LF-interface conditions.
				An EPP-head "A/inf" lacks specifier but needs one.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v*: [v, TT/fin]
PRO.kaske: [V, v, TT/fin]
A/inf: [INF, V, v, TT/fin]
PRO.lahtea: [V, INF, V, v, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.

		Consume "kaske"

		[[D Pekka] T/fin{v}] + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*kaske]
			=[[D Pekka] PRO.T/fin{v,V}]

16.
		Next word "lahtea" contains multiple morphemes ['$A/inf', 'lahte-']

		Consume "A/inf"

		[[D Pekka] T/fin{v,V}] + A/inf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v* kaske]]]] A/inf] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{v,V} A/inf]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v*{V}" from PRO.T/fin and created [PRO.T/fin PRO.v*{V}]
					Reconstructing head movement for PRO.v*{V}.
					Extracted head "PRO.kaske" from PRO.v* and created [PRO.T/fin [PRO.v* PRO.kaske]]
				PRO.kaske (kaske) is missing complement A/inf
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{v,V} A/inf]]

17.

		Consume "lahtea"

		[[D Pekka] [T/fin{v,V} A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[[D Pekka] [PRO.T/fin{v,V} A/inf{V}]]

18.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} A/inf{V}]] (2.)
		Reconstructing...
			Transferring [[D Pekka] [PRO.T/fin{v,V} A/inf{V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [PRO.T/fin{v,V} A/inf{V}]].
						Extracted head "PRO.v*{V}" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.v*{V} A/inf{V}]]]
						Extracted head "PRO.kaske" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.v* [PRO.kaske A/inf{V}]]]]
					Extracted head "PRO.lahtea" from A/inf and created [[D Pekka] [PRO.T/fin [PRO.v* [PRO.kaske [A/inf PRO.lahtea]]]]]
				Feature processing:
					A/inf has neutralized PHI-feature, will be resolved into +ARG due to PRO.kaske
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:201 [PRO.T/fin [<DP>:201 [PRO.v* [PRO.kaske [A/inf PRO.lahtea]]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [v* [kaske [A/inf lahtea]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "A/inf" lacks specifier but needs one.
					Extraposition will be tried on [<D Pekka>:201 [PRO.T/fin [<DP>:201 [PRO.v* [PRO.kaske [A/inf PRO.lahtea]]]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:201.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:201.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:201.
			= [<D Pekka> [T/fin [<D Pekka> [v* [kaske [A/inf lahtea]]]]]]
		Checking LF-interface conditions.
				An EPP-head "A/inf" lacks specifier but needs one.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v*: [v, TT/fin]
PRO.kaske: [V, v, TT/fin]
A/inf: [INF, V, v, TT/fin]
PRO.lahtea: [V, INF, V, v, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kaske-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v*".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kaskee".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$nom".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 74
['Pekka', 'haluaa', 'lahtemaan']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

9.
		Next word "haluaa" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					D was opened into [D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] PRO.T/fin]

11.

		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D Pekka] PRO.T/fin{v}]

12.

		Consume "haluaa"

		[[D Pekka] T/fin{v}] + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*haluaa]
			=[[D Pekka] PRO.T/fin{v,V}]

13.
		Next word "lahtemaan" contains multiple morphemes ['$MA/inf', 'lahte-']

		Consume "ma"

		[[D Pekka] T/fin{v,V}] + ma
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] ma] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{v,V} ma]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.haluaa" from PRO.v and created [PRO.T/fin [PRO.v PRO.haluaa]]
				A phi-marked head "PRO.haluaa" lacks complement
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{v,V} ma]]

14.

		Consume "lahtea"

		[[D Pekka] [T/fin{v,V} ma]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into ma because they are inside the same phonological word.
		Exploring solution number (1) =[ma*lahtea]
			=[[D Pekka] [PRO.T/fin{v,V} ma{V}]]

15.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} ma{V}]] (1.)
		Reconstructing...
			Transferring [[D Pekka] [PRO.T/fin{v,V} ma{V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [PRO.T/fin{v,V} ma{V}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.v{V} ma{V}]]]
						Extracted head "PRO.haluaa" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.v [PRO.haluaa ma{V}]]]]
					Extracted head "PRO.lahtea" from ma and created [[D Pekka] [PRO.T/fin [PRO.v [PRO.haluaa [ma PRO.lahtea]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:203 [PRO.T/fin [<DP>:203 [PRO.v [PRO.haluaa [ma PRO.lahtea]]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [v [haluaa [ma lahtea]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:203.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:203.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:203.
			= [<D Pekka> [T/fin [<D Pekka> [v [haluaa [ma lahtea]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:203 [phi.T/fin [<DP>:203 [PRO.v [PRO.haluaa [ma PRO.lahtea]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				PRO.haluaa with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				PRO.lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.haluaa(<D Pekka>)', 'PRO.lahtea(<D Pekka>)', 'PRO.v(<D Pekka>)']
!--->		Tests passed (with 15/144 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v [haluaa [ma lahtea]]]]]]
		Grammar: [<D Pekka>:1 [phi.T/fin [<DP>:1 [PRO.v [PRO.haluaa [ma PRO.lahtea]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [INF V]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
ma:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '-VAL', 'CAT:-ARG', 'CAT:-ARG/INF/MA/inf', 'CAT:INF', 'CAT:MA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:MA/inf', 'PF:ma']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
ma:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '-VAL', 'CAT:-ARG', 'CAT:-ARG/INF/MA/inf', 'CAT:INF', 'CAT:MA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:MA/inf', 'PF:ma']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.haluaa: [V, v, TT/fin]
ma: [INF, V, v, TT/fin]
PRO.lahtea: [V, INF, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 75
['Pekka', 'haluaa', 'Merjan', 'lahtevan']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

9.
		Next word "haluaa" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					D was opened into [D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] PRO.T/fin]

11.

		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D Pekka] PRO.T/fin{v}]

12.

		Consume "haluaa"

		[[D Pekka] T/fin{v}] + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*haluaa]
			=[[D Pekka] PRO.T/fin{v,V}]

13.
		Next word "Merjan" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$gen', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[D Pekka] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D Pekka] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D Pekka] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D Pekka] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$gen"

			=[[D Pekka] PRO.T/fin{v,V}]

18.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.

		Consume "$D"

			=[[D Pekka] PRO.T/fin{v,V}]

19.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']

		Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				A phi-marked head "PRO.haluaa" lacks complement
				Avoid [<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [haluaa D] due to complement selection.
				[[D Pekka] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D Pekka] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.haluaa" from PRO.v and created [PRO.T/fin [PRO.v PRO.haluaa]]
				A phi-marked head "PRO.haluaa" lacks complement
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{v,V} D]]

20.

		Consume "Merja-"

		[[D Pekka] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D Pekka] [PRO.T/fin{v,V} D{N}]]

21.
		Next word "lahtevan" contains multiple morphemes ['$VA/inf', 'lahte-']

		Consume "vAn"

		[[D Pekka] [T/fin{v,V} D{N}]] + vAn
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v [haluaa <D Merja->]]]]] PRO.vAn] due to bad left branch.
				Reject [[T/fin [v [haluaa <D Merja->]]] PRO.vAn] due to bad left branch.
		Exploring solution number (1) =[D{N} vAn]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					D was opened into [D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{v,V} [[D Merja-] PRO.vAn]]]

22.

		Consume "lahtea"

		[[D Pekka] [T/fin{v,V} [[D Merja-] vAn]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into vAn because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.vAn*lahtea]
			=[[D Pekka] [PRO.T/fin{v,V} [[D Merja-] PRO.vAn{V}]]]

23.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} [[D Merja-] vAn{V}]]] (1.)
		Reconstructing...
			Transferring [[D Pekka] [PRO.T/fin{v,V} [[D Merja-] PRO.vAn{V}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [PRO.T/fin{v,V} [[D Merja-] PRO.vAn{V}]]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.v{V} [[D Merja-] PRO.vAn{V}]]]]
						Extracted head "PRO.haluaa" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.v [PRO.haluaa [[D Merja-] PRO.vAn{V}]]]]]
					Extracted head "PRO.lahtea" from PRO.vAn and created [[D Pekka] [PRO.T/fin [PRO.v [PRO.haluaa [[D Merja-] [PRO.vAn PRO.lahtea]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:207 [PRO.T/fin [<DP>:207 [PRO.v [PRO.haluaa [[D Merja-] [PRO.vAn PRO.lahtea]]]]]]]
					[D Merja-] failed to tail [ARG][CAT:INF][VAL]
					Dropping [D Merja-]
						<D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [<D Pekka>:207 [PRO.T/fin [<DP>:207 [PRO.v [PRO.haluaa [<D Merja->:208 [PRO.vAn [<DP>:208 PRO.lahtea]]]]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [v [haluaa [<D Merja-> [vAn [<D Merja-> lahtea]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:207.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:207.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:207.
					PRO.vAn has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.vAn acquired PHI:DET:DEF by phi-Agree from <DP>:208.
					phi.vAn acquired PHI:NUM:SG by phi-Agree from <DP>:208.
					phi.vAn acquired PHI:PER:3 by phi-Agree from <DP>:208.
			= [<D Pekka> [T/fin [<D Pekka> [v [haluaa [<D Merja-> [vAn [<D Merja-> lahtea]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:207 [phi.T/fin [<DP>:207 [PRO.v [PRO.haluaa [<D Merja->:208 [phi.vAn [<DP>:208 PRO.lahtea]]]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				PRO.haluaa with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [<D Merja-> [vAn [<D Merja-> lahtea]]]    (alternatives: 2. <D Pekka> 3. T/fin 4. <D Pekka> )
				PRO.lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Merja->    (alternatives: 2. vAn 3. <D Merja-> 4. <D Pekka> 5. T/fin 6. <D Pekka> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.haluaa([<D Merja-> [vAn [<D Merja-> lahtea]]])', 'PRO.lahtea(<D Merja->)', 'PRO.v(<D Pekka>)']
!--->		Tests passed (with 23/219 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v [haluaa [<D Merja-> [vAn [<D Merja-> lahtea]]]]]]]]
		Grammar: [<D Pekka>:1 [phi.T/fin [<DP>:1 [PRO.v [PRO.haluaa [<D Merja->:2 [phi.vAn [<DP>:2 PRO.lahtea]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [DP:2 [INF [__:2 V]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
vAn:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/VA/inf', 'CAT:INF', 'CAT:VA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:VA', 'PF:vAn', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
vAn:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/VA/inf', 'CAT:INF', 'CAT:VA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:VA', 'PF:vAn', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.haluaa: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]
phi.vAn: [INF, V, v, TT/fin]
(D): [D, INF, V, v, TT/fin]
(N): [N, D, INF, V, v, TT/fin]
PRO.lahtea: [V, INF, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 76
['Pekka', 'yrittaa', 'Merjan', 'lahtevan']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

9.
		Next word "yrittaa" contains multiple morphemes ['$[-V]', '$T/fin', 'yritta-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					D was opened into [D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] PRO.T/fin]

11.

		Consume "yritta"

		[[D Pekka] T/fin] + yritta
			Filtering out impossible merge sites...
			Sink "yritta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*yritta]
			=[[D Pekka] PRO.T/fin{V}]

12.
		Next word "Merjan" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$gen', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[D Pekka] PRO.T/fin{V}]

13.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D Pekka] PRO.T/fin{V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D Pekka] PRO.T/fin{V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D Pekka] PRO.T/fin{V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$gen"

			=[[D Pekka] PRO.T/fin{V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.

		Consume "$D"

			=[[D Pekka] PRO.T/fin{V}]

18.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']

		Consume "D"

		[[D Pekka] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
					PRO.yritta (yritta) is missing a mandatory complement A/inf
				Avoid [<D Pekka> [T/fin [<D Pekka> yritta]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				Prioritize [yritta D] due to complement selection.
				[[D Pekka] PRO.T/fin{V}] + D = -197]
				PRO.T/fin{V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{V}; D]
			2. [[[D Pekka] PRO.T/fin{V}]; D]
		Exploring solution number (1) =[PRO.T/fin{V} D]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.yritta" from PRO.T/fin and created [PRO.T/fin PRO.yritta]
				PRO.yritta (yritta) is missing complement -ARG
				PRO.yritta (yritta) is missing complement A/inf
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} D]]

19.

		Consume "Merja-"

		[[D Pekka] [T/fin{V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D Pekka] [PRO.T/fin{V} D{N}]]

20.
		Next word "lahtevan" contains multiple morphemes ['$VA/inf', 'lahte-']

		Consume "vAn"

		[[D Pekka] [T/fin{V} D{N}]] + vAn
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [yritta <D Merja->]]]] PRO.vAn] due to bad left branch.
				Reject [[T/fin [yritta <D Merja->]] PRO.vAn] due to bad left branch.
		Exploring solution number (1) =[D{N} vAn]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					D was opened into [D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} [[D Merja-] PRO.vAn]]]

21.

		Consume "lahtea"

		[[D Pekka] [T/fin{V} [[D Merja-] vAn]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into vAn because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.vAn*lahtea]
			=[[D Pekka] [PRO.T/fin{V} [[D Merja-] PRO.vAn{V}]]]

22.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [[D Merja-] vAn{V}]]] (1.)
		Reconstructing...
			Transferring [[D Pekka] [PRO.T/fin{V} [[D Merja-] PRO.vAn{V}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [PRO.T/fin{V} [[D Merja-] PRO.vAn{V}]]].
						Extracted head "PRO.yritta" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.yritta [[D Merja-] PRO.vAn{V}]]]]
					Extracted head "PRO.lahtea" from PRO.vAn and created [[D Pekka] [PRO.T/fin [PRO.yritta [[D Merja-] [PRO.vAn PRO.lahtea]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:212 [PRO.T/fin [<DP>:212 [PRO.yritta [[D Merja-] [PRO.vAn PRO.lahtea]]]]]]
					[D Merja-] failed to tail [ARG][CAT:INF][VAL]
					Dropping [D Merja-]
						<D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [<D Pekka>:212 [PRO.T/fin [<DP>:212 [PRO.yritta [<D Merja->:213 [PRO.vAn [<DP>:213 PRO.lahtea]]]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [yritta [<D Merja-> [vAn [<D Merja-> lahtea]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					PRO.yritta (yritta) is missing a mandatory complement -ARG
					PRO.yritta (yritta) is missing a mandatory complement A/inf
					Extraposition will be tried on [<D Pekka>:212 [PRO.T/fin [<DP>:212 [PRO.yritta [<D Merja->:213 [PRO.vAn [<DP>:213 PRO.lahtea]]]]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:212.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:212.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:212.
					PRO.vAn has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.vAn acquired PHI:DET:DEF by phi-Agree from <DP>:213.
					phi.vAn acquired PHI:NUM:SG by phi-Agree from <DP>:213.
					phi.vAn acquired PHI:PER:3 by phi-Agree from <DP>:213.
			= [<D Pekka> [T/fin [<D Pekka> [yritta [<D Merja-> [vAn [<D Merja-> lahtea]]]]]]]
		Checking LF-interface conditions.
					PRO.yritta (yritta) is missing a mandatory complement -ARG
					PRO.yritta (yritta) is missing a mandatory complement A/inf
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
yritta:['!COMP:-ARG', '!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:yritta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
vAn:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/VA/inf', 'CAT:INF', 'CAT:VA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:VA', 'PF:vAn', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.yritta: [V, TT/fin]
D: [D, V, TT/fin]
Merja-: [N, D, V, TT/fin]
phi.vAn: [INF, V, TT/fin]
(D): [D, INF, V, TT/fin]
(N): [N, D, INF, V, TT/fin]
PRO.lahtea: [V, INF, V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lahtevan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D Pekka] PRO.T/fin{V}] D]
			Transferring [[D Pekka] PRO.T/fin{V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] PRO.T/fin{V}].
					Extracted head "PRO.yritta" from PRO.T/fin and created [[D Pekka] [PRO.T/fin PRO.yritta]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:214 [PRO.T/fin [<DP>:214 PRO.yritta]]]
					= [<D Pekka> [T/fin [<D Pekka> yritta]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					PRO.yritta (yritta) is missing a mandatory complement A/inf
					Extraposition will be tried on [<D Pekka>:214 [PRO.T/fin [<DP>:214 PRO.yritta]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:214.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:214.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:214.
			=[[<D Pekka>:214 [phi.T/fin [<DP>:214 PRO.yritta]]] D]

23.

		Consume "Merja-"

		[[<D Pekka> [T/fin [<D Pekka> yritta]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[<D Pekka>:214 [phi.T/fin [<DP>:214 PRO.yritta]]] D{N}]

24.
		Next word "lahtevan" contains multiple morphemes ['$VA/inf', 'lahte-']

		Consume "vAn"

		[[<D Pekka> [T/fin [<D Pekka> yritta]]] D{N}] + vAn
			Filtering out impossible merge sites...
				Reject [[[<D Pekka> [T/fin [<D Pekka> yritta]]] <D Merja->] PRO.vAn] due to bad left branch.
		Exploring solution number (1) =[D{N} vAn]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					D was opened into [D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[<D Pekka>:214 [phi.T/fin [<DP>:214 PRO.yritta]]] [[D Merja-] PRO.vAn]]

25.

		Consume "lahtea"

		[[<D Pekka> [T/fin [<D Pekka> yritta]]] [[D Merja-] vAn]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into vAn because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.vAn*lahtea]
			=[[<D Pekka>:214 [phi.T/fin [<DP>:214 PRO.yritta]]] [[D Merja-] PRO.vAn{V}]]

26.
	>>>	Trying candidate parse [[<D Pekka> [T/fin [<D Pekka> yritta]]] [[D Merja-] vAn{V}]] (2.)
		Reconstructing...
			Transferring [[<D Pekka>:214 [phi.T/fin [<DP>:214 PRO.yritta]]] [[D Merja-] PRO.vAn{V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[<D Pekka>:214 [phi.T/fin [<DP>:214 PRO.yritta]]] [[D Merja-] PRO.vAn{V}]].
					Extracted head "PRO.lahtea" from PRO.vAn and created [[<D Pekka>:214 [phi.T/fin [<DP>:214 PRO.yritta]]] [[D Merja-] [PRO.vAn PRO.lahtea]]]
				Feature processing:
				Floater movement reconstruction:
					[D Merja-] failed to tail [ARG][CAT:INF][VAL]
					Dropping [D Merja-]
						<D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [[<D Pekka>:214 [phi.T/fin [<DP>:214 PRO.yritta]]] [<D Merja->:215 [PRO.vAn [<DP>:215 PRO.lahtea]]]]
					= [[<D Pekka> [T/fin [<D Pekka> yritta]]] [<D Merja-> [vAn [<D Merja-> lahtea]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Pekka T/fin __yritta " into memory buffer from SPEC of "PRO.vAn".
					Memory buffer: [[[D N] [TT/fin [[D N] V]]]]
					PRO.yritta (yritta) is missing a mandatory complement A/inf
				PRO.vAn has unaccetable specifier <D Merja->:215.
					Extraposition will be tried on [[<D Pekka>:214 [phi.T/fin [<DP>:214 PRO.yritta]]] [<D Merja->:215 [PRO.vAn [<DP>:215 PRO.lahtea]]]].
				Agreement reconstruction:
					PRO.vAn has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.vAn acquired PHI:DET:DEF by phi-Agree from <DP>:215.
					phi.vAn acquired PHI:NUM:SG by phi-Agree from <DP>:215.
					phi.vAn acquired PHI:PER:3 by phi-Agree from <DP>:215.
			= [[<D Pekka> [T/fin [<D Pekka> yritta]]] [<D Merja-> [vAn [<D Merja-> lahtea]]]]
		Checking LF-interface conditions.
					PRO.yritta (yritta) is missing a mandatory complement A/inf
				phi.vAn has unaccetable specifier <D Merja->:215.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
yritta:['!COMP:-ARG', '!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:yritta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
vAn:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/VA/inf', 'CAT:INF', 'CAT:VA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:VA', 'PF:vAn', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.yritta: [V, TT/fin]
D: [D]
Merja-: [N, D]
phi.vAn: [INF]
(D): [D, INF]
(N): [N, D, INF]
PRO.lahtea: [V, INF]


		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lahtevan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$gen".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "yritta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "yrittaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$nom".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 77
['Pekka', 'yrittaa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

9.
		Next word "yrittaa" contains multiple morphemes ['$[-V]', '$T/fin', 'yritta-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					D was opened into [D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] PRO.T/fin]

11.

		Consume "yritta"

		[[D Pekka] T/fin] + yritta
			Filtering out impossible merge sites...
			Sink "yritta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*yritta]
			=[[D Pekka] PRO.T/fin{V}]

12.
	>>>	Trying candidate parse [[D Pekka] T/fin{V}] (1.)
		Reconstructing...
			Transferring [[D Pekka] PRO.T/fin{V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] PRO.T/fin{V}].
					Extracted head "PRO.yritta" from PRO.T/fin and created [[D Pekka] [PRO.T/fin PRO.yritta]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:216 [PRO.T/fin [<DP>:216 PRO.yritta]]]
					= [<D Pekka> [T/fin [<D Pekka> yritta]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					PRO.yritta (yritta) is missing a mandatory complement A/inf
					Extraposition will be tried on [<D Pekka>:216 [PRO.T/fin [<DP>:216 PRO.yritta]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:216.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:216.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:216.
			= [<D Pekka> [T/fin [<D Pekka> yritta]]]
		Checking LF-interface conditions.
					PRO.yritta (yritta) is missing a mandatory complement A/inf
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
yritta:['!COMP:-ARG', '!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:yritta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.yritta: [V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "yritta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "yrittaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$nom".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 78
['Pekka', 'yrittaa', 'lahtea']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

9.
		Next word "yrittaa" contains multiple morphemes ['$[-V]', '$T/fin', 'yritta-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					D was opened into [D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] PRO.T/fin]

11.

		Consume "yritta"

		[[D Pekka] T/fin] + yritta
			Filtering out impossible merge sites...
			Sink "yritta" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*yritta]
			=[[D Pekka] PRO.T/fin{V}]

12.
		Next word "lahtea" contains multiple morphemes ['$A/inf', 'lahte-']

		Consume "A/inf"

		[[D Pekka] T/fin{V}] + A/inf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> yritta]]] A/inf] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} A/inf]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.yritta" from PRO.T/fin and created [PRO.T/fin PRO.yritta]
				PRO.yritta (yritta) is missing complement -ARG
				PRO.yritta (yritta) is missing complement A/inf
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} A/inf]]

13.

		Consume "lahtea"

		[[D Pekka] [T/fin{V} A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[[D Pekka] [PRO.T/fin{V} A/inf{V}]]

14.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} A/inf{V}]] (1.)
		Reconstructing...
			Transferring [[D Pekka] [PRO.T/fin{V} A/inf{V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [PRO.T/fin{V} A/inf{V}]].
						Extracted head "PRO.yritta" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.yritta A/inf{V}]]]
					Extracted head "PRO.lahtea" from A/inf and created [[D Pekka] [PRO.T/fin [PRO.yritta [A/inf PRO.lahtea]]]]
				Feature processing:
					A/inf has neutralized PHI-feature, will be resolved into -ARG due to PRO.yritta
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:218 [PRO.T/fin [<DP>:218 [PRO.yritta [A/inf PRO.lahtea]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [yritta [A/inf lahtea]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:218.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:218.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:218.
			= [<D Pekka> [T/fin [<D Pekka> [yritta [A/inf lahtea]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:218 [phi.T/fin [<DP>:218 [PRO.yritta [A/inf PRO.lahtea]]]]] into Conceptual-Intentional system...
				PRO.yritta with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				PRO.lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.lahtea(<D Pekka>)', 'PRO.yritta(<D Pekka>)']
!--->		Tests passed (with 14/134 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [yritta [A/inf lahtea]]]]]
		Grammar: [<D Pekka>:1 [phi.T/fin [<DP>:1 [PRO.yritta [A/inf PRO.lahtea]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [INF V]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
yritta:['!COMP:-ARG', '!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:yritta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
yritta:['!COMP:-ARG', '!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:yritta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.yritta: [V, TT/fin]
A/inf: [INF, V, TT/fin]
PRO.lahtea: [V, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 79
['John', 'wants', 'to_inf', 'leave']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
			=D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*John]
			=D{N}

8.
		Next word "wants" contains multiple morphemes ['$[-s]', '$T/fin', '$v', 'want-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					D was opened into [D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D John] T/fin]

10.

		Consume "v"

		[[D John] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D John] T/fin{v}]

11.

		Consume "want"

		[[D John] T/fin{v}] + want
			Filtering out impossible merge sites...
			Sink "want" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*want]
			=[[D John] T/fin{v,V}]

12.

		Consume "to"

		[[D John] T/fin{v,V}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				Prioritize [want to] due to complement selection.
				[[D John] T/fin{v,V}] + to = -98]
				T/fin{v,V} + to = 104]
		Ranking completed:
			1. [T/fin{v,V}; to]
			2. [[[D John] T/fin{v,V}]; to]
		Exploring solution number (1) =[T/fin{v,V} to]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.want" from PRO.v and created [T/fin [PRO.v PRO.want]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[D John] [T/fin{v,V} to]]

13.

		Consume "leave"

		[[D John] [T/fin{v,V} to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [v [want to]]]]] PRO.leave] due to bad left branch.
				Reject [[T/fin [v [want to]]] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[D John] [T/fin{v,V} [to PRO.leave]]]

14.
	>>>	Trying candidate parse [[D John] [T/fin{v,V} [to leave]]] (1.)
		Reconstructing...
			Transferring [[D John] [T/fin{v,V} [to PRO.leave]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D John] [T/fin{v,V} [to PRO.leave]]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D John] [T/fin [PRO.v{V} [to PRO.leave]]]]
						Extracted head "PRO.want" and reconstructed it = [[D John] [T/fin [PRO.v [PRO.want [to PRO.leave]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin [v [want [to leave]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D John]:62 from memory buffer into Spec of PRO.v
					Result [[D John]:62 [T/fin [(DP):62 [PRO.v [PRO.want [to PRO.leave]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):62.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):62.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):62.
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):62.
			= [[D John] [T/fin [[D John] [v [want [to leave]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D John]:62 [T/fin [(DP):62 [PRO.v [PRO.want [to PRO.leave]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin 3. [D John] )
				PRO.want with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin 3. [D John] )
				PRO.leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin 3. [D John] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.leave([D John])', 'PRO.v([D John])', 'PRO.want([D John])']
!--->		Tests passed (with 14/158 operations) <------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [v [want [to leave]]]]]]
		Grammar: [[D John]:1 [T/fin [(DP):1 [PRO.v [PRO.want [to PRO.leave]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [INF V]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.want: [V, v, TT/fin]
to: [INF, V, v, TT/fin]
PRO.leave: [V, INF, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 80
['John', 'wants', 'Mary', 'to_inf', 'leave']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
			=D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*John]
			=D{N}

8.
		Next word "wants" contains multiple morphemes ['$[-s]', '$T/fin', '$v', 'want-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					D was opened into [D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D John] T/fin]

10.

		Consume "v"

		[[D John] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D John] T/fin{v}]

11.

		Consume "want"

		[[D John] T/fin{v}] + want
			Filtering out impossible merge sites...
			Sink "want" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*want]
			=[[D John] T/fin{v,V}]

12.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D John] T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D John] T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D John] T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D John] T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D John] T/fin{v,V}]

17.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D John] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				[[D John] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 104]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D John] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.want" from PRO.v and created [T/fin [PRO.v PRO.want]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[D John] [T/fin{v,V} D]]

18.

		Consume "Mary"

		[[D John] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[[D John] [T/fin{v,V} D{N}]]

19.

		Consume "to"

		[[D John] [T/fin{v,V} D{N}]] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				Avoid TT/finP as SPEC, to.
				An EPP-head "T/fin" lacks specifier but needs one.
				Avoid [T/fin [v [want [D Mary]]]] as left branch because it constitutes illicit structure.
				Avoid D{N} because it could break words.
					D was opened into [D Mary].
				Feature processing:
				Floater movement reconstruction:
					= [D Mary]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
				Prioritize D{N} because all solutions were negative.
				[[D John] [T/fin{v,V} D{N}]] + to = -98]
				[T/fin{v,V} D{N}] + to = -194]
				D{N} + to = 106]
		Ranking completed:
			1. [D{N}; to]
			2. [[[D John] [T/fin{v,V} D{N}]]; to]
			3. [[T/fin{v,V} D{N}]; to]
		Exploring solution number (1) =[D{N} to]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Mary" from D and created [D Mary]
					Reconstructing head movement for D{N}.
					Extracted head "Mary" from D and created [D Mary]
					D was opened into [D Mary].
				Feature processing:
				Floater movement reconstruction:
					= [D Mary]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D John] [T/fin{v,V} [[D Mary] to]]]

20.

		Consume "leave"

		[[D John] [T/fin{v,V} [[D Mary] to]]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [v [want [[D Mary] to]]]]]] PRO.leave] due to bad left branch.
				Reject [[T/fin [v [want [[D Mary] to]]]] PRO.leave] due to bad left branch.
				Reject [[[D Mary] to] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[D John] [T/fin{v,V} [[D Mary] [to PRO.leave]]]]

21.
	>>>	Trying candidate parse [[D John] [T/fin{v,V} [[D Mary] [to leave]]]] (1.)
		Reconstructing...
			Transferring [[D John] [T/fin{v,V} [[D Mary] [to PRO.leave]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D John] [T/fin{v,V} [[D Mary] [to PRO.leave]]]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D John] [T/fin [PRO.v{V} [[D Mary] [to PRO.leave]]]]]
						Extracted head "PRO.want" and reconstructed it = [[D John] [T/fin [PRO.v [PRO.want [[D Mary] [to PRO.leave]]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin [v [want [[D Mary] [to leave]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D John]:68 from memory buffer into Spec of PRO.v
					Result [[D John]:68 [T/fin [(DP):68 [PRO.v [PRO.want [[D Mary] [to PRO.leave]]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):68.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):68.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):68.
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):68.
			= [[D John] [T/fin [[D John] [v [want [[D Mary] [to leave]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D John]:68 [T/fin [(DP):68 [PRO.v [PRO.want [[D Mary] [to PRO.leave]]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin 3. [D John] )
				PRO.want with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin 3. [D John] )
				PRO.leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: 2. [D John] 3. T/fin 4. [D John] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.leave([D Mary])', 'PRO.v([D John])', 'PRO.want([D John])']
!--->		Tests passed (with 21/229 operations) <------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [v [want [[D Mary] [to leave]]]]]]]
		Grammar: [[D John]:1 [T/fin [(DP):1 [PRO.v [PRO.want [[D Mary] [to PRO.leave]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [DP [INF V]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.want: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]
to: [INF, V, v, TT/fin]
PRO.leave: [V, INF, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 81
['John', 'tries', 'to_inf', 'leave']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
			=D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*John]
			=D{N}

8.
		Next word "tries" contains multiple morphemes ['$[-s]', '$T/fin', 'try-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					D was opened into [D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D John] T/fin]

10.

		Consume "try"

		[[D John] T/fin] + try
			Filtering out impossible merge sites...
			Sink "try" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*try]
			=[[D John] T/fin{V}]

11.

		Consume "to"

		[[D John] T/fin{V}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
					PRO.try (try) is missing a mandatory complement TO/inf
				Avoid [[D John] [T/fin [[D John] try]]] as left branch because it constitutes illicit structure.
				Prioritize [try to] due to complement selection.
				[[D John] T/fin{V}] + to = -197]
				T/fin{V} + to = 104]
		Ranking completed:
			1. [T/fin{V}; to]
			2. [[[D John] T/fin{V}]; to]
		Exploring solution number (1) =[T/fin{V} to]
			Transferring T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{V}.
					Extracted head "PRO.try" from T/fin and created [T/fin PRO.try]
				An EPP-head "T/fin" lacks specifier but needs one.
				PRO.try (try) is missing complement -ARG
				PRO.try (try) is missing complement TO/inf
					T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				A phi-marked head "T/fin{V}" lacks complement
				An EPP-head "T/fin{V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{V}.
				Agreement reconstruction:
			=[[D John] [T/fin{V} to]]

12.

		Consume "leave"

		[[D John] [T/fin{V} to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [try to]]]] PRO.leave] due to bad left branch.
				Reject [[T/fin [try to]] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[D John] [T/fin{V} [to PRO.leave]]]

13.
	>>>	Trying candidate parse [[D John] [T/fin{V} [to leave]]] (1.)
		Reconstructing...
			Transferring [[D John] [T/fin{V} [to PRO.leave]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D John] [T/fin{V} [to PRO.leave]]].
						Extracted head "PRO.try" and reconstructed it = [[D John] [T/fin [PRO.try [to PRO.leave]]]]
				Feature processing:
					to has neutralized PHI-feature, will be resolved into -ARG due to PRO.try
				Floater movement reconstruction:
					= [[D John] [T/fin [try [to leave]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D John]:72 from memory buffer into Spec of PRO.try
					Result [[D John]:72 [T/fin [(DP):72 [PRO.try [to PRO.leave]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):72.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):72.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):72.
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):72.
			= [[D John] [T/fin [[D John] [try [to leave]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D John]:72 [T/fin [(DP):72 [PRO.try [to PRO.leave]]]]] into Conceptual-Intentional system...
				PRO.try with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin 3. [D John] )
				PRO.leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin 3. [D John] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.leave([D John])', 'PRO.try([D John])']
!--->		Tests passed (with 13/151 operations) <------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [try [to leave]]]]]
		Grammar: [[D John]:1 [T/fin [(DP):1 [PRO.try [to PRO.leave]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [INF V]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
try:['!COMP:-ARG', '!COMP:TO/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:try', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
try:['!COMP:-ARG', '!COMP:TO/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:try', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.try: [V, TT/fin]
to: [INF, V, TT/fin]
PRO.leave: [V, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 82
['John', 'tries', 'Mary', 'to_inf', 'leave']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
			=D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*John]
			=D{N}

8.
		Next word "tries" contains multiple morphemes ['$[-s]', '$T/fin', 'try-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					D was opened into [D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D John] T/fin]

10.

		Consume "try"

		[[D John] T/fin] + try
			Filtering out impossible merge sites...
			Sink "try" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*try]
			=[[D John] T/fin{V}]

11.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D John] T/fin{V}]

12.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D John] T/fin{V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D John] T/fin{V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D John] T/fin{V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D John] T/fin{V}]

16.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D John] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
					PRO.try (try) is missing a mandatory complement TO/inf
				Avoid [[D John] [T/fin [[D John] try]]] as left branch because it constitutes illicit structure.
				Prioritize [T/fin{V} D] due to complement selection.
				Prioritize [try D] due to complement selection.
				[[D John] T/fin{V}] + D = -197]
				T/fin{V} + D = 206]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D John] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{V}.
					Extracted head "PRO.try" from T/fin and created [T/fin PRO.try]
				An EPP-head "T/fin" lacks specifier but needs one.
				PRO.try (try) is missing complement -ARG
				PRO.try (try) is missing complement TO/inf
					T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				A phi-marked head "T/fin{V}" lacks complement
				An EPP-head "T/fin{V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{V}.
				Agreement reconstruction:
			=[[D John] [T/fin{V} D]]

17.

		Consume "Mary"

		[[D John] [T/fin{V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[[D John] [T/fin{V} D{N}]]

18.

		Consume "to"

		[[D John] [T/fin{V} D{N}]] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
					PRO.try (try) is missing a mandatory complement TO/inf
				Avoid [[D John] [T/fin [[D John] [try [D Mary]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, to.
				An EPP-head "T/fin" lacks specifier but needs one.
					PRO.try (try) is missing a mandatory complement TO/inf
				Avoid [T/fin [try [D Mary]]] as left branch because it constitutes illicit structure.
				Avoid D{N} because it could break words.
					D was opened into [D Mary].
				Feature processing:
				Floater movement reconstruction:
					= [D Mary]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
				Prioritize D{N} because all solutions were negative.
				[[D John] [T/fin{V} D{N}]] + to = -197]
				[T/fin{V} D{N}] + to = -194]
				D{N} + to = 106]
		Ranking completed:
			1. [D{N}; to]
			2. [[T/fin{V} D{N}]; to]
			3. [[[D John] [T/fin{V} D{N}]]; to]
		Exploring solution number (1) =[D{N} to]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Mary" from D and created [D Mary]
					Reconstructing head movement for D{N}.
					Extracted head "Mary" from D and created [D Mary]
					D was opened into [D Mary].
				Feature processing:
				Floater movement reconstruction:
					= [D Mary]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D John] [T/fin{V} [[D Mary] to]]]

19.

		Consume "leave"

		[[D John] [T/fin{V} [[D Mary] to]]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [try [[D Mary] to]]]]] PRO.leave] due to bad left branch.
				Reject [[T/fin [try [[D Mary] to]]] PRO.leave] due to bad left branch.
				Reject [[[D Mary] to] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[D John] [T/fin{V} [[D Mary] [to PRO.leave]]]]

20.
	>>>	Trying candidate parse [[D John] [T/fin{V} [[D Mary] [to leave]]]] (1.)
		Reconstructing...
			Transferring [[D John] [T/fin{V} [[D Mary] [to PRO.leave]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D John] [T/fin{V} [[D Mary] [to PRO.leave]]]].
						Extracted head "PRO.try" and reconstructed it = [[D John] [T/fin [PRO.try [[D Mary] [to PRO.leave]]]]]
				Feature processing:
					to has neutralized PHI-feature, will be resolved into -ARG due to PRO.try
				Floater movement reconstruction:
					= [[D John] [T/fin [try [[D Mary] [to leave]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D John]:78 from memory buffer into Spec of PRO.try
					Result [[D John]:78 [T/fin [(DP):78 [PRO.try [[D Mary] [to PRO.leave]]]]]]
				to (to) has a specifier [D Mary] but is marked for -EPP behavior.
					Extraposition will be tried on [[D John]:78 [T/fin [(DP):78 [PRO.try [[D Mary] [to PRO.leave]]]]]].
						<to PRO.leave> was made an adjunct.
					<to PRO.leave> was made adjunct by an extraposition rule.
					PRO.try (try) is missing a mandatory complement TO/inf
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):78.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):78.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):78.
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):78.
			= [[D John] [T/fin [[D John] [try [[D Mary] <to leave>]]]]]
		Checking LF-interface conditions.
					PRO.try (try) is missing a mandatory complement TO/inf
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
try:['!COMP:-ARG', '!COMP:TO/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:try', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.try: [V, TT/fin]
D: [D, V, TT/fin]
Mary: [N, D, V, TT/fin]
to: [INF, V, TT/fin]
PRO.leave: [V, INF, V, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} D{N}] to]
			Transferring [T/fin{V} D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [T/fin{V} D{N}].
						Extracted head "PRO.try" and reconstructed it = [T/fin [PRO.try D{N}]]
					Extracted head "Mary" from D and created [T/fin [PRO.try [D Mary]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [try [D Mary]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
					PRO.try (try) is missing a mandatory complement TO/inf
					Extraposition will be tried on [T/fin [PRO.try [D Mary]]].
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from [D Mary].
					T/fin acquired PHI:GEN:F by phi-Agree from [D Mary].
					T/fin acquired PHI:NUM:SG by phi-Agree from [D Mary].
					T/fin acquired PHI:PER:3 by phi-Agree from [D Mary].
			=[[D John] [[T/fin [PRO.try [D Mary]]] to]]

21.

		Consume "leave"

		[[D John] [[T/fin [try [D Mary]]] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [[T/fin [try [D Mary]]] to]] PRO.leave] due to bad left branch.
				Reject [[[T/fin [try [D Mary]]] to] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[D John] [[T/fin [PRO.try [D Mary]]] [to PRO.leave]]]

22.
	>>>	Trying candidate parse [[D John] [[T/fin [try [D Mary]]] [to leave]]] (2.)
		Reconstructing...
			Transferring [[D John] [[T/fin [PRO.try [D Mary]]] [to PRO.leave]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D John] [[T/fin [PRO.try [D Mary]]] [to PRO.leave]]].
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [[T/fin [try [D Mary]]] [to leave]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
					PRO.try (try) is missing a mandatory complement TO/inf
				to has unaccetable specifier [T/fin [PRO.try [D Mary]]].
					Extraposition will be tried on [[D John] [[T/fin [PRO.try [D Mary]]] [to PRO.leave]]].
				Agreement reconstruction:
			= [[D John] [[T/fin [try [D Mary]]] [to leave]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
					PRO.try (try) is missing a mandatory complement TO/inf
				to has unaccetable specifier [T/fin [PRO.try [D Mary]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
try:['!COMP:-ARG', '!COMP:TO/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:try', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
John: [N, D]
T/fin: [TT/fin]
PRO.try: [V, TT/fin]
D: [D, V, TT/fin]
Mary: [N, D, V, TT/fin]
to: [INF]
PRO.leave: [V, INF]


		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D John] [T/fin{V} D{N}]] to]
			Transferring [[D John] [T/fin{V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D John] [T/fin{V} D{N}]].
						Extracted head "PRO.try" and reconstructed it = [[D John] [T/fin [PRO.try D{N}]]]
					Extracted head "Mary" from D and created [[D John] [T/fin [PRO.try [D Mary]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin [try [D Mary]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D John]:79 from memory buffer into Spec of PRO.try
					Result [[D John]:79 [T/fin [(DP):79 [PRO.try [D Mary]]]]]
					PRO.try (try) is missing a mandatory complement TO/inf
					Extraposition will be tried on [[D John]:79 [T/fin [(DP):79 [PRO.try [D Mary]]]]].
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):79.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):79.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):79.
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):79.
			=[[[D John]:79 [T/fin [(DP):79 [PRO.try [D Mary]]]]] to]

23.

		Consume "leave"

		[[[D John] [T/fin [[D John] [try [D Mary]]]]] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [try [D Mary]]]]] to] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[[D John]:79 [T/fin [(DP):79 [PRO.try [D Mary]]]]] [to PRO.leave]]

24.
	>>>	Trying candidate parse [[[D John] [T/fin [[D John] [try [D Mary]]]]] [to leave]] (3.)
		Reconstructing...
			Transferring [[[D John]:79 [T/fin [(DP):79 [PRO.try [D Mary]]]]] [to PRO.leave]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[D John]:79 [T/fin [(DP):79 [PRO.try [D Mary]]]]] [to PRO.leave]].
				Feature processing:
				Floater movement reconstruction:
					= [[[D John] [T/fin [[D John] [try [D Mary]]]]] [to leave]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					PRO.try (try) is missing a mandatory complement TO/inf
				to has unaccetable specifier [[D John]:79 [T/fin [(DP):79 [PRO.try [D Mary]]]]].
					Extraposition will be tried on [[[D John]:79 [T/fin [(DP):79 [PRO.try [D Mary]]]]] [to PRO.leave]].
				Agreement reconstruction:
			= [[[D John] [T/fin [[D John] [try [D Mary]]]]] [to leave]]
		Checking LF-interface conditions.
					PRO.try (try) is missing a mandatory complement TO/inf
				to has unaccetable specifier [[D John]:79 [T/fin [(DP):79 [PRO.try [D Mary]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
try:['!COMP:-ARG', '!COMP:TO/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:try', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.try: [V, TT/fin]
D: [D, V, TT/fin]
Mary: [N, D, V, TT/fin]
to: [INF]
PRO.leave: [V, INF]


		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D John] T/fin{V}] D]
			Transferring [[D John] T/fin{V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D John] T/fin{V}].
					Extracted head "PRO.try" from T/fin and created [[D John] [T/fin PRO.try]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin try]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D John]:80 from memory buffer into Spec of PRO.try
					Result [[D John]:80 [T/fin [(DP):80 PRO.try]]]
					PRO.try (try) is missing a mandatory complement TO/inf
					Extraposition will be tried on [[D John]:80 [T/fin [(DP):80 PRO.try]]].
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):80.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):80.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):80.
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):80.
			=[[[D John]:80 [T/fin [(DP):80 PRO.try]]] D]

25.

		Consume "Mary"

		[[[D John] [T/fin [[D John] try]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[[[D John]:80 [T/fin [(DP):80 PRO.try]]] D{N}]

26.

		Consume "to"

		[[[D John] [T/fin [[D John] try]]] D{N}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
					PRO.try (try) is missing a mandatory complement TO/inf
				Avoid [[[D John] [T/fin [[D John] try]]] <D Mary>] as left branch because it constitutes illicit structure.
				[[[D John]:80 [T/fin [(DP):80 PRO.try]]] D{N}] + to = -98]
				D{N} + to = 2]
		Ranking completed:
			1. [D{N}; to]
			2. [[[[D John]:80 [T/fin [(DP):80 PRO.try]]] D{N}]; to]
		Exploring solution number (1) =[D{N} to]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Mary" from D and created [D Mary]
					Reconstructing head movement for D{N}.
					Extracted head "Mary" from D and created [D Mary]
					D was opened into [D Mary].
				Feature processing:
				Floater movement reconstruction:
					= [D Mary]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[[D John]:80 [T/fin [(DP):80 PRO.try]]] [[D Mary] to]]

27.

		Consume "leave"

		[[[D John] [T/fin [[D John] try]]] [[D Mary] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] try]]] [[D Mary] to]] PRO.leave] due to bad left branch.
				Reject [[[D Mary] to] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[[D John]:80 [T/fin [(DP):80 PRO.try]]] [[D Mary] [to PRO.leave]]]

28.
	>>>	Trying candidate parse [[[D John] [T/fin [[D John] try]]] [[D Mary] [to leave]]] (4.)
		Reconstructing...
			Transferring [[[D John]:80 [T/fin [(DP):80 PRO.try]]] [[D Mary] [to PRO.leave]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[D John]:80 [T/fin [(DP):80 PRO.try]]] [[D Mary] [to PRO.leave]]].
				Feature processing:
				Floater movement reconstruction:
					= [[[D John] [T/fin [[D John] try]]] [[D Mary] [to leave]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					PRO.try (try) is missing a mandatory complement TO/inf
				to has unaccetable specifier [D Mary].
					Extraposition will be tried on [[[D John]:80 [T/fin [(DP):80 PRO.try]]] [[D Mary] [to PRO.leave]]].
				Agreement reconstruction:
			= [[[D John] [T/fin [[D John] try]]] [[D Mary] [to leave]]]
		Checking LF-interface conditions.
					PRO.try (try) is missing a mandatory complement TO/inf
				to has unaccetable specifier [D Mary].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
try:['!COMP:-ARG', '!COMP:TO/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:try', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.try: [V, TT/fin]
D: [D]
Mary: [N, D]
to: [INF]
PRO.leave: [V, INF]


		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D John]:80 [T/fin [(DP):80 PRO.try]]] D{N}] to]
			Transferring [[[D John]:80 [T/fin [(DP):80 PRO.try]]] D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[D John]:80 [T/fin [(DP):80 PRO.try]]] D{N}].
					Extracted head "Mary" from D and created [[[D John]:80 [T/fin [(DP):80 PRO.try]]] [D Mary]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D John] [T/fin [[D John] try]]] [D Mary]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					PRO.try (try) is missing a mandatory complement TO/inf
				D has unaccetable specifier [[D John]:80 [T/fin [(DP):80 PRO.try]]].
					Extraposition will be tried on [[[D John]:80 [T/fin [(DP):80 PRO.try]]] [D Mary]].
						<D Mary> was made an adjunct.
					<D Mary> was made adjunct by an extraposition rule.
					PRO.try (try) is missing a mandatory complement TO/inf
					The structure is still illicit! Try phi-tailing as a last resort?
				Agreement reconstruction:
			=[[[[D John]:80 [T/fin [(DP):80 PRO.try]]] <D Mary>] to]

29.

		Consume "leave"

		[[[[D John] [T/fin [[D John] try]]] <D Mary>] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[[D John] [T/fin [[D John] try]]] <D Mary>] to] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[[[D John]:80 [T/fin [(DP):80 PRO.try]]] <D Mary>] [to PRO.leave]]

30.
	>>>	Trying candidate parse [[[[D John] [T/fin [[D John] try]]] <D Mary>] [to leave]] (5.)
		Reconstructing...
			Transferring [[[[D John]:80 [T/fin [(DP):80 PRO.try]]] <D Mary>] [to PRO.leave]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[[D John]:80 [T/fin [(DP):80 PRO.try]]] <D Mary>] [to PRO.leave]].
				Feature processing:
				Floater movement reconstruction:
					= [[[[D John] [T/fin [[D John] try]]] <D Mary>] [to leave]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					PRO.try (try) is missing a mandatory complement TO/inf
				to has unaccetable specifier [[[D John]:80 [T/fin [(DP):80 PRO.try]]] <D Mary>].
					Extraposition will be tried on [[[[D John]:80 [T/fin [(DP):80 PRO.try]]] <D Mary>] [to PRO.leave]].
				Agreement reconstruction:
			= [[[[D John] [T/fin [[D John] try]]] <D Mary>] [to leave]]
		Checking LF-interface conditions.
					PRO.try (try) is missing a mandatory complement TO/inf
				to has unaccetable specifier [[[D John]:80 [T/fin [(DP):80 PRO.try]]] <D Mary>].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
try:['!COMP:-ARG', '!COMP:TO/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:try', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:PHI:DET:DEF,PHI:GEN:F,PHI:HUM:HUM,PHI:NUM:SG,PHI:PER:3,!COMP:*', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.try: [V, TT/fin]
D: [D]
Mary: [N, D]
to: [INF]
PRO.leave: [V, INF]


		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "try-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "tries".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 83
['John', 'asks', 'Mary', 'to_inf', 'leave']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
			=D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*John]
			=D{N}

8.
		Next word "asks" contains multiple morphemes ['$[-s]', '$T/fin', '$v', 'ask-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					D was opened into [D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D John] T/fin]

10.

		Consume "v"

		[[D John] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D John] T/fin{v}]

11.
		Ambiguous lexical item "ask-" detected.

		Consume "ask"

		[[D John] T/fin{v}] + ask
			Filtering out impossible merge sites...
			Sink "ask" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*ask]
			=[[D John] T/fin{v,V}]

12.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D John] T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D John] T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D John] T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D John] T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D John] T/fin{v,V}]

17.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D John] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ask D] due to complement selection.
				[[D John] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D John] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v{V}" from T/fin and created [T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.ask" from PRO.v and created [T/fin [PRO.v PRO.ask]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[D John] [T/fin{v,V} D]]

18.

		Consume "Mary"

		[[D John] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[[D John] [T/fin{v,V} D{N}]]

19.

		Consume "to"

		[[D John] [T/fin{v,V} D{N}]] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				Avoid TT/finP as SPEC, to.
				An EPP-head "T/fin" lacks specifier but needs one.
				Avoid [T/fin [v [ask [D Mary]]]] as left branch because it constitutes illicit structure.
				Avoid D{N} because it could break words.
					D was opened into [D Mary].
				Feature processing:
				Floater movement reconstruction:
					= [D Mary]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
				Prioritize D{N} because all solutions were negative.
				[[D John] [T/fin{v,V} D{N}]] + to = -98]
				[T/fin{v,V} D{N}] + to = -194]
				D{N} + to = 106]
		Ranking completed:
			1. [D{N}; to]
			2. [[[D John] [T/fin{v,V} D{N}]]; to]
			3. [[T/fin{v,V} D{N}]; to]
		Exploring solution number (1) =[D{N} to]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Mary" from D and created [D Mary]
					Reconstructing head movement for D{N}.
					Extracted head "Mary" from D and created [D Mary]
					D was opened into [D Mary].
				Feature processing:
				Floater movement reconstruction:
					= [D Mary]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D John] [T/fin{v,V} [[D Mary] to]]]

20.

		Consume "leave"

		[[D John] [T/fin{v,V} [[D Mary] to]]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [v [ask [[D Mary] to]]]]]] PRO.leave] due to bad left branch.
				Reject [[T/fin [v [ask [[D Mary] to]]]] PRO.leave] due to bad left branch.
				Reject [[[D Mary] to] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[D John] [T/fin{v,V} [[D Mary] [to PRO.leave]]]]

21.
	>>>	Trying candidate parse [[D John] [T/fin{v,V} [[D Mary] [to leave]]]] (1.)
		Reconstructing...
			Transferring [[D John] [T/fin{v,V} [[D Mary] [to PRO.leave]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D John] [T/fin{v,V} [[D Mary] [to PRO.leave]]]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D John] [T/fin [PRO.v{V} [[D Mary] [to PRO.leave]]]]]
						Extracted head "PRO.ask" and reconstructed it = [[D John] [T/fin [PRO.v [PRO.ask [[D Mary] [to PRO.leave]]]]]]
				Feature processing:
					to has neutralized PHI-feature, will be resolved into -ARG due to PRO.ask
				Floater movement reconstruction:
					= [[D John] [T/fin [v [ask [[D Mary] [to leave]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D John]:86 from memory buffer into Spec of PRO.v
					Result [[D John]:86 [T/fin [(DP):86 [PRO.v [PRO.ask [[D Mary] [to PRO.leave]]]]]]]
				to (to) has a specifier [D Mary] but is marked for -EPP behavior.
					Extraposition will be tried on [[D John]:86 [T/fin [(DP):86 [PRO.v [PRO.ask [[D Mary] [to PRO.leave]]]]]]].
						<to PRO.leave> was made an adjunct.
					<to PRO.leave> was made adjunct by an extraposition rule.
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):86.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):86.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):86.
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):86.
			= [[D John] [T/fin [[D John] [v [ask [[D Mary] <to leave>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D John]:86 [T/fin [(DP):86 [PRO.v [PRO.ask [[D Mary] <to PRO.leave>]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin 3. [D John] )
				PRO.ask with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D Mary] <to leave>]    (alternatives: 2. [D John] 3. T/fin 4. [D John] )
				PRO.leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin 3. [D John] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.ask([[D Mary] <to leave>])', 'PRO.leave([D John])', 'PRO.v([D John])']
!--->		Tests passed (with 21/236 operations) <------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [v [ask [[D Mary] <to leave>]]]]]]
		Grammar: [[D John]:1 [T/fin [(DP):1 [PRO.v [PRO.ask [[D Mary] <to PRO.leave>]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [[D N] INFP]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
ask:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:ask', 'PF:ask', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
ask:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:ask', 'PF:ask', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.ask: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]
to: [INF, V, v, TT/fin]
PRO.leave: [V, INF, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "ask"

		[[D John] T/fin{v}] + ask
			Filtering out impossible merge sites...
			Sink "ask" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*ask]


\========================================================================
# 84
['John', 'persuades', 'Mary', 'to_inf', 'leave']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
			=D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*John]
			=D{N}

8.
		Next word "persuades" contains multiple morphemes ['$[-s]', '$T/fin', '$v*', 'persuade-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					D was opened into [D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D John] T/fin]

10.

		Consume "v*"

		[[D John] T/fin] + v*
			Filtering out impossible merge sites...
			Sink "v*" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v*]
			=[[D John] T/fin{v}]

11.

		Consume "persuade"

		[[D John] T/fin{v}] + persuade
			Filtering out impossible merge sites...
			Sink "persuade" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*persuade]
			=[[D John] T/fin{v,V}]

12.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D John] T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D John] T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D John] T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D John] T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D John] T/fin{v,V}]

17.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D John] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				[[D John] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 104]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D John] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v*{V}" from T/fin and created [T/fin PRO.v*{V}]
					Reconstructing head movement for PRO.v*{V}.
					Extracted head "PRO.persuade" from PRO.v* and created [T/fin [PRO.v* PRO.persuade]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[D John] [T/fin{v,V} D]]

18.

		Consume "Mary"

		[[D John] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[[D John] [T/fin{v,V} D{N}]]

19.

		Consume "to"

		[[D John] [T/fin{v,V} D{N}]] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				Avoid TT/finP as SPEC, to.
				An EPP-head "T/fin" lacks specifier but needs one.
				Avoid [T/fin [v* [persuade [D Mary]]]] as left branch because it constitutes illicit structure.
				Avoid D{N} because it could break words.
					D was opened into [D Mary].
				Feature processing:
				Floater movement reconstruction:
					= [D Mary]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
				Prioritize D{N} because all solutions were negative.
				[[D John] [T/fin{v,V} D{N}]] + to = -98]
				[T/fin{v,V} D{N}] + to = -194]
				D{N} + to = 106]
		Ranking completed:
			1. [D{N}; to]
			2. [[[D John] [T/fin{v,V} D{N}]]; to]
			3. [[T/fin{v,V} D{N}]; to]
		Exploring solution number (1) =[D{N} to]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Mary" from D and created [D Mary]
					Reconstructing head movement for D{N}.
					Extracted head "Mary" from D and created [D Mary]
					D was opened into [D Mary].
				Feature processing:
				Floater movement reconstruction:
					= [D Mary]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D John] [T/fin{v,V} [[D Mary] to]]]

20.

		Consume "leave"

		[[D John] [T/fin{v,V} [[D Mary] to]]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [v* [persuade [[D Mary] to]]]]]] PRO.leave] due to bad left branch.
				Reject [[T/fin [v* [persuade [[D Mary] to]]]] PRO.leave] due to bad left branch.
				Reject [[[D Mary] to] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[D John] [T/fin{v,V} [[D Mary] [to PRO.leave]]]]

21.
	>>>	Trying candidate parse [[D John] [T/fin{v,V} [[D Mary] [to leave]]]] (1.)
		Reconstructing...
			Transferring [[D John] [T/fin{v,V} [[D Mary] [to PRO.leave]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D John] [T/fin{v,V} [[D Mary] [to PRO.leave]]]].
						Extracted head "PRO.v*{V}" and reconstructed it = [[D John] [T/fin [PRO.v*{V} [[D Mary] [to PRO.leave]]]]]
						Extracted head "PRO.persuade" and reconstructed it = [[D John] [T/fin [PRO.v* [PRO.persuade [[D Mary] [to PRO.leave]]]]]]
				Feature processing:
					to has neutralized PHI-feature, will be resolved into +ARG due to PRO.persuade
				Floater movement reconstruction:
					= [[D John] [T/fin [v* [persuade [[D Mary] [to leave]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D John]:92 from memory buffer into Spec of PRO.v*
					Result [[D John]:92 [T/fin [(DP):92 [PRO.v* [PRO.persuade [[D Mary] [to PRO.leave]]]]]]]
					Moving "D Mary " into memory buffer from SPEC of "to".
					Memory buffer: [[D N]]
					Dropping constituent [D Mary]:93 from memory buffer into Spec of PRO.leave
					Result [[D John]:92 [T/fin [(DP):92 [PRO.v* [PRO.persuade [[D Mary]:93 [to [(DP):93 PRO.leave]]]]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):92.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):92.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):92.
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):92.
			= [[D John] [T/fin [[D John] [v* [persuade [[D Mary] [to [[D Mary] leave]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D John]:92 [T/fin [(DP):92 [PRO.v* [PRO.persuade [[D Mary]:93 [to [(DP):93 PRO.leave]]]]]]]] into Conceptual-Intentional system...
				PRO.v* with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin 3. [D John] )
				PRO.persuade with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					Generic
				PRO.leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: 2. [D Mary] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Generic', 'PRO.leave([D Mary])', 'PRO.v*([D John])']
!--->		Tests passed (with 21/234 operations) <------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [v* [persuade [[D Mary] [to [[D Mary] leave]]]]]]]]
		Grammar: [[D John]:1 [T/fin [(DP):1 [PRO.v* [PRO.persuade [[D Mary]:2 [to [(DP):2 PRO.leave]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [DP:2 [INF [__:2 V]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:EN', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
persuade:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:EN', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
persuade:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v*: [v, TT/fin]
PRO.persuade: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Mary: [N, D, V, v, TT/fin]
to: [INF, V, v, TT/fin]
(D): [D, INF, V, v, TT/fin]
(N): [N, D, INF, V, v, TT/fin]
PRO.leave: [V, INF, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 85
['John', 'persuades', 'to_inf', 'leave']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
			=D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*John]
			=D{N}

8.
		Next word "persuades" contains multiple morphemes ['$[-s]', '$T/fin', '$v*', 'persuade-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					D was opened into [D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D John] T/fin]

10.

		Consume "v*"

		[[D John] T/fin] + v*
			Filtering out impossible merge sites...
			Sink "v*" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v*]
			=[[D John] T/fin{v}]

11.

		Consume "persuade"

		[[D John] T/fin{v}] + persuade
			Filtering out impossible merge sites...
			Sink "persuade" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*persuade]
			=[[D John] T/fin{v,V}]

12.

		Consume "to"

		[[D John] T/fin{v,V}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				Prioritize [persuade to] due to complement selection.
				[[D John] T/fin{v,V}] + to = -98]
				T/fin{v,V} + to = 104]
		Ranking completed:
			1. [T/fin{v,V}; to]
			2. [[[D John] T/fin{v,V}]; to]
		Exploring solution number (1) =[T/fin{v,V} to]
			Transferring T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{v,V}.
					Extracted head "PRO.v*{V}" from T/fin and created [T/fin PRO.v*{V}]
					Reconstructing head movement for PRO.v*{V}.
					Extracted head "PRO.persuade" from PRO.v* and created [T/fin [PRO.v* PRO.persuade]]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "T/fin{v,V}" lacks complement
				An EPP-head "T/fin{v,V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{v,V}.
				Agreement reconstruction:
			=[[D John] [T/fin{v,V} to]]

13.

		Consume "leave"

		[[D John] [T/fin{v,V} to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [v* [persuade to]]]]] PRO.leave] due to bad left branch.
				Reject [[T/fin [v* [persuade to]]] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[D John] [T/fin{v,V} [to PRO.leave]]]

14.
	>>>	Trying candidate parse [[D John] [T/fin{v,V} [to leave]]] (1.)
		Reconstructing...
			Transferring [[D John] [T/fin{v,V} [to PRO.leave]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D John] [T/fin{v,V} [to PRO.leave]]].
						Extracted head "PRO.v*{V}" and reconstructed it = [[D John] [T/fin [PRO.v*{V} [to PRO.leave]]]]
						Extracted head "PRO.persuade" and reconstructed it = [[D John] [T/fin [PRO.v* [PRO.persuade [to PRO.leave]]]]]
				Feature processing:
					to has neutralized PHI-feature, will be resolved into +ARG due to PRO.persuade
				Floater movement reconstruction:
					= [[D John] [T/fin [v* [persuade [to leave]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D John]:97 from memory buffer into Spec of PRO.v*
					Result [[D John]:97 [T/fin [(DP):97 [PRO.v* [PRO.persuade [to PRO.leave]]]]]]
				An EPP-head "to" lacks specifier but needs one.
					Extraposition will be tried on [[D John]:97 [T/fin [(DP):97 [PRO.v* [PRO.persuade [to PRO.leave]]]]]].
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):97.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):97.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):97.
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):97.
			= [[D John] [T/fin [[D John] [v* [persuade [to leave]]]]]]
		Checking LF-interface conditions.
				An EPP-head "to" lacks specifier but needs one.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:EN', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
persuade:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'VAL']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v*: [v, TT/fin]
PRO.persuade: [V, v, TT/fin]
to: [INF, V, v, TT/fin]
PRO.leave: [V, INF, V, v, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D John] T/fin{v,V}] to]
			Transferring [[D John] T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D John] T/fin{v,V}].
					Extracted head "PRO.v*{V}" from T/fin and created [[D John] [T/fin PRO.v*{V}]]
					Reconstructing head movement for PRO.v*{V}.
					Extracted head "PRO.persuade" from PRO.v* and created [[D John] [T/fin [PRO.v* PRO.persuade]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D John] [T/fin [v* persuade]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D John]:98 from memory buffer into Spec of PRO.v*
					Result [[D John]:98 [T/fin [(DP):98 [PRO.v* PRO.persuade]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):98.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):98.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):98.
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):98.
			=[[[D John]:98 [T/fin [(DP):98 [PRO.v* PRO.persuade]]]] to]

15.

		Consume "leave"

		[[[D John] [T/fin [[D John] [v* persuade]]]] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [v* persuade]]]] to] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[[D John]:98 [T/fin [(DP):98 [PRO.v* PRO.persuade]]]] [to PRO.leave]]

16.
	>>>	Trying candidate parse [[[D John] [T/fin [[D John] [v* persuade]]]] [to leave]] (2.)
		Reconstructing...
			Transferring [[[D John]:98 [T/fin [(DP):98 [PRO.v* PRO.persuade]]]] [to PRO.leave]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[D John]:98 [T/fin [(DP):98 [PRO.v* PRO.persuade]]]] [to PRO.leave]].
				Feature processing:
				Floater movement reconstruction:
					= [[[D John] [T/fin [[D John] [v* persuade]]]] [to leave]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to has unaccetable specifier [[D John]:98 [T/fin [(DP):98 [PRO.v* PRO.persuade]]]].
					Extraposition will be tried on [[[D John]:98 [T/fin [(DP):98 [PRO.v* PRO.persuade]]]] [to PRO.leave]].
				Agreement reconstruction:
			= [[[D John] [T/fin [[D John] [v* persuade]]]] [to leave]]
		Checking LF-interface conditions.
				to has unaccetable specifier [[D John]:98 [T/fin [(DP):98 [PRO.v* PRO.persuade]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:EN', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
persuade:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v*: [v, TT/fin]
PRO.persuade: [V, v, TT/fin]
to: [INF]
PRO.leave: [V, INF]


		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "persuade-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v*".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "persuades".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 86
['John', 'promises', 'Mary', 'to_inf', 'leave']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
			=D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*John]
			=D{N}

8.
		Next word "promises" contains multiple morphemes ['$[-s]', '$T/fin', 'promise-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					D was opened into [D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D John] T/fin]

10.

		Consume "promise"

		[[D John] T/fin] + promise
			Filtering out impossible merge sites...
			Sink "promise" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*promise]
			=[[D John] T/fin{V}]

11.
		Next word "Mary" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D John] T/fin{V}]

12.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D John] T/fin{V}]

13.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D John] T/fin{V}]

14.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D John] T/fin{V}]

15.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D John] T/fin{V}]

16.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D John] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{V} D] due to complement selection.
				Prioritize [promise D] due to complement selection.
				[[D John] T/fin{V}] + D = -98]
				T/fin{V} + D = 206]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D John] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			Transferring T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{V}.
					Extracted head "PRO.promise" from T/fin and created [T/fin PRO.promise]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				A phi-marked head "T/fin{V}" lacks complement
				An EPP-head "T/fin{V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{V}.
				Agreement reconstruction:
			=[[D John] [T/fin{V} D]]

17.

		Consume "Mary"

		[[D John] [T/fin{V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Mary]
			=[[D John] [T/fin{V} D{N}]]

18.

		Consume "to"

		[[D John] [T/fin{V} D{N}]] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				Avoid TT/finP as SPEC, to.
				An EPP-head "T/fin" lacks specifier but needs one.
				Avoid [T/fin [promise [D Mary]]] as left branch because it constitutes illicit structure.
				Avoid D{N} because it could break words.
					D was opened into [D Mary].
				Feature processing:
				Floater movement reconstruction:
					= [D Mary]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
				Prioritize D{N} because all solutions were negative.
				[[D John] [T/fin{V} D{N}]] + to = -98]
				[T/fin{V} D{N}] + to = -194]
				D{N} + to = 106]
		Ranking completed:
			1. [D{N}; to]
			2. [[[D John] [T/fin{V} D{N}]]; to]
			3. [[T/fin{V} D{N}]; to]
		Exploring solution number (1) =[D{N} to]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Mary" from D and created [D Mary]
					Reconstructing head movement for D{N}.
					Extracted head "Mary" from D and created [D Mary]
					D was opened into [D Mary].
				Feature processing:
				Floater movement reconstruction:
					= [D Mary]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D John] [T/fin{V} [[D Mary] to]]]

19.

		Consume "leave"

		[[D John] [T/fin{V} [[D Mary] to]]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [promise [[D Mary] to]]]]] PRO.leave] due to bad left branch.
				Reject [[T/fin [promise [[D Mary] to]]] PRO.leave] due to bad left branch.
				Reject [[[D Mary] to] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[D John] [T/fin{V} [[D Mary] [to PRO.leave]]]]

20.
	>>>	Trying candidate parse [[D John] [T/fin{V} [[D Mary] [to leave]]]] (1.)
		Reconstructing...
			Transferring [[D John] [T/fin{V} [[D Mary] [to PRO.leave]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D John] [T/fin{V} [[D Mary] [to PRO.leave]]]].
						Extracted head "PRO.promise" and reconstructed it = [[D John] [T/fin [PRO.promise [[D Mary] [to PRO.leave]]]]]
				Feature processing:
					to has neutralized PHI-feature, will be resolved into -ARG due to PRO.promise
				Floater movement reconstruction:
					= [[D John] [T/fin [promise [[D Mary] [to leave]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D John]:104 from memory buffer into Spec of PRO.promise
					Result [[D John]:104 [T/fin [(DP):104 [PRO.promise [[D Mary] [to PRO.leave]]]]]]
				to (to) has a specifier [D Mary] but is marked for -EPP behavior.
					Extraposition will be tried on [[D John]:104 [T/fin [(DP):104 [PRO.promise [[D Mary] [to PRO.leave]]]]]].
						<to PRO.leave> was made an adjunct.
					<to PRO.leave> was made adjunct by an extraposition rule.
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):104.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):104.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):104.
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):104.
			= [[D John] [T/fin [[D John] [promise [[D Mary] <to leave>]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D John]:104 [T/fin [(DP):104 [PRO.promise [[D Mary] <to PRO.leave>]]]]] into Conceptual-Intentional system...
				PRO.promise with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D Mary] <to leave>]    (alternatives: 2. [D John] 3. T/fin 4. [D John] )
				PRO.leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin 3. [D John] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.leave([D John])', 'PRO.promise([[D Mary] <to leave>])']
!--->		Tests passed (with 20/223 operations) <------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [promise [[D Mary] <to leave>]]]]]
		Grammar: [[D John]:1 [T/fin [(DP):1 [PRO.promise [[D Mary] <to PRO.leave>]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [[D N] INFP]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
promise:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:promise', 'PF:promise', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
promise:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:promise', 'PF:promise', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.promise: [V, TT/fin]
D: [D, V, TT/fin]
Mary: [N, D, V, TT/fin]
to: [INF, V, TT/fin]
PRO.leave: [V, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 87
['John', 'promises', 'to_inf', 'leave']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "John" contains multiple morphemes ['$m', '$hum', '$def', '$3p', '$sg', '$D', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
			=D

7.

		Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*John]
			=D{N}

8.
		Next word "promises" contains multiple morphemes ['$[-s]', '$T/fin', 'promise-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					Reconstructing head movement for D{N}.
					Extracted head "John" from D and created [D John]
					D was opened into [D John].
				Feature processing:
				Floater movement reconstruction:
					= [D John]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D John] T/fin]

10.

		Consume "promise"

		[[D John] T/fin] + promise
			Filtering out impossible merge sites...
			Sink "promise" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*promise]
			=[[D John] T/fin{V}]

11.

		Consume "to"

		[[D John] T/fin{V}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				[[D John] T/fin{V}] + to = -98]
				T/fin{V} + to = 2]
		Ranking completed:
			1. [T/fin{V}; to]
			2. [[[D John] T/fin{V}]; to]
		Exploring solution number (1) =[T/fin{V} to]
			Transferring T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{V}.
					Extracted head "PRO.promise" from T/fin and created [T/fin PRO.promise]
				An EPP-head "T/fin" lacks specifier but needs one.
					T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				A phi-marked head "T/fin{V}" lacks complement
				An EPP-head "T/fin{V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{V}.
				Agreement reconstruction:
			=[[D John] [T/fin{V} to]]

12.

		Consume "leave"

		[[D John] [T/fin{V} to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [promise to]]]] PRO.leave] due to bad left branch.
				Reject [[T/fin [promise to]] PRO.leave] due to bad left branch.
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[[D John] [T/fin{V} [to PRO.leave]]]

13.
	>>>	Trying candidate parse [[D John] [T/fin{V} [to leave]]] (1.)
		Reconstructing...
			Transferring [[D John] [T/fin{V} [to PRO.leave]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D John] [T/fin{V} [to PRO.leave]]].
						Extracted head "PRO.promise" and reconstructed it = [[D John] [T/fin [PRO.promise [to PRO.leave]]]]
				Feature processing:
					to has neutralized PHI-feature, will be resolved into -ARG due to PRO.promise
				Floater movement reconstruction:
					= [[D John] [T/fin [promise [to leave]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D John " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D John]:108 from memory buffer into Spec of PRO.promise
					Result [[D John]:108 [T/fin [(DP):108 [PRO.promise [to PRO.leave]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					T/fin acquired PHI:DET:DEF by phi-Agree from (DP):108.
					T/fin acquired PHI:GEN:M by phi-Agree from (DP):108.
					T/fin acquired PHI:NUM:SG by phi-Agree from (DP):108.
					T/fin acquired PHI:PER:3 by phi-Agree from (DP):108.
			= [[D John] [T/fin [[D John] [promise [to leave]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D John]:108 [T/fin [(DP):108 [PRO.promise [to PRO.leave]]]]] into Conceptual-Intentional system...
				PRO.promise with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin 3. [D John] )
				PRO.leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin 3. [D John] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.leave([D John])', 'PRO.promise([D John])']
!--->		Tests passed (with 13/146 operations) <------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [promise [to leave]]]]]
		Grammar: [[D John]:1 [T/fin [(DP):1 [PRO.promise [to PRO.leave]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [INF V]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
promise:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:promise', 'PF:promise', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
promise:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:EN', 'LF:promise', 'PF:promise', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
John: [N, D]
T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.promise: [V, TT/fin]
to: [INF, V, TT/fin]
PRO.leave: [V, INF, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 88
['haluaa', 'lahtea', 'Pekka']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "haluaa" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.

		Consume "haluaa"

		T/fin{v} + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*haluaa]
			=PRO.T/fin{v,V}

5.
		Next word "lahtea" contains multiple morphemes ['$A/inf', 'lahte-']

		Consume "A/inf"

		T/fin{v,V} + A/inf
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} A/inf]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.haluaa" from PRO.v and created [PRO.T/fin [PRO.v PRO.haluaa]]
				A phi-marked head "PRO.haluaa" lacks complement
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} A/inf]

6.

		Consume "lahtea"

		[T/fin{v,V} A/inf] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[PRO.T/fin{v,V} A/inf{V}]

7.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[PRO.T/fin{v,V} A/inf{V}]

8.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[PRO.T/fin{v,V} A/inf{V}]

9.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[PRO.T/fin{v,V} A/inf{V}]

10.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[PRO.T/fin{v,V} A/inf{V}]

11.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=[PRO.T/fin{v,V} A/inf{V}]

12.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=[PRO.T/fin{v,V} A/inf{V}]

13.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		[T/fin{v,V} A/inf{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid A/inf{V} because it could break words.
				[PRO.T/fin{v,V} A/inf{V}] + D = -98]
				A/inf{V} + D = -96]
		Ranking completed:
			1. [A/inf{V}; D]
			2. [[PRO.T/fin{v,V} A/inf{V}]; D]
		Exploring solution number (1) =[A/inf{V} D]
			Transferring A/inf{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for A/inf{V}.
					Extracted head "PRO.lahtea" from A/inf and created [A/inf PRO.lahtea]
					A/inf{V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= A/inf{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				A/inf{V} probing for CAT:V failed.
				A phi-marked head "A/inf{V}" lacks complement
				Agreement reconstruction:
			=[PRO.T/fin{v,V} [A/inf{V} D]]

14.

		Consume "Pekka"

		[T/fin{v,V} [A/inf{V} D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[PRO.T/fin{v,V} [A/inf{V} D{N}]]

15.
	>>>	Trying candidate parse [T/fin{v,V} [A/inf{V} D{N}]] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} [A/inf{V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} [A/inf{V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} [A/inf{V} D{N}]]]
						Extracted head "PRO.haluaa" and reconstructed it = [PRO.T/fin [PRO.v [PRO.haluaa [A/inf{V} D{N}]]]]
						Extracted head "PRO.lahtea" and reconstructed it = [PRO.T/fin [PRO.v [PRO.haluaa [A/inf [PRO.lahtea D{N}]]]]]
					Extracted head "Pekka" from D and created [PRO.T/fin [PRO.v [PRO.haluaa [A/inf [PRO.lahtea [D Pekka]]]]]]
				Feature processing:
					A/inf has neutralized PHI-feature, will be resolved into -ARG due to PRO.haluaa
				Floater movement reconstruction:
					D at the right failed to tail [ARG][CAT:FIN][VAL]
						<D Pekka> was made an adjunct.
					Dropping <D Pekka>
						Floater <D Pekka> dropped.
						 = [PRO.T/fin [<DP>:219 [PRO.v [PRO.haluaa [A/inf [PRO.lahtea <D Pekka>:219]]]]]]
					= [T/fin [<D Pekka> [v [haluaa [A/inf [lahtea <D Pekka>]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:219.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:219.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:219.
			= [T/fin [<D Pekka> [v [haluaa [A/inf [lahtea <D Pekka>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [<DP>:219 [PRO.v [PRO.haluaa [A/inf [PRO.lahtea <D Pekka>:219]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				PRO.haluaa with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				PRO.lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.haluaa(<D Pekka>)', 'PRO.lahtea(<D Pekka>)', 'PRO.v(<D Pekka>)']
!--->		Tests passed (with 15/153 operations) <------------------------------------
		Solution:
		[T/fin [<D Pekka> [v [haluaa [A/inf [lahtea <D Pekka>]]]]]]
		Grammar: [phi.T/fin [<DP>:1 [PRO.v [PRO.haluaa [A/inf [PRO.lahtea <D Pekka>:1]]]]]]
		Spellout TT/finP = [TT/fin [__:1 [v [V [INF [V DP:1]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.haluaa: [V, v, TT/fin]
A/inf: [INF, V, v, TT/fin]
PRO.lahtea: [V, INF, V, v, TT/fin]
D: [D, V, INF, V, v, TT/fin]
Pekka: [N, D, V, INF, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 89
['kaskee', 'Merjan', 'lahtea', 'Pekka']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "kaskee" contains multiple morphemes ['$[-V]', '$T/fin', '$v*', 'kaske-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v*"

		T/fin + v*
			Filtering out impossible merge sites...
			Sink "v*" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v*]
			=PRO.T/fin{v}

4.
		Ambiguous lexical item "kaske-" detected.

		Consume "kaske"

		T/fin{v} + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*kaske]
			=PRO.T/fin{v,V}

5.
		Next word "Merjan" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$gen', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$gen"

			=PRO.T/fin{v,V}

10.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

11.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v*{V}" from PRO.T/fin and created [PRO.T/fin PRO.v*{V}]
					Reconstructing head movement for PRO.v*{V}.
					Extracted head "PRO.kaske" from PRO.v* and created [PRO.T/fin [PRO.v* PRO.kaske]]
				PRO.kaske (kaske) is missing complement A/inf
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} D]

12.

		Consume "Merja-"

		[T/fin{v,V} D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[PRO.T/fin{v,V} D{N}]

13.
		Next word "lahtea" contains multiple morphemes ['$A/inf', 'lahte-']

		Consume "A/inf"

		[T/fin{v,V} D{N}] + A/inf
			Filtering out impossible merge sites...
				Reject [[T/fin [v* [kaske <D Merja->]]] A/inf] due to bad left branch.
		Exploring solution number (1) =[D{N} A/inf]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					D was opened into [D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} [[D Merja-] A/inf]]

14.

		Consume "lahtea"

		[T/fin{v,V} [[D Merja-] A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[PRO.T/fin{v,V} [[D Merja-] A/inf{V}]]

15.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[PRO.T/fin{v,V} [[D Merja-] A/inf{V}]]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[PRO.T/fin{v,V} [[D Merja-] A/inf{V}]]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[PRO.T/fin{v,V} [[D Merja-] A/inf{V}]]

18.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[PRO.T/fin{v,V} [[D Merja-] A/inf{V}]]

19.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=[PRO.T/fin{v,V} [[D Merja-] A/inf{V}]]

20.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=[PRO.T/fin{v,V} [[D Merja-] A/inf{V}]]

21.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		[T/fin{v,V} [[D Merja-] A/inf{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				[PRO.T/fin{v,V} [[D Merja-] A/inf{V}]] + D = -98]
				[[D Merja-] A/inf{V}] + D = 2]
				A/inf{V} + D = 3]
		Ranking completed:
			1. [A/inf{V}; D]
			2. [[[D Merja-] A/inf{V}]; D]
			3. [[PRO.T/fin{v,V} [[D Merja-] A/inf{V}]]; D]
		Exploring solution number (1) =[A/inf{V} D]
			Transferring A/inf{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for A/inf{V}.
					Extracted head "PRO.lahtea" from A/inf and created [A/inf PRO.lahtea]
					A/inf{V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= A/inf{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				A/inf{V} probing for CAT:V failed.
				A phi-marked head "A/inf{V}" lacks complement
				Agreement reconstruction:
			=[PRO.T/fin{v,V} [[D Merja-] [A/inf{V} D]]]

22.

		Consume "Pekka"

		[T/fin{v,V} [[D Merja-] [A/inf{V} D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[PRO.T/fin{v,V} [[D Merja-] [A/inf{V} D{N}]]]

23.
	>>>	Trying candidate parse [T/fin{v,V} [[D Merja-] [A/inf{V} D{N}]]] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} [[D Merja-] [A/inf{V} D{N}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} [[D Merja-] [A/inf{V} D{N}]]].
						Extracted head "PRO.v*{V}" and reconstructed it = [PRO.T/fin [PRO.v*{V} [[D Merja-] [A/inf{V} D{N}]]]]
						Extracted head "PRO.kaske" and reconstructed it = [PRO.T/fin [PRO.v* [PRO.kaske [[D Merja-] [A/inf{V} D{N}]]]]]
						Extracted head "PRO.lahtea" and reconstructed it = [PRO.T/fin [PRO.v* [PRO.kaske [[D Merja-] [A/inf [PRO.lahtea D{N}]]]]]]
					Extracted head "Pekka" from D and created [PRO.T/fin [PRO.v* [PRO.kaske [[D Merja-] [A/inf [PRO.lahtea [D Pekka]]]]]]]
				Feature processing:
					A/inf has neutralized PHI-feature, will be resolved into +ARG due to PRO.kaske
				Floater movement reconstruction:
					[D Merja-] failed to tail [ARG][CAT:INF][VAL]
					Dropping [D Merja-]
						<D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [PRO.T/fin [PRO.v* [PRO.kaske [<D Merja->:222 [A/inf [<DP>:222 [PRO.lahtea [D Pekka]]]]]]]]
					D at the right failed to tail [ARG][CAT:FIN][VAL]
						<D Pekka> was made an adjunct.
					Dropping <D Pekka>
						Floater <D Pekka> dropped.
						 = [PRO.T/fin [<DP>:223 [PRO.v* [PRO.kaske [<D Merja->:222 [A/inf [<DP>:222 [PRO.lahtea <D Pekka>:223]]]]]]]]
					= [T/fin [<D Pekka> [v* [kaske [<D Merja-> [A/inf [<D Merja-> [lahtea <D Pekka>]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:223.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:223.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:223.
			= [T/fin [<D Pekka> [v* [kaske [<D Merja-> [A/inf [<D Merja-> [lahtea <D Pekka>]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [<DP>:223 [PRO.v* [PRO.kaske [<D Merja->:222 [A/inf [<DP>:222 [PRO.lahtea <D Pekka>:223]]]]]]]] into Conceptual-Intentional system...
				PRO.v* with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				PRO.kaske with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					Generic
				PRO.lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D Merja-> 3. <D Merja-> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Generic', 'PRO.lahtea(<D Merja->)', 'PRO.v*(<D Pekka>)']
!--->		Tests passed (with 23/214 operations) <------------------------------------
		Solution:
		[T/fin [<D Pekka> [v* [kaske [<D Merja-> [A/inf [<D Merja-> [lahtea <D Pekka>]]]]]]]]
		Grammar: [phi.T/fin [<DP>:1 [PRO.v* [PRO.kaske [<D Merja->:2 [A/inf [<DP>:2 [PRO.lahtea <D Pekka>:1]]]]]]]]
		Spellout TT/finP = [TT/fin [__:1 [v [V [DP:2 [INF [__:2 [V DP:1]]]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v*: [v, TT/fin]
PRO.kaske: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]
A/inf: [INF, V, v, TT/fin]
(D): [D, INF, V, v, TT/fin]
(N): [N, D, INF, V, v, TT/fin]
PRO.lahtea: [V, INF, V, v, TT/fin]
D: [D, V, INF, V, v, TT/fin]
Pekka: [N, D, V, INF, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "kaske"

		T/fin{v} + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*kaske]


\========================================================================
# 90
['kaskee', 'Pekka', 'Merjan', 'lahtea']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "kaskee" contains multiple morphemes ['$[-V]', '$T/fin', '$v*', 'kaske-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v*"

		T/fin + v*
			Filtering out impossible merge sites...
			Sink "v*" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v*]
			=PRO.T/fin{v}

4.
		Ambiguous lexical item "kaske-" detected.

		Consume "kaske"

		T/fin{v} + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*kaske]
			=PRO.T/fin{v,V}

5.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=PRO.T/fin{v,V}

10.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

11.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v*{V}" from PRO.T/fin and created [PRO.T/fin PRO.v*{V}]
					Reconstructing head movement for PRO.v*{V}.
					Extracted head "PRO.kaske" from PRO.v* and created [PRO.T/fin [PRO.v* PRO.kaske]]
				PRO.kaske (kaske) is missing complement A/inf
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} D]

12.

		Consume "Pekka"

		[T/fin{v,V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[PRO.T/fin{v,V} D{N}]

13.
		Next word "Merjan" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$gen', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[PRO.T/fin{v,V} D{N}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[PRO.T/fin{v,V} D{N}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[PRO.T/fin{v,V} D{N}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[PRO.T/fin{v,V} D{N}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$gen"

			=[PRO.T/fin{v,V} D{N}]

18.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.

		Consume "$D"

			=[PRO.T/fin{v,V} D{N}]

19.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']

		Consume "D"

		[T/fin{v,V} D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.kaske (kaske) is missing complement A/inf
				Avoid [T/fin [<D Pekka> [v* [kaske <D Pekka>]]]] as left branch because it constitutes illicit structure.
				Avoid [D{N} D] due to local agreement failure.
				Avoid D{N} because it could break words.
					D was opened into [D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
				Prioritize D{N} because all solutions were negative.
				[PRO.T/fin{v,V} D{N}] + D = -197]
				D{N} + D = 56]
		Ranking completed:
			1. [D{N}; D]
			2. [[PRO.T/fin{v,V} D{N}]; D]
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					D was opened into [D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} [[D Pekka] D]]

20.

		Consume "Merja-"

		[T/fin{v,V} [[D Pekka] D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[PRO.T/fin{v,V} [[D Pekka] D{N}]]

21.
		Next word "lahtea" contains multiple morphemes ['$A/inf', 'lahte-']

		Consume "A/inf"

		[T/fin{v,V} [[D Pekka] D{N}]] + A/inf
			Filtering out impossible merge sites...
				Reject [[T/fin [<D Pekka> [v* [kaske <<D Pekka> <D Merja->>]]]] A/inf] due to bad left branch.
				Reject [[[D N] D] A/inf] as Spec because it breaks words.
		Exploring solution number (1) =[D{N} A/inf]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					D was opened into [D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} [[D Pekka] [[D Merja-] A/inf]]]

22.

		Consume "lahtea"

		[T/fin{v,V} [[D Pekka] [[D Merja-] A/inf]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[PRO.T/fin{v,V} [[D Pekka] [[D Merja-] A/inf{V}]]]

23.
	>>>	Trying candidate parse [T/fin{v,V} [[D Pekka] [[D Merja-] A/inf{V}]]] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} [[D Pekka] [[D Merja-] A/inf{V}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} [[D Pekka] [[D Merja-] A/inf{V}]]].
						Extracted head "PRO.v*{V}" and reconstructed it = [PRO.T/fin [PRO.v*{V} [[D Pekka] [[D Merja-] A/inf{V}]]]]
						Extracted head "PRO.kaske" and reconstructed it = [PRO.T/fin [PRO.v* [PRO.kaske [[D Pekka] [[D Merja-] A/inf{V}]]]]]
					Extracted head "PRO.lahtea" from A/inf and created [PRO.T/fin [PRO.v* [PRO.kaske [[D Pekka] [[D Merja-] [A/inf PRO.lahtea]]]]]]
				Feature processing:
					A/inf has neutralized PHI-feature, will be resolved into +ARG due to PRO.kaske
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [PRO.T/fin [<DP>:227 [PRO.v* [PRO.kaske [<D Pekka>:227 [[D Merja-] [A/inf PRO.lahtea]]]]]]]
					[D Merja-] failed to tail [ARG][CAT:INF][VAL]
					Dropping [D Merja-]
						<D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [PRO.T/fin [<DP>:227 [PRO.v* [PRO.kaske [<D Pekka>:227 [<D Merja->:228 [A/inf [<DP>:228 PRO.lahtea]]]]]]]]
					= [T/fin [<D Pekka> [v* [kaske [<D Pekka> [<D Merja-> [A/inf [<D Merja-> lahtea]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:227.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:227.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:227.
			= [T/fin [<D Pekka> [v* [kaske [<D Pekka> [<D Merja-> [A/inf [<D Merja-> lahtea]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [<DP>:227 [PRO.v* [PRO.kaske [<D Pekka>:227 [<D Merja->:228 [A/inf [<DP>:228 PRO.lahtea]]]]]]]] into Conceptual-Intentional system...
				PRO.v* with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				PRO.kaske with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					Generic
				PRO.lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D Merja-> 3. <D Pekka> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Generic', 'PRO.lahtea(<D Merja->)', 'PRO.v*(<D Pekka>)']
!--->		Tests passed (with 23/224 operations) <------------------------------------
		Solution:
		[T/fin [<D Pekka> [v* [kaske [<D Pekka> [<D Merja-> [A/inf [<D Merja-> lahtea]]]]]]]]
		Grammar: [phi.T/fin [<DP>:1 [PRO.v* [PRO.kaske [<D Pekka>:1 [<D Merja->:2 [A/inf [<DP>:2 PRO.lahtea]]]]]]]]
		Spellout TT/finP = [TT/fin [__:1 [v [V [DP:1 [DP:2 [INF [__:2 V]]]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v*: [v, TT/fin]
PRO.kaske: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Pekka: [N, D, V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]
A/inf: [INF, V, v, TT/fin]
(D): [D, INF, V, v, TT/fin]
(N): [N, D, INF, V, v, TT/fin]
PRO.lahtea: [V, INF, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "kaske"

		T/fin{v} + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*kaske]


\========================================================================
# 91
['kaskee', 'Merjan', 'Pekka', 'lahtea']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "kaskee" contains multiple morphemes ['$[-V]', '$T/fin', '$v*', 'kaske-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v*"

		T/fin + v*
			Filtering out impossible merge sites...
			Sink "v*" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v*]
			=PRO.T/fin{v}

4.
		Ambiguous lexical item "kaske-" detected.

		Consume "kaske"

		T/fin{v} + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*kaske]
			=PRO.T/fin{v,V}

5.
		Next word "Merjan" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$gen', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=PRO.T/fin{v,V}

6.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=PRO.T/fin{v,V}

7.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=PRO.T/fin{v,V}

8.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=PRO.T/fin{v,V}

9.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$gen"

			=PRO.T/fin{v,V}

10.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.

		Consume "$D"

			=PRO.T/fin{v,V}

11.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v*{V}" from PRO.T/fin and created [PRO.T/fin PRO.v*{V}]
					Reconstructing head movement for PRO.v*{V}.
					Extracted head "PRO.kaske" from PRO.v* and created [PRO.T/fin [PRO.v* PRO.kaske]]
				PRO.kaske (kaske) is missing complement A/inf
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} D]

12.

		Consume "Merja-"

		[T/fin{v,V} D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[PRO.T/fin{v,V} D{N}]

13.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[PRO.T/fin{v,V} D{N}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[PRO.T/fin{v,V} D{N}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[PRO.T/fin{v,V} D{N}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[PRO.T/fin{v,V} D{N}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=[PRO.T/fin{v,V} D{N}]

18.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=[PRO.T/fin{v,V} D{N}]

19.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']

		Consume "D"

		[T/fin{v,V} D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.kaske (kaske) is missing complement A/inf
				hD failed internal tail test.
				Avoid [T/fin [v* [kaske <D Merja->]]] as left branch because it constitutes illicit structure.
				Avoid [D{N} D] due to local agreement failure.
				Avoid D{N} because it could break words.
					D was opened into [D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
				Prioritize D{N} because all solutions were negative.
				[PRO.T/fin{v,V} D{N}] + D = -197]
				D{N} + D = 56]
		Ranking completed:
			1. [D{N}; D]
			2. [[PRO.T/fin{v,V} D{N}]; D]
		Exploring solution number (1) =[D{N} D]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					D was opened into [D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} [[D Merja-] D]]

20.

		Consume "Pekka"

		[T/fin{v,V} [[D Merja-] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[PRO.T/fin{v,V} [[D Merja-] D{N}]]

21.
		Next word "lahtea" contains multiple morphemes ['$A/inf', 'lahte-']

		Consume "A/inf"

		[T/fin{v,V} [[D Merja-] D{N}]] + A/inf
			Filtering out impossible merge sites...
				Reject [[T/fin [<D Pekka> [v* [kaske <<D Merja-> <D Pekka>>]]]] A/inf] due to bad left branch.
				Reject [[[D N] D] A/inf] as Spec because it breaks words.
		Exploring solution number (1) =[D{N} A/inf]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					D was opened into [D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} [[D Merja-] [[D Pekka] A/inf]]]

22.

		Consume "lahtea"

		[T/fin{v,V} [[D Merja-] [[D Pekka] A/inf]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[PRO.T/fin{v,V} [[D Merja-] [[D Pekka] A/inf{V}]]]

23.
	>>>	Trying candidate parse [T/fin{v,V} [[D Merja-] [[D Pekka] A/inf{V}]]] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} [[D Merja-] [[D Pekka] A/inf{V}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} [[D Merja-] [[D Pekka] A/inf{V}]]].
						Extracted head "PRO.v*{V}" and reconstructed it = [PRO.T/fin [PRO.v*{V} [[D Merja-] [[D Pekka] A/inf{V}]]]]
						Extracted head "PRO.kaske" and reconstructed it = [PRO.T/fin [PRO.v* [PRO.kaske [[D Merja-] [[D Pekka] A/inf{V}]]]]]
					Extracted head "PRO.lahtea" from A/inf and created [PRO.T/fin [PRO.v* [PRO.kaske [[D Merja-] [[D Pekka] [A/inf PRO.lahtea]]]]]]
				Feature processing:
					A/inf has neutralized PHI-feature, will be resolved into +ARG due to PRO.kaske
				Floater movement reconstruction:
					[D Merja-] failed to tail [ARG][CAT:INF][VAL]
					Dropping [D Merja-]
						<D Merja-> was made an adjunct.
						Floater <D Merja-> dropped.
						 = [PRO.T/fin [PRO.v* [PRO.kaske [<D Merja->:230 [[D Pekka] [A/inf [<DP>:230 PRO.lahtea]]]]]]]
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [PRO.T/fin [<DP>:231 [PRO.v* [PRO.kaske [<D Merja->:230 [<D Pekka>:231 [A/inf [<DP>:230 PRO.lahtea]]]]]]]]
					= [T/fin [<D Pekka> [v* [kaske [<D Merja-> [<D Pekka> [A/inf [<D Merja-> lahtea]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:231.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:231.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:231.
			= [T/fin [<D Pekka> [v* [kaske [<D Merja-> [<D Pekka> [A/inf [<D Merja-> lahtea]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [<DP>:231 [PRO.v* [PRO.kaske [<D Merja->:230 [<D Pekka>:231 [A/inf [<DP>:230 PRO.lahtea]]]]]]]] into Conceptual-Intentional system...
				PRO.v* with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				PRO.kaske with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					Generic
				PRO.lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Merja->    (alternatives: 2. <D Pekka> 3. <D Merja-> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Generic', 'PRO.lahtea(<D Merja->)', 'PRO.v*(<D Pekka>)']
!--->		Tests passed (with 23/225 operations) <------------------------------------
		Solution:
		[T/fin [<D Pekka> [v* [kaske [<D Merja-> [<D Pekka> [A/inf [<D Merja-> lahtea]]]]]]]]
		Grammar: [phi.T/fin [<DP>:1 [PRO.v* [PRO.kaske [<D Merja->:2 [<D Pekka>:1 [A/inf [<DP>:2 PRO.lahtea]]]]]]]]
		Spellout TT/finP = [TT/fin [__:1 [v [V [DP:2 [DP:1 [INF [__:2 V]]]]]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v*: [v, TT/fin]
PRO.kaske: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]
D: [D, V, v, TT/fin]
Pekka: [N, D, V, v, TT/fin]
A/inf: [INF, V, v, TT/fin]
(D): [D, INF, V, v, TT/fin]
(N): [N, D, INF, V, v, TT/fin]
PRO.lahtea: [V, INF, V, v, TT/fin]

			Checking if the sentence is ambiguous...

		Consume "kaske"

		T/fin{v} + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*kaske]


\========================================================================
# 92
['Pekka', 'pyytaa', 'lahtemaan']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

9.
		Next word "pyytaa" contains multiple morphemes ['$[-V]', '$T/fin', '$v*', 'pyyta-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					D was opened into [D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] PRO.T/fin]

11.

		Consume "v*"

		[[D Pekka] T/fin] + v*
			Filtering out impossible merge sites...
			Sink "v*" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v*]
			=[[D Pekka] PRO.T/fin{v}]

12.

		Consume "pyyda"

		[[D Pekka] T/fin{v}] + pyyda
			Filtering out impossible merge sites...
			Sink "pyyda" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*pyyda]
			=[[D Pekka] PRO.T/fin{v,V}]

13.
		Next word "lahtemaan" contains multiple morphemes ['$MA/inf', 'lahte-']

		Consume "ma"

		[[D Pekka] T/fin{v,V}] + ma
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, ma.
				[[D Pekka] PRO.T/fin{v,V}] + ma = -98]
				PRO.T/fin{v,V} + ma = 2]
		Ranking completed:
			1. [PRO.T/fin{v,V}; ma]
			2. [[[D Pekka] PRO.T/fin{v,V}]; ma]
		Exploring solution number (1) =[PRO.T/fin{v,V} ma]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v*{V}" from PRO.T/fin and created [PRO.T/fin PRO.v*{V}]
					Reconstructing head movement for PRO.v*{V}.
					Extracted head "PRO.pyyda" from PRO.v* and created [PRO.T/fin [PRO.v* PRO.pyyda]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{v,V} ma]]

14.

		Consume "lahtea"

		[[D Pekka] [T/fin{v,V} ma]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into ma because they are inside the same phonological word.
		Exploring solution number (1) =[ma*lahtea]
			=[[D Pekka] [PRO.T/fin{v,V} ma{V}]]

15.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} ma{V}]] (1.)
		Reconstructing...
			Transferring [[D Pekka] [PRO.T/fin{v,V} ma{V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [PRO.T/fin{v,V} ma{V}]].
						Extracted head "PRO.v*{V}" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.v*{V} ma{V}]]]
						Extracted head "PRO.pyyda" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.v* [PRO.pyyda ma{V}]]]]
					Extracted head "PRO.lahtea" from ma and created [[D Pekka] [PRO.T/fin [PRO.v* [PRO.pyyda [ma PRO.lahtea]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:234 [PRO.T/fin [<DP>:234 [PRO.v* [PRO.pyyda [ma PRO.lahtea]]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [v* [pyyda [ma lahtea]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:234.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:234.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:234.
			= [<D Pekka> [T/fin [<D Pekka> [v* [pyyda [ma lahtea]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:234 [phi.T/fin [<DP>:234 [PRO.v* [PRO.pyyda [ma PRO.lahtea]]]]]] into Conceptual-Intentional system...
				PRO.v* with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				PRO.pyyda with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					Generic
				PRO.lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					Generic
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Generic', 'PRO.v*(<D Pekka>)']
!--->		Tests passed (with 15/149 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v* [pyyda [ma lahtea]]]]]]
		Grammar: [<D Pekka>:1 [phi.T/fin [<DP>:1 [PRO.v* [PRO.pyyda [ma PRO.lahtea]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [INF V]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
pyyda:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:pyyda', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
ma:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '-VAL', 'CAT:-ARG', 'CAT:-ARG/INF/MA/inf', 'CAT:INF', 'CAT:MA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:MA/inf', 'PF:ma']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
pyyda:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:pyyda', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
ma:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '-VAL', 'CAT:-ARG', 'CAT:-ARG/INF/MA/inf', 'CAT:INF', 'CAT:MA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:MA/inf', 'PF:ma']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v*: [v, TT/fin]
PRO.pyyda: [V, v, TT/fin]
ma: [INF, V, v, TT/fin]
PRO.lahtea: [V, INF, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 93
['to_inf', 'leave', 'is', 'a', 'mistake']


Using lexicon "lexicon.txt".
			=None

1.
			=to

2.

		Consume "leave"

		to + leave
			Filtering out impossible merge sites...
		Exploring solution number (1) =[to leave]
			Transferring to to LF.
				head movement reconstruction:
					Reconstructing head movement for to.
				Feature processing:
				Floater movement reconstruction:
					= to
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				to probing for CAT:V failed.
				A phi-marked head "to" lacks complement
				Agreement reconstruction:
			=[to PRO.leave]

3.
		Next word "is" contains multiple morphemes ['$[-s]', '$T/fin', 'be-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=[to PRO.leave]

4.

		Adding inflectional features ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[to leave] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Prioritize INFP as SPEC,T/fin.
				[to PRO.leave] + T/fin = 102]
				PRO.leave + T/fin = 2]
		Ranking completed:
			1. [[to PRO.leave]; T/fin]
			2. [PRO.leave; T/fin]
		Exploring solution number (1) =[[to PRO.leave] T/fin]
			Transferring [to PRO.leave] to LF.
				head movement reconstruction:
					Reconstructing head movement for [to PRO.leave].
				Feature processing:
				Floater movement reconstruction:
					= [to leave]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[to PRO.leave] T/fin]

5.

		Consume "be"

		[[to leave] T/fin] + be
			Filtering out impossible merge sites...
			Sink "be" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*be]
			=[[to PRO.leave] T/fin{V}]

6.

		Consume "a"

		[[to leave] T/fin{V}] + a
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, a.
				A phi-marked head "PRO.be" lacks complement
				Avoid [[to leave] [T/fin [[to leave] be]]] as left branch because it constitutes illicit structure.
				Prioritize [T/fin{V} a] due to complement selection.
				[[to PRO.leave] T/fin{V}] + a = -197]
				T/fin{V} + a = 104]
		Ranking completed:
			1. [T/fin{V}; a]
			2. [[[to PRO.leave] T/fin{V}]; a]
		Exploring solution number (1) =[T/fin{V} a]
			Transferring T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for T/fin{V}.
					Extracted head "PRO.be" from T/fin and created [T/fin PRO.be]
				An EPP-head "T/fin" lacks specifier but needs one.
				A phi-marked head "PRO.be" lacks complement
					T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				T/fin{V} probing for CAT:V failed.
				A phi-marked head "T/fin{V}" lacks complement
				An EPP-head "T/fin{V}" lacks specifier but needs one.
					Extraposition will be tried on T/fin{V}.
				Agreement reconstruction:
			=[[to PRO.leave] [T/fin{V} a]]

7.

		Consume "mistake"

		[[to leave] [T/fin{V} a]] + mistake
			Filtering out impossible merge sites...
				Reject [[[to leave] [T/fin [[to leave] [be a]]]] mistake] due to bad left branch.
				Reject [[T/fin [be a]] mistake] due to bad left branch.
		Exploring solution number (1) =[a mistake]
			Transferring a to LF.
				head movement reconstruction:
					Reconstructing head movement for a.
				Feature processing:
				Floater movement reconstruction:
					= a
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				a probing for CAT:N failed.
				A phi-marked head "a" lacks complement
					Extraposition will be tried on a.
				Agreement reconstruction:
			=[[to PRO.leave] [T/fin{V} [a mistake]]]

8.
	>>>	Trying candidate parse [[to leave] [T/fin{V} [a mistake]]] (1.)
		Reconstructing...
			Transferring [[to PRO.leave] [T/fin{V} [a mistake]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[to PRO.leave] [T/fin{V} [a mistake]]].
						Extracted head "PRO.be" and reconstructed it = [[to PRO.leave] [T/fin [PRO.be [a mistake]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[to leave] [T/fin [be [a mistake]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "to leave " into memory buffer from SPEC of "T/fin".
					Memory buffer: [[INF V]]
					Dropping constituent [to PRO.leave]:112 from memory buffer into Spec of PRO.be
					Result [[to PRO.leave]:112 [T/fin [(INFP):112 [PRO.be [a mistake]]]]]
				Agreement reconstruction:
					T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
			= [[to leave] [T/fin [[to leave] [be [a mistake]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[to PRO.leave]:112 [T/fin [(INFP):112 [PRO.be [a mistake]]]]] into Conceptual-Intentional system...
				T/fin with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					Generic
				(V) with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					Generic
				PRO.be with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [a mistake]    (alternatives: )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Generic', 'PRO.be([a mistake])']
!--->		Tests passed (with 8/138 operations) <------------------------------------
		Solution:
		[[to leave] [T/fin [[to leave] [be [a mistake]]]]]
		Grammar: [[to PRO.leave]:1 [T/fin [(INFP):1 [PRO.be [a mistake]]]]]
		Spellout TT/finP = [INFP:1 [TT/fin [__:1 [V [D N]]]]]
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', 'null']
be:['!COMP:*', '-ARG', '-COMP:N', '-COMP:TO/inf', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:-ARG', 'CAT:-ARG/ARG/COPULA/V', 'CAT:ARG', 'CAT:COPULA', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:be', 'PF:be', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
a:['!COMP:*', '!PROBE:CAT:N', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:a', 'PF:a', 'PHI:DET:INDEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
mistake:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:mistake', 'PF:mistake', 'SPEC:A']

to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', 'null']
be:['!COMP:*', '-ARG', '-COMP:N', '-COMP:TO/inf', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:-ARG', 'CAT:-ARG/ARG/COPULA/V', 'CAT:ARG', 'CAT:COPULA', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:be', 'PF:be', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
a:['!COMP:*', '!PROBE:CAT:N', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:a', 'PF:a', 'PHI:DET:INDEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
mistake:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:mistake', 'PF:mistake', 'SPEC:A']

to: [INF]
PRO.leave: [V, INF]
T/fin: [TT/fin]
(INF): [INF, TT/fin]
(V): [V, INF, TT/fin]
PRO.be: [V, TT/fin]
a: [D, V, TT/fin]
mistake: [N, D, V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 94
['Pekka', 'etsii', 'Merjaa', 'juosten']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

9.
		Next word "etsii" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'etsi-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					D was opened into [D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] PRO.T/fin]

11.

		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D Pekka] PRO.T/fin{v}]

12.

		Consume "etsi"

		[[D Pekka] T/fin{v}] + etsi
			Filtering out impossible merge sites...
			Sink "etsi" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*etsi]
			=[[D Pekka] PRO.T/fin{v,V}]

13.
		Ambiguous lexical item "Merjaa" detected.
		Next word "Merjaa" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$par', '$D', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=[[D Pekka] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D Pekka] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D Pekka] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D Pekka] PRO.T/fin{v,V}]

17.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$par"

			=[[D Pekka] PRO.T/fin{v,V}]

18.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"

			=[[D Pekka] PRO.T/fin{v,V}]

19.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']

		Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				PRO.etsi (etsi) is missing complement D
				Avoid [<D Pekka> [T/fin [<D Pekka> [v etsi]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [etsi D] due to complement selection.
				[[D Pekka] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 158]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D Pekka] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.etsi" from PRO.v and created [PRO.T/fin [PRO.v PRO.etsi]]
				PRO.etsi (etsi) is missing complement D
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{v,V} D]]

20.

		Consume "Merja-"

		[[D Pekka] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[[D Pekka] [PRO.T/fin{v,V} D{N}]]

21.
		Next word "juosten" contains multiple morphemes ['$Cen', 'juokse-']

		Consume "en"

		[[D Pekka] [T/fin{v,V} D{N}]] + en
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, en.
				Avoid TT/finP as SPEC, en.
				Avoid D{N} due to tail-head failure.
					D was opened into [D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
				Prioritize D{N} because all solutions were negative.
				[[D Pekka] [PRO.T/fin{v,V} D{N}]] + en = -98]
				[PRO.T/fin{v,V} D{N}] + en = -96]
				D{N} + en = 106]
		Ranking completed:
			1. [D{N}; en]
			2. [[PRO.T/fin{v,V} D{N}]; en]
			3. [[[D Pekka] [PRO.T/fin{v,V} D{N}]]; en]
		Exploring solution number (1) =[D{N} en]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					Reconstructing head movement for D{N}.
					Extracted head "Merja-" from D and created [D Merja-]
					D was opened into [D Merja-].
				Feature processing:
				Floater movement reconstruction:
					= [D Merja-]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{v,V} [[D Merja-] en]]]

22.

		Consume "juokse-"

		[[D Pekka] [T/fin{v,V} [[D Merja-] en]]] + juokse-
			Filtering out impossible merge sites...
			Sink "juokse-" into en because they are inside the same phonological word.
		Exploring solution number (1) =[en*juokse-]
			=[[D Pekka] [PRO.T/fin{v,V} [[D Merja-] en{V}]]]

23.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} [[D Merja-] en{V}]]] (1.)
		Reconstructing...
			Transferring [[D Pekka] [PRO.T/fin{v,V} [[D Merja-] en{V}]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [PRO.T/fin{v,V} [[D Merja-] en{V}]]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.v{V} [[D Merja-] en{V}]]]]
						Extracted head "PRO.etsi" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.v [PRO.etsi [[D Merja-] en{V}]]]]]
					Extracted head "PRO.juokse-" from en and created [[D Pekka] [PRO.T/fin [PRO.v [PRO.etsi [[D Merja-] [en PRO.juokse-]]]]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:239 [PRO.T/fin [<DP>:239 [PRO.v [PRO.etsi [[D Merja-] [en PRO.juokse-]]]]]]]
					en at the right failed to tail [CAT:T]
						<en PRO.juokse-> was made an adjunct.
					en at the right failed to tail [CAT:T]
					= [<D Pekka> [T/fin [<D Pekka> [v [etsi [[D Merja-] <en juokse->]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:239.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:239.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:239.
			= [<D Pekka> [T/fin [<D Pekka> [v [etsi [[D Merja-] <en juokse->]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:239 [phi.T/fin [<DP>:239 [PRO.v [PRO.etsi [[D Merja-] <en PRO.juokse->]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				PRO.etsi with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D Merja-] <en juokse->]    (alternatives: 2. <D Pekka> 3. T/fin 4. <D Pekka> )
				PRO.juokse- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				Transfer to C-I successful.
			en<[ADV, V, v, TT/fin]> failed to tail features [CAT:T]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
etsi:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:search', 'PF:etsi', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
en:['-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:en', 'TAIL:CAT:T']
juokse-:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:run', 'PF:juokse-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.etsi: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]
en: [ADV, V, v, TT/fin]
PRO.juokse-: [V, ADV, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "juokse-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[PRO.T/fin{v,V} D{N}] en]
			Transferring [PRO.T/fin{v,V} D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} D{N}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} D{N}]]
						Extracted head "PRO.etsi" and reconstructed it = [PRO.T/fin [PRO.v [PRO.etsi D{N}]]]
					Extracted head "Merja-" from D and created [PRO.T/fin [PRO.v [PRO.etsi [D Merja-]]]]
				Feature processing:
				Floater movement reconstruction:
					= [T/fin [v [etsi [D Merja-]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			=[[D Pekka] [[pro/x.T/fin [PRO.v [PRO.etsi [D Merja-]]]] en]]

24.

		Consume "juokse-"

		[[D Pekka] [[T/fin [v [etsi [D Merja-]]]] en]] + juokse-
			Filtering out impossible merge sites...
			Sink "juokse-" into en because they are inside the same phonological word.
		Exploring solution number (1) =[en*juokse-]
			=[[D Pekka] [[pro/x.T/fin [PRO.v [PRO.etsi [D Merja-]]]] en{V}]]

25.
	>>>	Trying candidate parse [[D Pekka] [[T/fin [v [etsi [D Merja-]]]] en{V}]] (2.)
		Reconstructing...
			Transferring [[D Pekka] [[pro/x.T/fin [PRO.v [PRO.etsi [D Merja-]]]] en{V}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [[pro/x.T/fin [PRO.v [PRO.etsi [D Merja-]]]] en{V}]].
					Extracted head "PRO.juokse-" from en and created [[D Pekka] [[pro/x.T/fin [PRO.v [PRO.etsi [D Merja-]]]] [en PRO.juokse-]]]
				Feature processing:
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					en at the right failed to tail [CAT:T]
						<en PRO.juokse-> was made an adjunct.
					= [[D Pekka] [[T/fin [v [etsi [D Merja-]]]] <en juokse->]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D Pekka " into memory buffer from SPEC of "pro/x.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D Pekka]:22 from memory buffer into Spec of PRO.v
					Result [[D Pekka]:22 [[pro/x.T/fin [(DP):22 [PRO.v [PRO.etsi [D Merja-]]]]] <en PRO.juokse->]]
				Agreement reconstruction:
					pro/x.T/fin has unvalued phi-features {'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):22.
			= [[D Pekka] [[T/fin [[D Pekka] [v [etsi [D Merja-]]]]] <en juokse->]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:22 [[phi.T/fin [(DP):22 [PRO.v [PRO.etsi [D Merja-]]]]] <en PRO.juokse->]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Pekka]    (alternatives: 2. T/fin 3. [D Pekka] 4. [D Pekka] )
				PRO.etsi with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. [D Pekka] 3. T/fin 4. [D Pekka] 5. [D Pekka] )
				PRO.juokse- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Pekka]    (alternatives: )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.etsi([D Merja-])', 'PRO.juokse-([D Pekka])', 'PRO.v([D Pekka])']
!--->		Tests passed (with 25/295 operations) <------------------------------------
		Solution:
		[[D Pekka] [[T/fin [[D Pekka] [v [etsi [D Merja-]]]]] <en juokse->]]
		Grammar: [[D Pekka]:1 [[phi.T/fin [(DP):1 [PRO.v [PRO.etsi [D Merja-]]]]] <en PRO.juokse->]]
		Spellout TT/finP = [DP:1 [[TT/fin [__:1 [v [V [D N]]]]] ADVP]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
etsi:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:search', 'PF:etsi', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
en:['-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:en', 'TAIL:CAT:T']
juokse-:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:run', 'PF:juokse-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
etsi:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:search', 'PF:etsi', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
en:['-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:en', 'TAIL:CAT:T']
juokse-:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:run', 'PF:juokse-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
PRO.etsi: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Merja-: [N, D, V, v, TT/fin]
en: [ADV]
PRO.juokse-: [V, ADV]

			Checking if the sentence is ambiguous...
		Next word "Merjaa" contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

		Consume "$D"



\========================================================================
# 95
['haluan', 'lahtea']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "haluan" contains multiple morphemes ['$[-n]', '$T/fin', '$v', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.

		Consume "haluaa"

		T/fin{v} + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*haluaa]
			=PRO.T/fin{v,V}

5.
		Next word "lahtea" contains multiple morphemes ['$A/inf', 'lahte-']

		Consume "A/inf"

		T/fin{v,V} + A/inf
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} A/inf]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.haluaa" from PRO.v and created [PRO.T/fin [PRO.v PRO.haluaa]]
				A phi-marked head "PRO.haluaa" lacks complement
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} A/inf]

6.

		Consume "lahtea"

		[T/fin{v,V} A/inf] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[PRO.T/fin{v,V} A/inf{V}]

7.
	>>>	Trying candidate parse [T/fin{v,V} A/inf{V}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} A/inf{V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} A/inf{V}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} A/inf{V}]]
						Extracted head "PRO.haluaa" and reconstructed it = [PRO.T/fin [PRO.v [PRO.haluaa A/inf{V}]]]
					Extracted head "PRO.lahtea" from A/inf and created [PRO.T/fin [PRO.v [PRO.haluaa [A/inf PRO.lahtea]]]]
				Feature processing:
					A/inf has neutralized PHI-feature, will be resolved into -ARG due to PRO.haluaa
				Floater movement reconstruction:
					= [T/fin [v [haluaa [A/inf lahtea]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF from the edge of phi.T/fin.
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					phi.T/fin acquired PHI:PER:1 from the edge of phi.T/fin.
			= [T/fin [v [haluaa [A/inf lahtea]]]]
		Checking LF-interface conditions.
			Trying to transfer [phi.T/fin [PRO.v [PRO.haluaa [A/inf PRO.lahtea]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.haluaa with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				PRO.lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.haluaa(T/fin)', 'PRO.lahtea(T/fin)', 'PRO.v(T/fin)']
!--->		Tests passed (with 7/86 operations) <------------------------------------
		Solution:
		[T/fin [v [haluaa [A/inf lahtea]]]]
		Grammar: [phi.T/fin [PRO.v [PRO.haluaa [A/inf PRO.lahtea]]]]
		Spellout TT/finP = [TT/fin [v [V [INF V]]]]
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

phi.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.haluaa: [V, v, TT/fin]
A/inf: [INF, V, v, TT/fin]
PRO.lahtea: [V, INF, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 96
['haluaa', 'lahtea']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "haluaa" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=None

2.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
			=PRO.T/fin

3.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=PRO.T/fin{v}

4.

		Consume "haluaa"

		T/fin{v} + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*haluaa]
			=PRO.T/fin{v,V}

5.
		Next word "lahtea" contains multiple morphemes ['$A/inf', 'lahte-']

		Consume "A/inf"

		T/fin{v,V} + A/inf
			Filtering out impossible merge sites...
		Exploring solution number (1) =[PRO.T/fin{v,V} A/inf]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.haluaa" from PRO.v and created [PRO.T/fin [PRO.v PRO.haluaa]]
				A phi-marked head "PRO.haluaa" lacks complement
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[PRO.T/fin{v,V} A/inf]

6.

		Consume "lahtea"

		[T/fin{v,V} A/inf] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[PRO.T/fin{v,V} A/inf{V}]

7.
	>>>	Trying candidate parse [T/fin{v,V} A/inf{V}] (1.)
		Reconstructing...
			Transferring [PRO.T/fin{v,V} A/inf{V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [PRO.T/fin{v,V} A/inf{V}].
						Extracted head "PRO.v{V}" and reconstructed it = [PRO.T/fin [PRO.v{V} A/inf{V}]]
						Extracted head "PRO.haluaa" and reconstructed it = [PRO.T/fin [PRO.v [PRO.haluaa A/inf{V}]]]
					Extracted head "PRO.lahtea" from A/inf and created [PRO.T/fin [PRO.v [PRO.haluaa [A/inf PRO.lahtea]]]]
				Feature processing:
					A/inf has neutralized PHI-feature, will be resolved into -ARG due to PRO.haluaa
				Floater movement reconstruction:
					= [T/fin [v [haluaa [A/inf lahtea]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			= [T/fin [v [haluaa [A/inf lahtea]]]]
		Checking LF-interface conditions.
			Trying to transfer [pro/x.T/fin [PRO.v [PRO.haluaa [A/inf PRO.lahtea]]]] into Conceptual-Intentional system...
				pro/x.T/fin with ['PHI:DET:_'] was associated at LF with:
					No antecedent found, LF-object crashes.
					Cannot be interpreted at C-I
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					Generic
				PRO.haluaa with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					Generic
				PRO.lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					Generic
				Transfer to C-I crashed.
			Final tail-head check failed.
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

pro/x.T/fin: [TT/fin]
PRO.v: [v, TT/fin]
PRO.haluaa: [V, v, TT/fin]
A/inf: [INF, V, v, TT/fin]
PRO.lahtea: [V, INF, V, v, TT/fin]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "halua-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "haluaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 97
['Pekka', 'sanoo', 'etta', 'haluaa', 'lahtea']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "Pekka" contains multiple morphemes ['$def', '$hum', '$def', '$3p', '$sg', '$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

		Consume "$nom"

			=None

6.
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

		Consume "$D"

			=None

7.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
			=D

8.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

9.
		Next word "sanoo" contains multiple morphemes ['$[-V]', '$T/fin', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=D{N}

10.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					Reconstructing head movement for D{N}.
					Extracted head "Pekka" from D and created [D Pekka]
					D was opened into [D Pekka].
				Feature processing:
				Floater movement reconstruction:
					= [D Pekka]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D Pekka] PRO.T/fin]

11.

		Consume "sano-"

		[[D Pekka] T/fin] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*sano-]
			=[[D Pekka] PRO.T/fin{V}]

12.

		Consume "että"

		[[D Pekka] T/fin{V}] + että
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> sano-]]] että] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{V} että]
			Transferring PRO.T/fin{V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{V}.
					Extracted head "PRO.sano-" from PRO.T/fin and created [PRO.T/fin PRO.sano-]
				PRO.sano- (sano-) is missing complement FORCE
					PRO.T/fin{V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{V}" lacks complement
					Extraposition will be tried on PRO.T/fin{V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} että]]

13.
		Next word "haluaa" contains multiple morphemes ['$[-V]', '$T/fin', '$v', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

		Consume "$T/fin"

			=[[D Pekka] [PRO.T/fin{V} että]]

14.

		Adding inflectional features ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		[[D Pekka] [T/fin{V} että]] + T/fin
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- että]]]] PRO.T/fin] due to bad left branch.
				Reject [[T/fin [sano- että]] PRO.T/fin] due to bad left branch.
		Exploring solution number (1) =[että T/fin]
			Transferring että to LF.
				head movement reconstruction:
					Reconstructing head movement for että.
				Feature processing:
				Floater movement reconstruction:
					= että
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				että probing for CAT:T/fin failed.
				A phi-marked head "että" lacks complement
					Extraposition will be tried on että.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin]]]

15.

		Consume "v"

		[[D Pekka] [T/fin{V} [että T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v}]]]

16.

		Consume "haluaa"

		[[D Pekka] [T/fin{V} [että T/fin{v}]]] + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*haluaa]
			=[[D Pekka] [PRO.T/fin{V} [että PRO.T/fin{v,V}]]]

17.
		Next word "lahtea" contains multiple morphemes ['$A/inf', 'lahte-']

		Consume "A/inf"

		[[D Pekka] [T/fin{V} [että T/fin{v,V}]]] + A/inf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin [v haluaa]]]]]]] A/inf] due to bad left branch.
				Reject [[T/fin [sano- [että [T/fin [v haluaa]]]]] A/inf] due to bad left branch.
				Reject [[että [T/fin [v haluaa]]] A/inf] due to bad left branch.
		Exploring solution number (1) =[PRO.T/fin{v,V} A/inf]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.haluaa" from PRO.v and created [PRO.T/fin [PRO.v PRO.haluaa]]
				A phi-marked head "PRO.haluaa" lacks complement
					PRO.T/fin{v,V} was not opened because it would not constitute a legitimate left branch at LF.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} A/inf]]]]

18.

		Consume "lahtea"

		[[D Pekka] [T/fin{V} [että [T/fin{v,V} A/inf]]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*lahtea]
			=[[D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} A/inf{V}]]]]

19.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [että [T/fin{v,V} A/inf{V}]]]] (1.)
		Reconstructing...
			Transferring [[D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} A/inf{V}]]]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D Pekka] [PRO.T/fin{V} [että [PRO.T/fin{v,V} A/inf{V}]]]].
						Extracted head "PRO.sano-" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin{v,V} A/inf{V}]]]]]
						Extracted head "PRO.v{V}" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v{V} A/inf{V}]]]]]]
						Extracted head "PRO.haluaa" and reconstructed it = [[D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.haluaa A/inf{V}]]]]]]]
					Extracted head "PRO.lahtea" from A/inf and created [[D Pekka] [PRO.T/fin [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.haluaa [A/inf PRO.lahtea]]]]]]]]
				Feature processing:
					A/inf has neutralized PHI-feature, will be resolved into -ARG due to PRO.haluaa
				Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
						<D Pekka> was made an adjunct.
						Floater <D Pekka> dropped.
						 = [<D Pekka>:243 [PRO.T/fin [<DP>:243 [PRO.sano- [että [PRO.T/fin [PRO.v [PRO.haluaa [A/inf PRO.lahtea]]]]]]]]]
					= [<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin [v [haluaa [A/inf lahtea]]]]]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:243.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from <DP>:243.
					phi.T/fin acquired PHI:PER:3 by phi-Agree from <DP>:243.
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:NUM:SG from the edge of phi.T/fin.
					pro/x.T/fin acquired PHI:PER:3 from the edge of pro/x.T/fin.
			= [<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin [v [haluaa [A/inf lahtea]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:243 [phi.T/fin [<DP>:243 [PRO.sano- [että [pro/x.T/fin [PRO.v [PRO.haluaa [A/inf PRO.lahtea]]]]]]]]] into Conceptual-Intentional system...
				PRO.sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				pro/x.T/fin with ['PHI:DET:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				PRO.haluaa with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				PRO.lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin 3. <D Pekka> )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.haluaa(<D Pekka>)', 'PRO.lahtea(<D Pekka>)', 'PRO.sano-(<D Pekka>)', 'PRO.v(<D Pekka>)', 'pro/x.T/fin(<D Pekka>)']
!--->		Tests passed (with 19/211 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [sano- [että [T/fin [v [haluaa [A/inf lahtea]]]]]]]]]
		Grammar: [<D Pekka>:1 [phi.T/fin [<DP>:1 [PRO.sano- [että [pro/x.T/fin [PRO.v [PRO.haluaa [A/inf PRO.lahtea]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [ [TT/fin [v [V [INF V]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D]
Pekka: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.sano-: [V, TT/fin]
että: [, V, TT/fin]
pro/x.T/fin: [TT/fin, , V, TT/fin]
PRO.v: [v, TT/fin, , V, TT/fin]
PRO.haluaa: [V, v, TT/fin, , V, TT/fin]
A/inf: [INF, V, v, TT/fin, , V, TT/fin]
PRO.lahtea: [V, INF, V, v, TT/fin, , V, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 98
['io', 'adoro*', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "io" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$sg', '$D', 'I-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
			=D

7.

		Consume "I"

		D + I
			Filtering out impossible merge sites...
			Sink "I" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*I]
			=D{N}

8.
		Next word "adoro*" contains multiple morphemes ['$[-o]', '$T/fin', '$v', 'adora-*']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "I" from D and created [D I]
					Reconstructing head movement for D{N}.
					Extracted head "I" from D and created [D I]
					D was opened into [D I].
				Feature processing:
				Floater movement reconstruction:
					= [D I]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D I] PRO.T/fin]

10.

		Consume "v"

		[[D I] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*v]
			=[[D I] PRO.T/fin{v}]

11.

		Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[D I] PRO.T/fin{v,V}]

12.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D I] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D I] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D I] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D I] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D I] PRO.T/fin{v,V}]

17.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D I] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D I] PRO.T/fin{v,V}] + D = -98]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D I] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.v{V}" from PRO.T/fin and created [PRO.T/fin PRO.v{V}]
					Reconstructing head movement for PRO.v{V}.
					Extracted head "PRO.adora" from PRO.v and created [PRO.T/fin [PRO.v PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D I] [PRO.T/fin{v,V} D]]

18.

		Consume "Luisa"

		[[D I] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D I] [PRO.T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D I] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D I] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D I] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.v{V}" and reconstructed it = [[D I] [PRO.T/fin [PRO.v{V} D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[D I] [PRO.T/fin [PRO.v [PRO.adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D I] [PRO.T/fin [PRO.v [PRO.adora [D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [v [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D I]:42 from memory buffer into Spec of PRO.v
					Result [[D I]:42 [PRO.T/fin [(DP):42 [PRO.v [PRO.adora [D Luisa]]]]]]
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):42.
					phi.T/fin acquired PHI:GEN:N by phi-Agree from (DP):42.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from (DP):42.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from (DP):42.
					PRO.adora has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.adora acquired PHI:DET:DEF by phi-Agree from [D Luisa].
					phi.adora acquired PHI:GEN:F by phi-Agree from [D Luisa].
					phi.adora acquired PHI:NUM:SG by phi-Agree from [D Luisa].
					phi.adora acquired PHI:PER:3 by phi-Agree from [D Luisa].
			= [[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D I]:42 [phi.T/fin [(DP):42 [PRO.v [phi.adora [D Luisa]]]]]] into Conceptual-Intentional system...
				PRO.v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [adora [D Luisa]]    (alternatives: 2. [D I] 3. T/fin 4. [D I] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['PRO.v([adora [D Luisa]])']
!--->		Tests passed (with 19/170 operations) <------------------------------------
		Solution:
		[[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Grammar: [[D I]:1 [phi.T/fin [(DP):1 [PRO.v [phi.adora [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['!SPEC:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['!SPEC:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
I: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
PRO.v: [v, TT/fin]
phi.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 99
['io', 'adoro**', 'Luisa']


Using lexicon "lexicon.txt".
			=None

1.
		Next word "io" contains multiple morphemes ['$n', '$hum', '$def', '$1p', '$sg', '$D', 'I-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.

		Consume "$hum"

			=None

2.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=None

3.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$1p"

			=None

4.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.

		Consume "$sg"

			=None

5.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=None

6.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
			=D

7.

		Consume "I"

		D + I
			Filtering out impossible merge sites...
			Sink "I" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*I]
			=D{N}

8.
		Next word "adoro**" contains multiple morphemes ['$[-o]', '$T/fin', '$vv', 'adora-*']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

		Consume "$T/fin"

			=D{N}

9.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] to T/fin
		= ['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			Transferring D{N} to LF.
				head movement reconstruction:
					Reconstructing head movement for D{N}.
					Extracted head "I" from D and created [D I]
					Reconstructing head movement for D{N}.
					Extracted head "I" from D and created [D I]
					D was opened into [D I].
				Feature processing:
				Floater movement reconstruction:
					= [D I]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				Agreement reconstruction:
			=[[D I] PRO.T/fin]

10.

		Consume "vv"

		[[D I] T/fin] + vv
			Filtering out impossible merge sites...
			Sink "vv" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin*vv]
			=[[D I] PRO.T/fin{v}]

11.

		Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[PRO.T/fin{v}*adora]
			=[[D I] PRO.T/fin{v,V}]

12.
		Next word "Luisa" contains multiple morphemes ['$f', '$hum', '$def', '$3p', '$sg', '$D', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

		Consume "$hum"

			=[[D I] PRO.T/fin{v,V}]

13.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

		Consume "$def"

			=[[D I] PRO.T/fin{v,V}]

14.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

		Consume "$3p"

			=[[D I] PRO.T/fin{v,V}]

15.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

		Consume "$sg"

			=[[D I] PRO.T/fin{v,V}]

16.
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

		Consume "$D"

			=[[D I] PRO.T/fin{v,V}]

17.

		Adding inflectional features ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3'] to D
		= ['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']

		Consume "D"

		[[D I] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				(DP):45 has no thematic role.
				Avoid [[D I] [T/fin [[D I] [vv [[D I] adora]]]]] as left branch because it constitutes illicit structure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D I] PRO.T/fin{v,V}] + D = -197]
				PRO.T/fin{v,V} + D = 206]
		Ranking completed:
			1. [PRO.T/fin{v,V}; D]
			2. [[[D I] PRO.T/fin{v,V}]; D]
		Exploring solution number (1) =[PRO.T/fin{v,V} D]
			Transferring PRO.T/fin{v,V} to LF.
				head movement reconstruction:
					Reconstructing head movement for PRO.T/fin{v,V}.
					Extracted head "PRO.vv{V}" from PRO.T/fin and created [PRO.T/fin PRO.vv{V}]
					Reconstructing head movement for PRO.vv{V}.
					Extracted head "PRO.adora" from PRO.vv and created [PRO.T/fin [PRO.vv PRO.adora]]
					PRO.T/fin{v,V} was not opened because it is not DP.
				Feature processing:
				Floater movement reconstruction:
					= T/fin{v,V}
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				PRO.T/fin{v,V} probing for CAT:V failed.
				A phi-marked head "PRO.T/fin{v,V}" lacks complement
					Extraposition will be tried on PRO.T/fin{v,V}.
				Agreement reconstruction:
			=[[D I] [PRO.T/fin{v,V} D]]

18.

		Consume "Luisa"

		[[D I] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[D I] [PRO.T/fin{v,V} D{N}]]

19.
	>>>	Trying candidate parse [[D I] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Transferring [[D I] [PRO.T/fin{v,V} D{N}]] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D I] [PRO.T/fin{v,V} D{N}]].
						Extracted head "PRO.vv{V}" and reconstructed it = [[D I] [PRO.T/fin [PRO.vv{V} D{N}]]]
						Extracted head "PRO.adora" and reconstructed it = [[D I] [PRO.T/fin [PRO.vv [PRO.adora D{N}]]]]
					Extracted head "Luisa" from D and created [[D I] [PRO.T/fin [PRO.vv [PRO.adora [D Luisa]]]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [vv [adora [D Luisa]]]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D I]:47 from memory buffer into Spec of PRO.vv
					Result [[D I]:47 [PRO.T/fin [(DP):47 [PRO.vv [PRO.adora [D Luisa]]]]]]
					Moving "____" into memory buffer from SPEC of "PRO.vv".
					Memory buffer: [[D N]]
					Dropping constituent (DP):47 from memory buffer into Spec of PRO.adora
					Result [[D I]:47 [PRO.T/fin [(DP):47 [PRO.vv [(DP):47 [PRO.adora [D Luisa]]]]]]]
					Moving "____" into memory buffer from SPEC of "PRO.adora".
					Memory buffer: [[D N]]
				(DP):47 has no thematic role.
					Extraposition will be tried on [[D I]:47 [PRO.T/fin [(DP):47 [PRO.vv [(DP):47 [PRO.adora [D Luisa]]]]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):47.
					phi.T/fin acquired PHI:GEN:N by phi-Agree from (DP):47.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from (DP):47.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from (DP):47.
					PRO.vv has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.vv acquired PHI:DET:DEF by phi-Agree from (DP):47.
					phi.vv acquired PHI:GEN:N by phi-Agree from (DP):47.
					phi.vv acquired PHI:NUM:SG by phi-Agree from (DP):47.
					phi.vv acquired PHI:PER:1 by phi-Agree from (DP):47.
					PRO.adora has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.adora acquired PHI:DET:DEF by phi-Agree from [D Luisa].
					phi.adora acquired PHI:GEN:F by phi-Agree from [D Luisa].
					phi.adora acquired PHI:NUM:SG by phi-Agree from [D Luisa].
					phi.adora acquired PHI:PER:3 by phi-Agree from [D Luisa].
			= [[D I] [T/fin [[D I] [vv [[D I] [adora [D Luisa]]]]]]]
		Checking LF-interface conditions.
				(DP):47 has no thematic role.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
vv:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:D', '-SPEC:N', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:vv', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
adora:['!SPEC:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
I: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
phi.vv: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
phi.adora: [V, v, TT/fin]
D: [D, V, v, TT/fin]
Luisa: [N, D, V, v, TT/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D I] PRO.T/fin{v,V}] D]
			Transferring [[D I] PRO.T/fin{v,V}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[D I] PRO.T/fin{v,V}].
					Extracted head "PRO.vv{V}" from PRO.T/fin and created [[D I] [PRO.T/fin PRO.vv{V}]]
					Reconstructing head movement for PRO.vv{V}.
					Extracted head "PRO.adora" from PRO.vv and created [[D I] [PRO.T/fin [PRO.vv PRO.adora]]]
				Feature processing:
				Floater movement reconstruction:
					= [[D I] [T/fin [vv adora]]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
					Moving "D I " into memory buffer from SPEC of "PRO.T/fin".
					Memory buffer: [[D N]]
					Dropping constituent [D I]:49 from memory buffer into Spec of PRO.vv
					Result [[D I]:49 [PRO.T/fin [(DP):49 [PRO.vv PRO.adora]]]]
					Moving "____" into memory buffer from SPEC of "PRO.vv".
					Memory buffer: [[D N]]
					Dropping constituent (DP):49 from memory buffer into Spec of PRO.adora
					Result [[D I]:49 [PRO.T/fin [(DP):49 [PRO.vv [(DP):49 PRO.adora]]]]]
				(DP):49 has no thematic role.
					Extraposition will be tried on [[D I]:49 [PRO.T/fin [(DP):49 [PRO.vv [(DP):49 PRO.adora]]]]].
				Agreement reconstruction:
					PRO.T/fin has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.T/fin acquired PHI:DET:DEF by phi-Agree from (DP):49.
					phi.T/fin acquired PHI:GEN:N by phi-Agree from (DP):49.
					phi.T/fin acquired PHI:NUM:SG by phi-Agree from (DP):49.
					phi.T/fin acquired PHI:PER:1 by phi-Agree from (DP):49.
					PRO.vv has unvalued phi-features {'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:DET:_'}
					phi.vv acquired PHI:DET:DEF by phi-Agree from (DP):49.
					phi.vv acquired PHI:GEN:N by phi-Agree from (DP):49.
					phi.vv acquired PHI:NUM:SG by phi-Agree from (DP):49.
					phi.vv acquired PHI:PER:1 by phi-Agree from (DP):49.
			=[[[D I]:49 [phi.T/fin [(DP):49 [phi.vv [(DP):49 PRO.adora]]]]] D]

20.

		Consume "Luisa"

		[[[D I] [T/fin [[D I] [vv [[D I] adora]]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Luisa]
			=[[[D I]:49 [phi.T/fin [(DP):49 [phi.vv [(DP):49 PRO.adora]]]]] D{N}]

21.
	>>>	Trying candidate parse [[[D I] [T/fin [[D I] [vv [[D I] adora]]]]] D{N}] (2.)
		Reconstructing...
			Transferring [[[D I]:49 [phi.T/fin [(DP):49 [phi.vv [(DP):49 PRO.adora]]]]] D{N}] to LF.
				head movement reconstruction:
					Reconstructing head movement for [[[D I]:49 [phi.T/fin [(DP):49 [phi.vv [(DP):49 PRO.adora]]]]] D{N}].
					Extracted head "Luisa" from D and created [[[D I]:49 [phi.T/fin [(DP):49 [phi.vv [(DP):49 PRO.adora]]]]] [D Luisa]]
				Feature processing:
				Floater movement reconstruction:
					= [[[D I] [T/fin [[D I] [vv [[D I] adora]]]]] [D Luisa]]
				Phrasal movement reconstruction:
					Dropping A-/A-bar movement.
				(DP):49 has no thematic role.
				D has unaccetable specifier [[D I]:49 [phi.T/fin [(DP):49 [phi.vv [(DP):49 PRO.adora]]]]].
					Extraposition will be tried on [[[D I]:49 [phi.T/fin [(DP):49 [phi.vv [(DP):49 PRO.adora]]]]] [D Luisa]].
						<D Luisa> was made an adjunct.
					<D Luisa> was made adjunct by an extraposition rule.
				(DP):49 has no thematic role.
					The structure is still illicit! Try phi-tailing as a last resort?
				Agreement reconstruction:
			= [[[D I] [T/fin [[D I] [vv [[D I] adora]]]]] <D Luisa>]
		Checking LF-interface conditions.
				(DP):49 has no thematic role.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
vv:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:D', '-SPEC:N', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:vv', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
adora:['!SPEC:*', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:PHI:DET:DEF,PHI:GEN:F,PHI:HUM:HUM,PHI:NUM:SG,PHI:PER:3,!COMP:*', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D]
I: [N, D]
phi.T/fin: [TT/fin]
(D): [D, TT/fin]
(N): [N, D, TT/fin]
phi.vv: [v, TT/fin]
(D): [D, v, TT/fin]
(N): [N, D, v, TT/fin]
PRO.adora: [V, v, TT/fin]
D: [D]
Luisa: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$3p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adora-*".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$vv".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$T/fin".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "adoro**".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "I-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$sg".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$1p".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$def".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$hum".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
