

\========================================================================
# 1
['Pekka', 'nukkui']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

5.

		Consume "nukku"

		[[D Pekka] T/fin] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=[[D Pekka] T/fin{V}]

6.
	>>>	Trying candidate parse [[D Pekka] T/fin{V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] T/fin{V}].
				Extracted head "nukku" from T/fin and created [[D Pekka] [T/fin nukku]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [T/fin nukku]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:1 [T/fin [<DP>:1 nukku]]]
				= [<D Pekka> [T/fin [<D Pekka> nukku]]]
			Dropping A-/A-bar movement.
			= [<D Pekka> [T/fin [<D Pekka> nukku]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T/fin [<DP>:1 nukku]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 6/48 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> nukku]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 nukku]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 V]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
nukku: [V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 2
['Pekka#foc', 'nukkui']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'ABAR:FOC', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

6.

		Consume "nukku"

		[[D Pekka] T/fin] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=[[D Pekka] T/fin{V}]

7.
	>>>	Trying candidate parse [[D Pekka] T/fin{V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] T/fin{V}].
				Extracted head "nukku" from T/fin and created [[D Pekka] [T/fin nukku]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [T/fin nukku]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:1 [T/fin [<DP>:1 nukku]]]
				= [<D Pekka> [T/fin [<D Pekka> nukku]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'FIN/T/fin', 'T/fin', 'FIN'}
			= [<D Pekka> [T/fin [<D Pekka> nukku]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T/fin [<DP>:1 nukku]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 7/55 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> nukku]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 nukku]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 V]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
nukku: [V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 3
['nukkui', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']
			=T/fin

2.

		Consume "nukku"

		T/fin + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=T/fin{V}

3.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=T/fin{V}

4.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} D]
			T/fin{V} cannot be opened.
			=[T/fin{V} D]

5.

		Consume "Pekka"

		[T/fin{V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T/fin{V} D{N}]

6.
	>>>	Trying candidate parse [T/fin{V} D{N}] (1.)
		Reconstructing...
			Reconstructing head movement for [T/fin{V} D{N}].
				Extracted head "nukku" and reconstructed it = [T/fin [nukku D{N}]]
				Extracted head "Pekka" from D and created [T/fin [nukku [D Pekka]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at [nukku <D Pekka>]
				= [T/fin [nukku <D Pekka>]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				Extraposition will be tried on [T/fin [nukku <D Pekka>]].
			= [T/fin [nukku <D Pekka>]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin: [T/fin]
nukku: [V, T/fin]
D: [D, V, T/fin]
Pekka: [N, D, V, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkui".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 4
['nukkui#foc', 'Pekka']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'nukkui']
			=C

2.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		C + T/fin
			Filtering out impossible merge sites...
			Sink "T/fin" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T/fin]
			=C{T/fin}

3.

		Consume "nukku"

		C{T/fin} + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into C{T/fin} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin}*nukku]
			=C{T/fin,V}

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=C{T/fin,V}

5.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		C{T/fin,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T/fin,V} D]
			C{T/fin,V} cannot be opened.
			=[C{T/fin,V} D]

6.

		Consume "Pekka"

		[C{T/fin,V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T/fin,V} D{N}]

7.
	>>>	Trying candidate parse [C{T/fin,V} D{N}] (1.)
		Reconstructing...
			Reconstructing head movement for [C{T/fin,V} D{N}].
				Head reconstruction failed for T/fin{V}, merged locally as a last resort.
				Extracted head "T/fin{V}" and reconstructed it = [C [T/fin{V} D{N}]]
				Extracted head "nukku" and reconstructed it = [C [T/fin [nukku D{N}]]]
				Extracted head "Pekka" from D and created [C [T/fin [nukku [D Pekka]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at [T/fin [nukku <D Pekka>]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<DP>:1 [T/fin [nukku <D Pekka>:1]]]]
				= [C [<D Pekka> [T/fin [nukku <D Pekka>]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T/fin".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			= [C [<D Pekka> [T/fin [<D Pekka> [nukku <D Pekka>]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<DP>:1 [T/fin [<DP>:1 [nukku <D Pekka>:1]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 7/64 operations) <------------------------------------
		Solution:
		[C [<D Pekka> [T/fin [<D Pekka> [nukku <D Pekka>]]]]]
		Grammar: [C [<DP>:1 [T/fin [<DP>:1 [nukku <D Pekka>:1]]]]]
		Spellout C/finP = [C/fin [__:1 [T/fin [__:1 [V DP:1]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C: [C/fin]
(D): [D, C/fin]
(N): [N, D, C/fin]
T/fin: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
nukku: [V, T/fin, C/fin]
D: [D, V, T/fin, C/fin]
Pekka: [N, D, V, T/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 5
['Pekka', 'ei', 'nukkunut']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "nukku"

		[[D Pekka] [ei T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [ei T{V}]]

7.
	>>>	Trying candidate parse [[D Pekka] [ei T{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei T{V}]].
				Extracted head "nukku" from T and created [[D Pekka] [ei [T nukku]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [ei [T nukku]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:1 [ei [<DP>:1 [T nukku]]]]
				= [<D Pekka> [ei [<D Pekka> [T nukku]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			= [<D Pekka> [ei [<D Pekka> [T [<D Pekka> nukku]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 nukku]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 7/65 operations) <------------------------------------
		Solution:
		[<D Pekka> [ei [<D Pekka> [T [<D Pekka> nukku]]]]]
		Grammar: [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 nukku]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [__:1 [T [__:1 V]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
nukku: [V, T, Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 6
['Pekka#foc', 'ei', 'nukkunut']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'ABAR:FOC', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

6.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

7.

		Consume "nukku"

		[[D Pekka] [ei T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [ei T{V}]]

8.
	>>>	Trying candidate parse [[D Pekka] [ei T{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei T{V}]].
				Extracted head "nukku" from T and created [[D Pekka] [ei [T nukku]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [ei [T nukku]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:1 [ei [<DP>:1 [T nukku]]]]
				= [<D Pekka> [ei [<D Pekka> [T nukku]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}
				Moving "____" into memory buffer from SPEC of "T".
				Criterial features {'FOC'} copied to {'T'}
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			= [<D Pekka> [ei [<D Pekka> [T [<D Pekka> nukku]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 nukku]]]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 8/73 operations) <------------------------------------
		Solution:
		[<D Pekka> [ei [<D Pekka> [T [<D Pekka> nukku]]]]]
		Grammar: [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 nukku]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [__:1 [T [__:1 V]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iFOC/uFOC', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iFOC/uFOC', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
nukku: [V, T, Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 7
['Pekka', 'nukkunut', 'ei']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "nukku"

		[[D Pekka] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] T{V}]

6.

		Consume "ei"

		[[D Pekka] T{V}] + ei
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [T nukku]] ei] due to bad left branch.
		Exploring solution number (1) =[T{V} ei]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} ei]]

7.
	>>>	Trying candidate parse [[D Pekka] [T{V} ei]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T{V} ei]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T [nukku ei]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [T [nukku ei]]
				= [[D Pekka] [T [nukku ei]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of ei
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [[D Pekka]:1 [T [nukku [(DP):1 ei]]]].
			= [[D Pekka] [T [nukku [[D Pekka] ei]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']

D: [D]
Pekka: [N, D]
T: [T]
nukku: [V, T]
(D): [D, V, T]
(N): [N, D, V, T]
ei: [Neg/fin, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 8
['Pekka#foc', 'nukkunut', 'ei']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'ABAR:FOC', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

6.

		Consume "nukku"

		[[D Pekka] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] T{V}]

7.

		Consume "ei"

		[[D Pekka] T{V}] + ei
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [T nukku]] ei] due to bad left branch.
		Exploring solution number (1) =[T{V} ei]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} ei]]

8.
	>>>	Trying candidate parse [[D Pekka] [T{V} ei]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T{V} ei]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T [nukku ei]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [T [nukku ei]]
				= [[D Pekka] [T [nukku ei]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Criterial features {'FOC'} copied to {'T'}
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of ei
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [[D Pekka]:1 [T [nukku [(DP):1 ei]]]].
			= [[D Pekka] [T [nukku [[D Pekka] ei]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']

D: [D]
Pekka: [N, D]
T: [T]
nukku: [V, T]
(D): [D, V, T]
(N): [N, D, V, T]
ei: [Neg/fin, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka#foc".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 9
['ei', 'Pekka', 'nukkunut']


			=None

1.
			=ei

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=ei

3.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		ei + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[ei D]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[ei D]

4.

		Consume "Pekka"

		[ei D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[ei D{N}]

5.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[ei D{N}] + T
			Filtering out impossible merge sites...
				Reject [[ei [D Pekka]] T] due to bad left branch.
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[ei [[D Pekka] T]]

6.

		Consume "nukku"

		[ei [[D Pekka] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[ei [[D Pekka] T{V}]]

7.
	>>>	Trying candidate parse [ei [[D Pekka] T{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [ei [[D Pekka] T{V}]].
				Extracted head "nukku" from T and created [ei [[D Pekka] [T nukku]]]
			Dropping floaters...
				= [ei [[D Pekka] [T nukku]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of nukku
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [ei [[D Pekka]:1 [T [(DP):1 nukku]]]].
			= [ei [[D Pekka] [T [[D Pekka] nukku]]]]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

ei: [Neg/fin]
D: [D, Neg/fin]
Pekka: [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
nukku: [V, T, Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 10
['ei#foc', 'Pekka', 'nukkunut']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'ei']
			=C

2.

		Consume "ei"

		C + ei
			Filtering out impossible merge sites...
			Sink "ei" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*ei]
			=C{Neg/fin}

3.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=C{Neg/fin}

4.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		C{Neg/fin} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{Neg/fin} D]
			C{Neg/fin} cannot be opened.
			=[C{Neg/fin} D]

5.

		Consume "Pekka"

		[C{Neg/fin} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{Neg/fin} D{N}]

6.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[C{Neg/fin} D{N}] + T
			Filtering out impossible merge sites...
				Reject [[C [ei [D Pekka]]] T] due to bad left branch.
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[C{Neg/fin} [[D Pekka] T]]

7.

		Consume "nukku"

		[C{Neg/fin} [[D Pekka] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[C{Neg/fin} [[D Pekka] T{V}]]

8.
	>>>	Trying candidate parse [C{Neg/fin} [[D Pekka] T{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{Neg/fin} [[D Pekka] T{V}]].
				Extracted head "ei" and reconstructed it = [C [[D Pekka] [ei T{V}]]]
				Extracted head "nukku" from T and created [C [[D Pekka] [ei [T nukku]]]]
			Dropping floaters...
				[D Pekka] is in an EPP SPEC position.
				Start reconstruction at [[D Pekka] [ei [T nukku]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<D Pekka>:1 [ei [<DP>:1 [T nukku]]]]]
				= [C [<D Pekka> [ei [<D Pekka> [T nukku]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			= [C [<D Pekka> [ei [<D Pekka> [T [<D Pekka> nukku]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 nukku]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 8/69 operations) <------------------------------------
		Solution:
		[C [<D Pekka> [ei [<D Pekka> [T [<D Pekka> nukku]]]]]]
		Grammar: [C [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 nukku]]]]]]
		Spellout C/finP = [C/fin [DP:1 [Neg/fin [__:1 [T [__:1 V]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

C: [C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
ei: [Neg/fin, C/fin]
(D): [D, Neg/fin, C/fin]
(N): [N, D, Neg/fin, C/fin]
T: [T, Neg/fin, C/fin]
(D): [D, T, Neg/fin, C/fin]
(N): [N, D, T, Neg/fin, C/fin]
nukku: [V, T, Neg/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 11
['ei', 'nukkunut', 'Pekka']


			=None

1.
			=ei

2.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		ei + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[ei T]

3.

		Consume "nukku"

		[ei T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[ei T{V}]

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[ei T{V}]

5.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[ei T{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [ei [T nukku]] as left branch because it constitutes illicit structure.
				Avoid TP as SPEC for D due to unselective SPEC feature.
T{V} {'D'}{'D', 'v', '*', 'V'}
				Prioritize [T{V} D] due to complement selection.
nukku {'D'}{'P'}
[(-198, [Neg/fin T]), (4, T)]
		Ranking completed:
			1. [T{V}; D]
			2. [[ei T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[ei [T{V} D]]

6.

		Consume "Pekka"

		[ei [T{V} D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[ei [T{V} D{N}]]

7.
	>>>	Trying candidate parse [ei [T{V} D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [ei [T{V} D{N}]].
				Extracted head "nukku" and reconstructed it = [ei [T [nukku D{N}]]]
				Extracted head "Pekka" from D and created [ei [T [nukku [D Pekka]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at [T [nukku <D Pekka>]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [ei [<DP>:1 [T [nukku <D Pekka>:1]]]]
				= [ei [<D Pekka> [T [nukku <D Pekka>]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [ei [<DP>:1 [T [<DP>:1 [nukku <D Pekka>:1]]]]].
			= [ei [<D Pekka> [T [<D Pekka> [nukku <D Pekka>]]]]]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
nukku: [V, T, Neg/fin]
D: [D, V, T, Neg/fin]
Pekka: [N, D, V, T, Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[ei T{V}] D]
			Reconstructing head movement for [ei T{V}].
				Extracted head "nukku" from T and created [ei [T nukku]]
			Dropping floaters...
				= [ei [T nukku]]
			Dropping A-/A-bar movement.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [ei [T nukku]].
			=[[ei [T nukku]] D]

8.

		Consume "Pekka"

		[[ei [T nukku]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[ei [T nukku]] D{N}]

9.
	>>>	Trying candidate parse [[ei [T nukku]] D{N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[ei [T nukku]] D{N}].
				Extracted head "Pekka" from D and created [[ei [T nukku]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at <D Pekka>
				= [[ei [T nukku]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [[ei [T nukku]] <D Pekka>].
			= [[ei [T nukku]] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

ei: [Neg/fin]
T: [T, Neg/fin]
nukku: [V, T, Neg/fin]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 12
['ei#foc', 'nukkunut', 'Pekka']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'ei']
			=C

2.

		Consume "ei"

		C + ei
			Filtering out impossible merge sites...
			Sink "ei" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*ei]
			=C{Neg/fin}

3.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		C{Neg/fin} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{Neg/fin} T]
			C{Neg/fin} cannot be opened.
			=[C{Neg/fin} T]

4.

		Consume "nukku"

		[C{Neg/fin} T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[C{Neg/fin} T{V}]

5.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[C{Neg/fin} T{V}]

6.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[C{Neg/fin} T{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [C [ei [T nukku]]] as left branch because it constitutes illicit structure.
				Avoid TP as SPEC for D due to unselective SPEC feature.
T{V} {'D'}{'D', 'v', '*', 'V'}
				Prioritize [T{V} D] due to complement selection.
nukku {'D'}{'P'}
				Avoid T{V} because it could break words.
[(-198, [C/fin T]), (-94, T)]
		Ranking completed:
			1. [T{V}; D]
			2. [[C{Neg/fin} T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[C{Neg/fin} [T{V} D]]

7.

		Consume "Pekka"

		[C{Neg/fin} [T{V} D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{Neg/fin} [T{V} D{N}]]

8.
	>>>	Trying candidate parse [C{Neg/fin} [T{V} D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{Neg/fin} [T{V} D{N}]].
				Head reconstruction failed for ei, merged locally as a last resort.
				Extracted head "ei" and reconstructed it = [C [ei [T{V} D{N}]]]
				Extracted head "nukku" and reconstructed it = [C [ei [T [nukku D{N}]]]]
				Extracted head "Pekka" from D and created [C [ei [T [nukku [D Pekka]]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at [ei [T [nukku <D Pekka>]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<DP>:1 [ei [T [nukku <D Pekka>:1]]]]]
				= [C [<D Pekka> [ei [T [nukku <D Pekka>]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of T
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			= [C [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <D Pekka>]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<DP>:1 [ei [<DP>:1 [T [<DP>:1 [nukku <D Pekka>:1]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 8/88 operations) <------------------------------------
		Solution:
		[C [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <D Pekka>]]]]]]]
		Grammar: [C [<DP>:1 [ei [<DP>:1 [T [<DP>:1 [nukku <D Pekka>:1]]]]]]]
		Spellout C/finP = [C/fin [__:1 [Neg/fin [__:1 [T [__:1 [V DP:1]]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C: [C/fin]
(D): [D, C/fin]
(N): [N, D, C/fin]
ei: [Neg/fin, C/fin]
(D): [D, Neg/fin, C/fin]
(N): [N, D, Neg/fin, C/fin]
T: [T, Neg/fin, C/fin]
(D): [D, T, Neg/fin, C/fin]
(N): [N, D, T, Neg/fin, C/fin]
nukku: [V, T, Neg/fin, C/fin]
D: [D, V, T, Neg/fin, C/fin]
Pekka: [N, D, V, T, Neg/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 13
['nukkunut', 'Pekka', 'ei']


			=None

1.
		Next word contains multiple morphemes ['$T', 'nukku-']
			=T

2.

		Consume "nukku"

		T + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=T{V}

3.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=T{V}

4.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		T{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[T{V} D]

5.

		Consume "Pekka"

		[T{V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T{V} D{N}]

6.

		Consume "ei"

		[T{V} D{N}] + ei
			Filtering out impossible merge sites...
				Reject [[T [nukku [D Pekka]]] ei] due to bad left branch.
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[T{V} [[D Pekka] ei]]

7.
	>>>	Trying candidate parse [T{V} [[D Pekka] ei]] (1.)
		Reconstructing...
			Reconstructing head movement for [T{V} [[D Pekka] ei]].
				Extracted head "nukku" and reconstructed it = [T [nukku [[D Pekka] ei]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at ei
				= [T [nukku [[D Pekka] ei]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
				Extraposition will be tried on [T [nukku [[D Pekka] ei]]].
			= [T [nukku [[D Pekka] ei]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']

T: [T]
nukku: [V, T]
D: [D, V, T]
Pekka: [N, D, V, T]
ei: [Neg/fin, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 14
['nukkunut#foc', 'Pekka', 'ei']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'nukkunut']
			=C

2.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		C + T
			Filtering out impossible merge sites...
			Sink "T" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T]
			=C{T}

3.

		Consume "nukku"

		C{T} + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into C{T} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T}*nukku]
			=C{T,V}

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=C{T,V}

5.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		C{T,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T,V} D]
			C{T,V} cannot be opened.
			=[C{T,V} D]

6.

		Consume "Pekka"

		[C{T,V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T,V} D{N}]

7.

		Consume "ei"

		[C{T,V} D{N}] + ei
			Filtering out impossible merge sites...
				Reject [[C [<D Pekka> [T [<D Pekka> [nukku <D Pekka>]]]]] ei] due to bad left branch.
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[C{T,V} [[D Pekka] ei]]

8.
	>>>	Trying candidate parse [C{T,V} [[D Pekka] ei]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{T,V} [[D Pekka] ei]].
				Extracted head "T{V}" and reconstructed it = [C [[D Pekka] [ei T{V}]]]
				Extracted head "nukku" from T and created [C [[D Pekka] [ei [T nukku]]]]
			Dropping floaters...
				[D Pekka] is in an EPP SPEC position.
				Start reconstruction at [[D Pekka] [ei [T nukku]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<D Pekka>:1 [ei [<DP>:1 [T nukku]]]]]
				= [C [<D Pekka> [ei [<D Pekka> [T nukku]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			= [C [<D Pekka> [ei [<D Pekka> [T [<D Pekka> nukku]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 nukku]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 8/69 operations) <------------------------------------
		Solution:
		[C [<D Pekka> [ei [<D Pekka> [T [<D Pekka> nukku]]]]]]
		Grammar: [C [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 nukku]]]]]]
		Spellout C/finP = [C/fin [DP:1 [Neg/fin [__:1 [T [__:1 V]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

C: [C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
ei: [Neg/fin, C/fin]
(D): [D, Neg/fin, C/fin]
(N): [N, D, Neg/fin, C/fin]
T: [T, Neg/fin, C/fin]
(D): [D, T, Neg/fin, C/fin]
(N): [N, D, T, Neg/fin, C/fin]
nukku: [V, T, Neg/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 15
['nukkunut', 'ei', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$T', 'nukku-']
			=T

2.

		Consume "nukku"

		T + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=T{V}

3.

		Consume "ei"

		T{V} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T{V} ei]
			T{V} cannot be opened.
			=[T{V} ei]

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[T{V} ei]

5.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[T{V} ei] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TP as SPEC for D due to unselective SPEC feature.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [T [nukku ei]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
ei {'D'}{'T'}
				Avoid ei because it could break words.
[(-198, [T Neg/fin]), (-196, Neg/fin)]
		Ranking completed:
			1. [ei; D]
			2. [[T{V} ei]; D]
		Exploring solution number (1) =[ei D]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[T{V} [ei D]]

6.

		Consume "Pekka"

		[T{V} [ei D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T{V} [ei D{N}]]

7.
	>>>	Trying candidate parse [T{V} [ei D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [T{V} [ei D{N}]].
				Extracted head "nukku" and reconstructed it = [T [nukku [ei D{N}]]]
				Extracted head "Pekka" from D and created [T [nukku [ei [D Pekka]]]]
			Dropping floaters...
				= [T [nukku [ei [D Pekka]]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [T [nukku [ei [D Pekka]]]].
			= [T [nukku [ei [D Pekka]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T: [T]
nukku: [V, T]
ei: [Neg/fin, V, T]
D: [D, Neg/fin, V, T]
Pekka: [N, D, Neg/fin, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T{V} ei] D]
			Reconstructing head movement for [T{V} ei].
				Extracted head "nukku" and reconstructed it = [T [nukku ei]]
			Dropping floaters...
				= [T [nukku ei]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [T [nukku ei]].
			=[[T [nukku ei]] D]

8.

		Consume "Pekka"

		[[T [nukku ei]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[T [nukku ei]] D{N}]

9.
	>>>	Trying candidate parse [[T [nukku ei]] D{N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[T [nukku ei]] D{N}].
				Extracted head "Pekka" from D and created [[T [nukku ei]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at <D Pekka>
				= [[T [nukku ei]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [[T [nukku ei]] <D Pekka>].
			= [[T [nukku ei]] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T: [T]
nukku: [V, T]
ei: [Neg/fin, V, T]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 16
['nukkunut#foc', 'ei', 'Pekka']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'nukkunut']
			=C

2.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		C + T
			Filtering out impossible merge sites...
			Sink "T" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T]
			=C{T}

3.

		Consume "nukku"

		C{T} + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into C{T} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T}*nukku]
			=C{T,V}

4.

		Consume "ei"

		C{T,V} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T,V} ei]
			C{T,V} cannot be opened.
			=[C{T,V} ei]

5.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[C{T,V} ei]

6.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[C{T,V} ei] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [C [ei [T nukku]]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
ei {'D'}{'T'}
				Avoid ei because it could break words.
[(-198, [C/fin Neg/fin]), (-196, Neg/fin)]
		Ranking completed:
			1. [ei; D]
			2. [[C{T,V} ei]; D]
		Exploring solution number (1) =[ei D]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[C{T,V} [ei D]]

7.

		Consume "Pekka"

		[C{T,V} [ei D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T,V} [ei D{N}]]

8.
	>>>	Trying candidate parse [C{T,V} [ei D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{T,V} [ei D{N}]].
				Extracted head "T{V}" and reconstructed it = [C [ei [T{V} D{N}]]]
				Extracted head "nukku" and reconstructed it = [C [ei [T [nukku D{N}]]]]
				Extracted head "Pekka" from D and created [C [ei [T [nukku [D Pekka]]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at [ei [T [nukku <D Pekka>]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<DP>:1 [ei [T [nukku <D Pekka>:1]]]]]
				= [C [<D Pekka> [ei [T [nukku <D Pekka>]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of T
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			= [C [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <D Pekka>]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<DP>:1 [ei [<DP>:1 [T [<DP>:1 [nukku <D Pekka>:1]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 8/91 operations) <------------------------------------
		Solution:
		[C [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <D Pekka>]]]]]]]
		Grammar: [C [<DP>:1 [ei [<DP>:1 [T [<DP>:1 [nukku <D Pekka>:1]]]]]]]
		Spellout C/finP = [C/fin [__:1 [Neg/fin [__:1 [T [__:1 [V DP:1]]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C: [C/fin]
(D): [D, C/fin]
(N): [N, D, C/fin]
ei: [Neg/fin, C/fin]
(D): [D, Neg/fin, C/fin]
(N): [N, D, Neg/fin, C/fin]
T: [T, Neg/fin, C/fin]
(D): [D, T, Neg/fin, C/fin]
(N): [N, D, T, Neg/fin, C/fin]
nukku: [V, T, Neg/fin, C/fin]
D: [D, V, T, Neg/fin, C/fin]
Pekka: [N, D, V, T, Neg/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 17
['Pekka', 'nukkui', 'virtaamalla']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

5.

		Consume "nukku"

		[[D Pekka] T/fin] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=[[D Pekka] T/fin{V}]

6.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] T/fin{V}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla.
T/fin{V} {'ADV'}{'*', 'v', 'D', 'V'}
nukku {'ADV'}{'P'}
				Avoid T/fin{V} due to tail-head failure.
[(-99, [[D N] T/fin]), (-98, T/fin)]
		Ranking completed:
			1. [T/fin{V}; malla]
			2. [[[D Pekka] T/fin{V}]; malla]
		Exploring solution number (1) =[T/fin{V} malla]
			T/fin{V} cannot be opened.
			=[[D Pekka] [T/fin{V} malla]]

7.

		Consume "virtaa"

		[[D Pekka] [T/fin{V} malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [T/fin{V} malla{V}]]

8.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} malla{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T/fin{V} malla{V}]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T/fin [nukku malla{V}]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [T/fin [nukku [malla virtaa]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [T/fin [nukku [malla virtaa]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:1 [T/fin [<DP>:1 [nukku [malla virtaa]]]]]
				<malla virtaa> was made an adjunct.
				= [<D Pekka> [T/fin [<D Pekka> [nukku <malla virtaa>]]]]
			Dropping A-/A-bar movement.
			= [<D Pekka> [T/fin [<D Pekka> [nukku <malla virtaa>]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T/fin [<DP>:1 [nukku <malla virtaa>]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 8/74 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [nukku <malla virtaa>]]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 [nukku <malla virtaa>]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [V ADVP]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
nukku: [V, T/fin]
malla: [ADV, V, T/fin]
virtaa: [V, ADV, V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 18
['Pekka#foc', 'nukkui', 'virtaamalla']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'ABAR:FOC', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

6.

		Consume "nukku"

		[[D Pekka] T/fin] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=[[D Pekka] T/fin{V}]

7.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] T/fin{V}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla.
T/fin{V} {'ADV'}{'*', 'v', 'D', 'V'}
nukku {'ADV'}{'P'}
				Avoid T/fin{V} due to tail-head failure.
[(-99, [[D N] T/fin]), (-98, T/fin)]
		Ranking completed:
			1. [T/fin{V}; malla]
			2. [[[D Pekka] T/fin{V}]; malla]
		Exploring solution number (1) =[T/fin{V} malla]
			T/fin{V} cannot be opened.
			=[[D Pekka] [T/fin{V} malla]]

8.

		Consume "virtaa"

		[[D Pekka] [T/fin{V} malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [T/fin{V} malla{V}]]

9.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} malla{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T/fin{V} malla{V}]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T/fin [nukku malla{V}]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [T/fin [nukku [malla virtaa]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [T/fin [nukku [malla virtaa]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:1 [T/fin [<DP>:1 [nukku [malla virtaa]]]]]
				<malla virtaa> was made an adjunct.
				= [<D Pekka> [T/fin [<D Pekka> [nukku <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'FIN/T/fin', 'T/fin', 'FIN'}
			= [<D Pekka> [T/fin [<D Pekka> [nukku <malla virtaa>]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T/fin [<DP>:1 [nukku <malla virtaa>]]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 9/81 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [nukku <malla virtaa>]]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 [nukku <malla virtaa>]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [V ADVP]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
nukku: [V, T/fin]
malla: [ADV, V, T/fin]
virtaa: [V, ADV, V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 19
['Pekka', 'virtaamalla', 'nukkui']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		D{N} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[D Pekka] malla]

5.

		Consume "virtaa"

		[[D Pekka] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] malla{V}]

6.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		[[D Pekka] malla{V}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [malla virtaa]] T/fin] due to bad left branch.
		Exploring solution number (1) =[malla{V} T/fin]
			malla was opened.
			=[[D Pekka] [[malla virtaa] T/fin]]

7.

		Consume "nukku"

		[[D Pekka] [[malla virtaa] T/fin]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=[[D Pekka] [[malla virtaa] T/fin{V}]]

8.
	>>>	Trying candidate parse [[D Pekka] [[malla virtaa] T/fin{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[malla virtaa] T/fin{V}]].
				Extracted head "nukku" from T/fin and created [[D Pekka] [[malla virtaa] [T/fin nukku]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [[malla virtaa] [T/fin nukku]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:1 [[malla virtaa] [T/fin [<DP>:1 nukku]]]]
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [T/fin [<DP>:1 nukku]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<D Pekka>:1 [<malla virtaa>:2 [T/fin [<DP>:1 [nukku <ADVP>:2]]]]]
				= [<D Pekka> [<malla virtaa> [T/fin [<D Pekka> [nukku <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<D Pekka>:1 [? [<malla virtaa>:2 [T/fin [<DP>:1 [nukku <ADVP>:2]]]]]].
			= [<D Pekka> [? [<malla virtaa> [T/fin [<D Pekka> [nukku <malla virtaa>]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D: [D]
Pekka: [N, D]
?: [?]
malla: [ADV, ?]
virtaa: [V, ADV, ?]
T/fin: [T/fin, ?]
(D): [D, T/fin, ?]
(N): [N, D, T/fin, ?]
nukku: [V, T/fin, ?]
(ADV): [ADV, V, T/fin, ?]
(V): [V, ADV, V, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkui".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 20
['Pekka#foc', 'virtaamalla', 'nukkui']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'ABAR:FOC', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		D{N} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[D Pekka] malla]

6.

		Consume "virtaa"

		[[D Pekka] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] malla{V}]

7.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		[[D Pekka] malla{V}] + T/fin
			Filtering out impossible merge sites...
				Reject [<[D Pekka] [malla virtaa]> T/fin] due to bad left branch.
		Exploring solution number (1) =[malla{V} T/fin]
			malla was opened.
			=[[D Pekka] [[malla virtaa] T/fin]]

8.

		Consume "nukku"

		[[D Pekka] [[malla virtaa] T/fin]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=[[D Pekka] [[malla virtaa] T/fin{V}]]

9.
	>>>	Trying candidate parse [[D Pekka] [[malla virtaa] T/fin{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[malla virtaa] T/fin{V}]].
				Extracted head "nukku" from T/fin and created [[D Pekka] [[malla virtaa] [T/fin nukku]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [[malla virtaa] [T/fin nukku]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:1 [[malla virtaa] [T/fin [<DP>:1 nukku]]]]
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [T/fin [<DP>:1 nukku]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<D Pekka>:1 [<malla virtaa>:2 [T/fin [<DP>:1 [nukku <ADVP>:2]]]]]
				= [<D Pekka> [<malla virtaa> [T/fin [<D Pekka> [nukku <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
			= [<D Pekka> [uFOC [<malla virtaa> [T/fin [<D Pekka> [nukku <malla virtaa>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [uFOC [<malla virtaa>:2 [T/fin [<DP>:1 [nukku <ADVP>:2]]]]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 9/75 operations) <------------------------------------
		Solution:
		[<D Pekka> [uFOC [<malla virtaa> [T/fin [<D Pekka> [nukku <malla virtaa>]]]]]]
		Grammar: [<D Pekka>:1 [uFOC [<malla virtaa>:2 [T/fin [<DP>:1 [nukku <ADVP>:2]]]]]]
		Spellout P = [DP:1 [ [ADVP:2 [T/fin [__:1 [V __:2]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D: [D]
Pekka: [N, D]
uFOC: []
malla: [ADV, ]
virtaa: [V, ADV, ]
T/fin: [T/fin, ]
(D): [D, T/fin, ]
(N): [N, D, T/fin, ]
nukku: [V, T/fin, ]
(ADV): [ADV, V, T/fin, ]
(V): [V, ADV, V, T/fin, ]

			Checking if the sentence is ambiguous...


\========================================================================
# 21
['nukkui', 'Pekka', 'virtaamalla']


			=None

1.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']
			=T/fin

2.

		Consume "nukku"

		T/fin + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=T/fin{V}

3.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=T/fin{V}

4.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} D]
			T/fin{V} cannot be opened.
			=[T/fin{V} D]

5.

		Consume "Pekka"

		[T/fin{V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T/fin{V} D{N}]

6.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[T/fin{V} D{N}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				Avoid [T/fin [nukku <D Pekka>]] as left branch because it constitutes illicit structure.
D{N} {'ADV'}{'N', '*'}
Pekka {'ADV'}{'R', 'uR', 'R/D'}
				Avoid [Pekka malla] due to complement selection.
				Avoid D{N} due to tail-head failure.
			D was opened.
				Prioritize D{N} because all solutions were negative.
[(-198, [T/fin D]), (4, D)]
		Ranking completed:
			1. [D{N}; malla]
			2. [[T/fin{V} D{N}]; malla]
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[T/fin{V} [[D Pekka] malla]]

7.

		Consume "virtaa"

		[T/fin{V} [[D Pekka] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[T/fin{V} [[D Pekka] malla{V}]]

8.
	>>>	Trying candidate parse [T/fin{V} [[D Pekka] malla{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [T/fin{V} [[D Pekka] malla{V}]].
				Extracted head "nukku" and reconstructed it = [T/fin [nukku [[D Pekka] malla{V}]]]
				Extracted head "virtaa" from malla and created [T/fin [nukku [[D Pekka] [malla virtaa]]]]
			Dropping floaters...
				<malla virtaa> was made an adjunct.
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [nukku [[D Pekka] <malla virtaa>]]
				[D Pekka] cannot be made an adjunct because its sister is an adjunct.
				Floater [D Pekka] dropped: [T/fin [(DP):1 [nukku [[D Pekka]:1 <malla virtaa>]]]]
				= [T/fin [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [T/fin [(DP):1 [nukku [[D Pekka]:1 <malla virtaa>]]]].
			= [T/fin [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
nukku: [V, T/fin]
D: [D, V, T/fin]
Pekka: [N, D, V, T/fin]
malla: [ADV, V, T/fin]
virtaa: [V, ADV, V, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} D{N}] malla]
			Reconstructing head movement for [T/fin{V} D{N}].
				Extracted head "nukku" and reconstructed it = [T/fin [nukku D{N}]]
				Extracted head "Pekka" from D and created [T/fin [nukku [D Pekka]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at [nukku <D Pekka>]
				= [T/fin [nukku <D Pekka>]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				Extraposition will be tried on [T/fin [nukku <D Pekka>]].
			=[[T/fin [nukku <D Pekka>]] malla]

9.

		Consume "virtaa"

		[[T/fin [nukku <D Pekka>]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[T/fin [nukku <D Pekka>]] malla{V}]

10.
	>>>	Trying candidate parse [[T/fin [nukku <D Pekka>]] malla{V}] (2.)
		Reconstructing...
			Reconstructing head movement for [[T/fin [nukku <D Pekka>]] malla{V}].
				Extracted head "virtaa" from malla and created [[T/fin [nukku <D Pekka>]] [malla virtaa]]
			Dropping floaters...
				malla failed to tail.
				= [[T/fin [nukku <D Pekka>]] [malla virtaa]]
			Dropping A-/A-bar movement.
				Moving "T/fin nukku D Pekka " into memory buffer from SPEC of "malla".
				Memory buffer: [[T/fin [V [D N]]]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				malla has unaccetable specifier [T/fin [nukku <D Pekka>]].
				Extraposition will be tried on [[T/fin [nukku <D Pekka>]] [malla virtaa]].
			= [[T/fin [nukku <D Pekka>]] [malla virtaa]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				malla has unaccetable specifier [T/fin [nukku <D Pekka>]].
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

T/fin: [T/fin]
nukku: [V, T/fin]
D: [D, V, T/fin]
Pekka: [N, D, V, T/fin]
malla: [ADV]
virtaa: [V, ADV]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkui".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 22
['nukkui#foc', 'Pekka', 'virtaamalla']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'nukkui']
			=C

2.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		C + T/fin
			Filtering out impossible merge sites...
			Sink "T/fin" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T/fin]
			=C{T/fin}

3.

		Consume "nukku"

		C{T/fin} + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into C{T/fin} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin}*nukku]
			=C{T/fin,V}

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=C{T/fin,V}

5.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		C{T/fin,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T/fin,V} D]
			C{T/fin,V} cannot be opened.
			=[C{T/fin,V} D]

6.

		Consume "Pekka"

		[C{T/fin,V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T/fin,V} D{N}]

7.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[C{T/fin,V} D{N}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
D{N} {'ADV'}{'N', '*'}
Pekka {'ADV'}{'R', 'uR', 'R/D'}
				Avoid [Pekka malla] due to complement selection.
[(-98, D), (0, [C/fin D])]
		Ranking completed:
			1. [[C{T/fin,V} D{N}]; malla]
			2. [D{N}; malla]
		Exploring solution number (1) =[[C{T/fin,V} D{N}] malla]
			Reconstructing head movement for [C{T/fin,V} D{N}].
				Head reconstruction failed for T/fin{V}, merged locally as a last resort.
				Extracted head "T/fin{V}" and reconstructed it = [C [T/fin{V} D{N}]]
				Extracted head "nukku" and reconstructed it = [C [T/fin [nukku D{N}]]]
				Extracted head "Pekka" from D and created [C [T/fin [nukku [D Pekka]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at [T/fin [nukku <D Pekka>]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<DP>:1 [T/fin [nukku <D Pekka>:1]]]]
				= [C [<D Pekka> [T/fin [nukku <D Pekka>]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T/fin".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			=[[C [<DP>:1 [T/fin [<DP>:1 [nukku <D Pekka>:1]]]]] malla]

8.

		Consume "virtaa"

		[[C [<D Pekka> [T/fin [<D Pekka> [nukku <D Pekka>]]]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[C [<DP>:1 [T/fin [<DP>:1 [nukku <D Pekka>:1]]]]] malla{V}]

9.
	>>>	Trying candidate parse [[C [<D Pekka> [T/fin [<D Pekka> [nukku <D Pekka>]]]]] malla{V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[C [<DP>:1 [T/fin [<DP>:1 [nukku <D Pekka>:1]]]]] malla{V}].
				Extracted head "virtaa" from malla and created [[C [<DP>:1 [T/fin [<DP>:1 [nukku <D Pekka>:1]]]]] [malla virtaa]]
			Dropping floaters...
				malla failed to tail.
				= [[C [<D Pekka> [T/fin [<D Pekka> [nukku <D Pekka>]]]]] [malla virtaa]]
			Dropping A-/A-bar movement.
				Moving "C __T/fin __nukku D Pekka " into memory buffer from SPEC of "malla".
				Memory buffer: [[C/fin [[D N] [T/fin [[D N] [V [D N]]]]]]]
			= [[C [<D Pekka> [T/fin [<D Pekka> [nukku <D Pekka>]]]]] [malla virtaa]]
		Checking LF-interface conditions.
			malla<[ADV]> failed to tail features [CAT:V]
malla
			Final tail-head check failed.
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

C: [C/fin]
(D): [D, C/fin]
(N): [N, D, C/fin]
T/fin: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
nukku: [V, T/fin, C/fin]
D: [D, V, T/fin, C/fin]
Pekka: [N, D, V, T/fin, C/fin]
malla: [ADV]
virtaa: [V, ADV]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} malla]
			D was opened.
			=[C{T/fin,V} [[D Pekka] malla]]

10.

		Consume "virtaa"

		[C{T/fin,V} [[D Pekka] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[C{T/fin,V} [[D Pekka] malla{V}]]

11.
	>>>	Trying candidate parse [C{T/fin,V} [[D Pekka] malla{V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [C{T/fin,V} [[D Pekka] malla{V}]].
				Extracted head "T/fin{V}" and reconstructed it = [C [[D Pekka] [T/fin{V} malla{V}]]]
				Extracted head "nukku" and reconstructed it = [C [[D Pekka] [T/fin [nukku malla{V}]]]]
				Extracted head "virtaa" from malla and created [C [[D Pekka] [T/fin [nukku [malla virtaa]]]]]
			Dropping floaters...
				[D Pekka] is in an EPP SPEC position.
				Start reconstruction at [[D Pekka] [T/fin [nukku [malla virtaa]]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<D Pekka>:1 [T/fin [<DP>:1 [nukku [malla virtaa]]]]]]
				<malla virtaa> was made an adjunct.
				= [C [<D Pekka> [T/fin [<D Pekka> [nukku <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
			= [C [<D Pekka> [T/fin [<D Pekka> [nukku <malla virtaa>]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<D Pekka>:1 [T/fin [<DP>:1 [nukku <malla virtaa>]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 11/129 operations) <------------------------------------
		Solution:
		[C [<D Pekka> [T/fin [<D Pekka> [nukku <malla virtaa>]]]]]
		Grammar: [C [<D Pekka>:1 [T/fin [<DP>:1 [nukku <malla virtaa>]]]]]
		Spellout C/finP = [C/fin [DP:1 [T/fin [__:1 [V ADVP]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

C: [C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
T/fin: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
nukku: [V, T/fin, C/fin]
malla: [ADV, V, T/fin, C/fin]
virtaa: [V, ADV, V, T/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 23
['nukkui', 'virtaamalla', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']
			=T/fin

2.

		Consume "nukku"

		T/fin + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=T/fin{V}

3.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		T/fin{V} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} malla]
			T/fin{V} cannot be opened.
			=[T/fin{V} malla]

4.

		Consume "virtaa"

		[T/fin{V} malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[T/fin{V} malla{V}]

5.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[T/fin{V} malla{V}]

6.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[T/fin{V} malla{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [T/fin [nukku <malla virtaa>]] as left branch because it constitutes illicit structure.
				Avoid ADVP as SPEC for D due to unselective SPEC feature.
				Avoid [malla{V} D] due to local agreement failure.
malla{V} {'D'}{'*'}
virtaa {'D'}{'P'}
				Avoid [virtaa D] due to complement selection.
				Avoid malla{V} because it could break words.
			malla was opened.
				Prioritize malla{V} because all solutions were negative.
[(-198, [T/fin ADV]), (-192, ADV)]
		Ranking completed:
			1. [malla{V}; D]
			2. [[T/fin{V} malla{V}]; D]
		Exploring solution number (1) =[malla{V} D]
			malla was opened.
			=[T/fin{V} [[malla virtaa] D]]

7.

		Consume "Pekka"

		[T/fin{V} [[malla virtaa] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T/fin{V} [[malla virtaa] D{N}]]

8.
	>>>	Trying candidate parse [T/fin{V} [[malla virtaa] D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [T/fin{V} [[malla virtaa] D{N}]].
				Extracted head "nukku" and reconstructed it = [T/fin [nukku [[malla virtaa] D{N}]]]
				Extracted head "Pekka" from D and created [T/fin [nukku [[malla virtaa] [D Pekka]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at [nukku [[malla virtaa] <D Pekka>]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T/fin [<DP>:1 [nukku [[malla virtaa] <D Pekka>:1]]]]
				= [T/fin [<D Pekka> [nukku [[malla virtaa] <D Pekka>]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [T/fin [<DP>:1 [nukku [[malla virtaa] <D Pekka>:1]]]].
			= [T/fin [<D Pekka> [nukku [[malla virtaa] <D Pekka>]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
nukku: [V, T/fin]
malla: [ADV, V, T/fin]
virtaa: [V, ADV, V, T/fin]
D: [D, V, T/fin]
Pekka: [N, D, V, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} malla{V}] D]
			Reconstructing head movement for [T/fin{V} malla{V}].
				Extracted head "nukku" and reconstructed it = [T/fin [nukku malla{V}]]
				Extracted head "virtaa" from malla and created [T/fin [nukku [malla virtaa]]]
			Dropping floaters...
				<malla virtaa> was made an adjunct.
				= [T/fin [nukku <malla virtaa>]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [T/fin [nukku <malla virtaa>]].
			=[[T/fin [nukku <malla virtaa>]] D]

9.

		Consume "Pekka"

		[[T/fin [nukku <malla virtaa>]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[T/fin [nukku <malla virtaa>]] D{N}]

10.
	>>>	Trying candidate parse [[T/fin [nukku <malla virtaa>]] D{N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[T/fin [nukku <malla virtaa>]] D{N}].
				Extracted head "Pekka" from D and created [[T/fin [nukku <malla virtaa>]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at <D Pekka>
				= [[T/fin [nukku <malla virtaa>]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [[T/fin [nukku <malla virtaa>]] <D Pekka>].
			= [[T/fin [nukku <malla virtaa>]] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin: [T/fin]
nukku: [V, T/fin]
malla: [ADV, V, T/fin]
virtaa: [V, ADV, V, T/fin]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkui".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 24
['nukkui#foc', 'virtaamalla', 'Pekka']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'nukkui']
			=C

2.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		C + T/fin
			Filtering out impossible merge sites...
			Sink "T/fin" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T/fin]
			=C{T/fin}

3.

		Consume "nukku"

		C{T/fin} + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into C{T/fin} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin}*nukku]
			=C{T/fin,V}

4.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		C{T/fin,V} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T/fin,V} malla]
			C{T/fin,V} cannot be opened.
			=[C{T/fin,V} malla]

5.

		Consume "virtaa"

		[C{T/fin,V} malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[C{T/fin,V} malla{V}]

6.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[C{T/fin,V} malla{V}]

7.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[C{T/fin,V} malla{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [C [T/fin [nukku <malla virtaa>]]] as left branch because it constitutes illicit structure.
				Avoid ADVP as SPEC for D due to unselective SPEC feature.
				Avoid [malla{V} D] due to local agreement failure.
malla{V} {'D'}{'*'}
virtaa {'D'}{'P'}
				Avoid [virtaa D] due to complement selection.
				Avoid malla{V} because it could break words.
			malla was opened.
				Prioritize malla{V} because all solutions were negative.
[(-198, [C/fin ADV]), (-192, ADV)]
		Ranking completed:
			1. [malla{V}; D]
			2. [[C{T/fin,V} malla{V}]; D]
		Exploring solution number (1) =[malla{V} D]
			malla was opened.
			=[C{T/fin,V} [[malla virtaa] D]]

8.

		Consume "Pekka"

		[C{T/fin,V} [[malla virtaa] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T/fin,V} [[malla virtaa] D{N}]]

9.
	>>>	Trying candidate parse [C{T/fin,V} [[malla virtaa] D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{T/fin,V} [[malla virtaa] D{N}]].
				Extracted head "T/fin{V}" and reconstructed it = [C [[malla virtaa] [T/fin{V} D{N}]]]
				Extracted head "nukku" and reconstructed it = [C [[malla virtaa] [T/fin [nukku D{N}]]]]
				Extracted head "Pekka" from D and created [C [[malla virtaa] [T/fin [nukku [D Pekka]]]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[malla virtaa] [T/fin [nukku [D Pekka]]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [C [<malla virtaa>:1 [T/fin [nukku [[D Pekka] <ADVP>:1]]]]]
				D failed to tail.
				[D Pekka] cannot be made an adjunct because its sister is an adjunct.
				Start reconstruction at [nukku [[D Pekka] <ADVP>:1]]
				[D Pekka] cannot be made an adjunct because its sister is an adjunct.
				Floater [D Pekka] dropped: [C [<malla virtaa>:1 [T/fin [(DP):2 [nukku [[D Pekka]:2 <ADVP>:1]]]]]]
				= [C [<malla virtaa> [T/fin [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]]]
			Dropping A-/A-bar movement.
			= [C [<malla virtaa> [T/fin [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<malla virtaa>:1 [T/fin [(DP):2 [nukku [[D Pekka]:2 <ADVP>:1]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 9/96 operations) <------------------------------------
		Solution:
		[C [<malla virtaa> [T/fin [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]]]
		Grammar: [C [<malla virtaa>:1 [T/fin [(DP):2 [nukku [[D Pekka]:2 <ADVP>:1]]]]]]
		Spellout C/finP = [C/fin [ADVP:1 [T/fin [__:2 [V [[D N]:2 __:1]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

C: [C/fin]
malla: [ADV, C/fin]
virtaa: [V, ADV, C/fin]
T/fin: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
nukku: [V, T/fin, C/fin]
D: [D, V, T/fin, C/fin]
Pekka: [N, D, V, T/fin, C/fin]
(ADV): [ADV, V, T/fin, C/fin]
(V): [V, ADV, V, T/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 25
['virtaamalla', 'Pekka', 'nukkui']


			=None

1.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']
			=malla

2.

		Consume "virtaa"

		malla + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=malla{V}

3.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=malla{V}

4.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		malla{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[malla{V} D]
			malla was opened.
			=[[malla virtaa] D]

5.

		Consume "Pekka"

		[[malla virtaa] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[malla virtaa] D{N}]

6.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		[[malla virtaa] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
D{N} {'FIN/T/fin', 'T/fin', 'FIN'}{'N', '*'}
				Avoid [D{N} T/fin] due to complement selection.
Pekka {'FIN/T/fin', 'T/fin', 'FIN'}{'R', 'uR', 'R/D'}
				Avoid [Pekka T/fin] due to complement selection.
[(-196, D), (0, [[ADV V] D])]
		Ranking completed:
			1. [[[malla virtaa] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[malla virtaa] D{N}] T/fin]
			Reconstructing head movement for [[malla virtaa] D{N}].
				Extracted head "Pekka" from D and created [[malla virtaa] [D Pekka]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [D Pekka]
				= [[malla virtaa] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "malla virtaa " into memory buffer from SPEC of "D".
				Memory buffer: [[ADV V]]
				D (D) has a specifier [malla virtaa] but is marked for -EPP behavior.
				Extraposition will be tried on [[malla virtaa] [D Pekka]].
				<D Pekka> was made adjunct by an extraposition rule.
			=[[[malla virtaa] <D Pekka>] T/fin]

7.

		Consume "nukku"

		[[[malla virtaa] <D Pekka>] T/fin] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=[[[malla virtaa] <D Pekka>] T/fin{V}]

8.
	>>>	Trying candidate parse [[[malla virtaa] <D Pekka>] T/fin{V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[[malla virtaa] <D Pekka>] T/fin{V}].
				Extracted head "nukku" from T/fin and created [[[malla virtaa] <D Pekka>] [T/fin nukku]]
			Dropping floaters...
				[[malla virtaa] <D Pekka>] failed to tail [CAT:V]
				Start reconstruction at [T/fin nukku]
				<[malla virtaa] <D Pekka>> was made an adjunct.
				Floater <[malla virtaa] <D Pekka>> dropped: [<[malla virtaa] <D Pekka>>:1 [T/fin [nukku <ADVP>:1]]]
				= [<[malla virtaa] <D Pekka>> [T/fin [nukku <[malla virtaa] <D Pekka>>]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [<[malla virtaa] <D Pekka>>:1 [T/fin [nukku <ADVP>:1]]].
			= [<[malla virtaa] <D Pekka>> [T/fin [nukku <[malla virtaa] <D Pekka>>]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				(D) failed internal tail test.
			LF-interface condition(s) violated
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']

malla: [ADV]
virtaa: [V, ADV]
D: [D]
Pekka: [N, D]
T/fin: [T/fin]
nukku: [V, T/fin]
(ADV): [ADV, V, T/fin]
(V): [V, ADV, V, T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[malla virtaa] [[D Pekka] T/fin]]

9.

		Consume "nukku"

		[[malla virtaa] [[D Pekka] T/fin]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=[[malla virtaa] [[D Pekka] T/fin{V}]]

10.
	>>>	Trying candidate parse [[malla virtaa] [[D Pekka] T/fin{V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [[malla virtaa] [[D Pekka] T/fin{V}]].
				Extracted head "nukku" from T/fin and created [[malla virtaa] [[D Pekka] [T/fin nukku]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[D Pekka] [T/fin nukku]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<malla virtaa>:1 [[D Pekka] [T/fin [nukku <ADVP>:1]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [T/fin [nukku <ADVP>:1]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<malla virtaa>:1 [<D Pekka>:2 [T/fin [<DP>:2 [nukku <ADVP>:1]]]]]
				= [<malla virtaa> [<D Pekka> [T/fin [<D Pekka> [nukku <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<malla virtaa>:1 [? [<D Pekka>:2 [T/fin [<DP>:2 [nukku <ADVP>:1]]]]]].
			= [<malla virtaa> [? [<D Pekka> [T/fin [<D Pekka> [nukku <malla virtaa>]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla: [ADV]
virtaa: [V, ADV]
?: [?]
D: [D, ?]
Pekka: [N, D, ?]
T/fin: [T/fin, ?]
(D): [D, T/fin, ?]
(N): [N, D, T/fin, ?]
nukku: [V, T/fin, ?]
(ADV): [ADV, V, T/fin, ?]
(V): [V, ADV, V, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkui".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 26
['virtaamalla#foc', 'Pekka', 'nukkui']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'virtaamalla']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "virtaamalla"

			=None

2.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Adding inflectional features {'ABAR:FOC', 'LANG:FI', '-'} to malla
		= ['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
			=malla

3.

		Consume "virtaa"

		malla + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=malla{V}

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=malla{V}

5.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		malla{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[malla{V} D]
			malla was opened.
			=[[malla virtaa] D]

6.

		Consume "Pekka"

		[[malla virtaa] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[malla virtaa] D{N}]

7.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		[[malla virtaa] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
D{N} {'FIN/T/fin', 'T/fin', 'FIN'}{'N', '*'}
				Avoid [D{N} T/fin] due to complement selection.
Pekka {'FIN/T/fin', 'T/fin', 'FIN'}{'R', 'uR', 'R/D'}
				Avoid [Pekka T/fin] due to complement selection.
[(-196, D), (0, [[ADV V] D])]
		Ranking completed:
			1. [[[malla virtaa] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[malla virtaa] D{N}] T/fin]
			Reconstructing head movement for [[malla virtaa] D{N}].
				Extracted head "Pekka" from D and created [[malla virtaa] [D Pekka]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [D Pekka]
				= [[malla virtaa] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "malla virtaa " into memory buffer from SPEC of "D".
				Criterial features {'FOC'} copied to {'D'}
				Tail features [A/HEAD][CAT:FIN] were detected at D, this must head an adjunct floater.
				<D Pekka> was made an adjunct.
				Memory buffer: [[ADV V]]
			=[[[malla virtaa] <D Pekka>] T/fin]

8.

		Consume "nukku"

		[[[malla virtaa] <D Pekka>] T/fin] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=[[[malla virtaa] <D Pekka>] T/fin{V}]

9.
	>>>	Trying candidate parse [[[malla virtaa] <D Pekka>] T/fin{V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[[malla virtaa] <D Pekka>] T/fin{V}].
				Extracted head "nukku" from T/fin and created [[[malla virtaa] <D Pekka>] [T/fin nukku]]
			Dropping floaters...
				[[malla virtaa] <D Pekka>] failed to tail [CAT:V]
				Start reconstruction at [T/fin nukku]
				<[malla virtaa] <D Pekka>> was made an adjunct.
				Floater <[malla virtaa] <D Pekka>> dropped: [<[malla virtaa] <D Pekka>>:1 [T/fin [nukku <ADVP>:1]]]
				= [<[malla virtaa] <D Pekka>> [T/fin [nukku <[malla virtaa] <D Pekka>>]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'FIN/T/fin', 'T/fin', 'FIN'}
				An EPP-head "nukku" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [<[malla virtaa] <D Pekka>>:1 [T/fin [nukku <ADVP>:1]]].
			= [<[malla virtaa] <D Pekka>> [T/fin [nukku <[malla virtaa] <D Pekka>>]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				(D) failed internal tail test.
			LF-interface condition(s) violated
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']

malla: [ADV]
virtaa: [V, ADV]
D: [D]
Pekka: [N, D]
T/fin: [T/fin]
nukku: [V, T/fin]
(ADV): [ADV, V, T/fin]
(V): [V, ADV, V, T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[malla virtaa] [[D Pekka] T/fin]]

10.

		Consume "nukku"

		[[malla virtaa] [[D Pekka] T/fin]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=[[malla virtaa] [[D Pekka] T/fin{V}]]

11.
	>>>	Trying candidate parse [[malla virtaa] [[D Pekka] T/fin{V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [[malla virtaa] [[D Pekka] T/fin{V}]].
				Extracted head "nukku" from T/fin and created [[malla virtaa] [[D Pekka] [T/fin nukku]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[D Pekka] [T/fin nukku]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<malla virtaa>:1 [[D Pekka] [T/fin [nukku <ADVP>:1]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [T/fin [nukku <ADVP>:1]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<malla virtaa>:1 [<D Pekka>:2 [T/fin [<DP>:2 [nukku <ADVP>:1]]]]]
				= [<malla virtaa> [<D Pekka> [T/fin [<D Pekka> [nukku <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
			= [<malla virtaa> [uFOC [<D Pekka> [T/fin [<D Pekka> [nukku <malla virtaa>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<malla virtaa>:1 [uFOC [<D Pekka>:2 [T/fin [<DP>:2 [nukku <ADVP>:1]]]]]] into LF...
				(ADV)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 11/132 operations) <------------------------------------
		Solution:
		[<malla virtaa> [uFOC [<D Pekka> [T/fin [<D Pekka> [nukku <malla virtaa>]]]]]]
		Grammar: [<malla virtaa>:1 [uFOC [<D Pekka>:2 [T/fin [<DP>:2 [nukku <ADVP>:1]]]]]]
		Spellout P = [ADVP:1 [ [DP:2 [T/fin [__:2 [V __:1]]]]]]
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla: [ADV]
virtaa: [V, ADV]
uFOC: []
D: [D, ]
Pekka: [N, D, ]
T/fin: [T/fin, ]
(D): [D, T/fin, ]
(N): [N, D, T/fin, ]
nukku: [V, T/fin, ]
(ADV): [ADV, V, T/fin, ]
(V): [V, ADV, V, T/fin, ]

			Checking if the sentence is ambiguous...


\========================================================================
# 27
['virtaamalla', 'nukkui', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']
			=malla

2.

		Consume "virtaa"

		malla + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=malla{V}

3.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		malla{V} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[malla{V} T/fin]
			malla was opened.
			=[[malla virtaa] T/fin]

4.

		Consume "nukku"

		[[malla virtaa] T/fin] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=[[malla virtaa] T/fin{V}]

5.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[malla virtaa] T/fin{V}]

6.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[malla virtaa] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [<malla virtaa> [T/fin [nukku <malla virtaa>]]] as left branch because it constitutes illicit structure.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
T/fin{V} {'D'}{'*', 'v', 'D', 'V'}
				Prioritize [T/fin{V} D] due to complement selection.
nukku {'D'}{'P'}
[(-198, [[ADV V] T/fin]), (4, T/fin)]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[malla virtaa] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			T/fin{V} cannot be opened.
			=[[malla virtaa] [T/fin{V} D]]

7.

		Consume "Pekka"

		[[malla virtaa] [T/fin{V} D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[malla virtaa] [T/fin{V} D{N}]]

8.
	>>>	Trying candidate parse [[malla virtaa] [T/fin{V} D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[malla virtaa] [T/fin{V} D{N}]].
				Extracted head "nukku" and reconstructed it = [[malla virtaa] [T/fin [nukku D{N}]]]
				Extracted head "Pekka" from D and created [[malla virtaa] [T/fin [nukku [D Pekka]]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [T/fin [nukku [D Pekka]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<malla virtaa>:1 [T/fin [nukku [[D Pekka] <ADVP>:1]]]]
				D failed to tail.
				[D Pekka] cannot be made an adjunct because its sister is an adjunct.
				Start reconstruction at [nukku [[D Pekka] <ADVP>:1]]
				[D Pekka] cannot be made an adjunct because its sister is an adjunct.
				Floater [D Pekka] dropped: [<malla virtaa>:1 [T/fin [(DP):2 [nukku [[D Pekka]:2 <ADVP>:1]]]]]
				= [<malla virtaa> [T/fin [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
			= [<malla virtaa> [T/fin [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<malla virtaa>:1 [T/fin [(DP):2 [nukku [[D Pekka]:2 <ADVP>:1]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 8/81 operations) <------------------------------------
		Solution:
		[<malla virtaa> [T/fin [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]]
		Grammar: [<malla virtaa>:1 [T/fin [(DP):2 [nukku [[D Pekka]:2 <ADVP>:1]]]]]
		Spellout T/finP = [ADVP:1 [T/fin [__:2 [V [[D N]:2 __:1]]]]]
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla: [ADV]
virtaa: [V, ADV]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
nukku: [V, T/fin]
D: [D, V, T/fin]
Pekka: [N, D, V, T/fin]
(ADV): [ADV, V, T/fin]
(V): [V, ADV, V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 28
['virtaamalla#foc', 'nukkui', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'virtaamalla']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "virtaamalla"

			=None

2.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Adding inflectional features {'ABAR:FOC', 'LANG:FI', '-'} to malla
		= ['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
			=malla

3.

		Consume "virtaa"

		malla + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=malla{V}

4.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		malla{V} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[malla{V} T/fin]
			malla was opened.
			=[[malla virtaa] T/fin]

5.

		Consume "nukku"

		[[malla virtaa] T/fin] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=[[malla virtaa] T/fin{V}]

6.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[malla virtaa] T/fin{V}]

7.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[malla virtaa] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [<malla virtaa> [T/fin [nukku <malla virtaa>]]] as left branch because it constitutes illicit structure.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
T/fin{V} {'D'}{'*', 'v', 'D', 'V'}
				Prioritize [T/fin{V} D] due to complement selection.
nukku {'D'}{'P'}
[(-198, [[ADV V] T/fin]), (4, T/fin)]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[malla virtaa] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			T/fin{V} cannot be opened.
			=[[malla virtaa] [T/fin{V} D]]

8.

		Consume "Pekka"

		[[malla virtaa] [T/fin{V} D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[malla virtaa] [T/fin{V} D{N}]]

9.
	>>>	Trying candidate parse [[malla virtaa] [T/fin{V} D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[malla virtaa] [T/fin{V} D{N}]].
				Extracted head "nukku" and reconstructed it = [[malla virtaa] [T/fin [nukku D{N}]]]
				Extracted head "Pekka" from D and created [[malla virtaa] [T/fin [nukku [D Pekka]]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [T/fin [nukku [D Pekka]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<malla virtaa>:1 [T/fin [nukku [[D Pekka] <ADVP>:1]]]]
				D failed to tail.
				[D Pekka] cannot be made an adjunct because its sister is an adjunct.
				Start reconstruction at [nukku [[D Pekka] <ADVP>:1]]
				[D Pekka] cannot be made an adjunct because its sister is an adjunct.
				Floater [D Pekka] dropped: [<malla virtaa>:1 [T/fin [(DP):2 [nukku [[D Pekka]:2 <ADVP>:1]]]]]
				= [<malla virtaa> [T/fin [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'FIN/T/fin', 'T/fin', 'FIN'}
			= [<malla virtaa> [T/fin [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<malla virtaa>:1 [T/fin [(DP):2 [nukku [[D Pekka]:2 <ADVP>:1]]]]] into LF...
				(ADV)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 9/90 operations) <------------------------------------
		Solution:
		[<malla virtaa> [T/fin [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]]
		Grammar: [<malla virtaa>:1 [T/fin [(DP):2 [nukku [[D Pekka]:2 <ADVP>:1]]]]]
		Spellout T/finP = [ADVP:1 [T/fin [__:2 [V [[D N]:2 __:1]]]]]
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla: [ADV]
virtaa: [V, ADV]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
nukku: [V, T/fin]
D: [D, V, T/fin]
Pekka: [N, D, V, T/fin]
(ADV): [ADV, V, T/fin]
(V): [V, ADV, V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 29
['Pekka', 'ei', 'nukkunut', 'virtaamalla']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "nukku"

		[[D Pekka] [ei T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [ei T{V}]]

7.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [ei T{V}]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla.
				Avoid Neg/finP as SPEC, malla.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [ei [T nukku]] as left branch because it constitutes illicit structure.
T{V} {'ADV'}{'D', 'v', '*', 'V'}
nukku {'ADV'}{'P'}
[(-196, [Neg/fin T]), (-99, [[D N] [Neg/fin T]]), (0, T)]
		Ranking completed:
			1. [T{V}; malla]
			2. [[[D Pekka] [ei T{V}]]; malla]
			3. [[ei T{V}]; malla]
		Exploring solution number (1) =[T{V} malla]
			T{V} cannot be opened.
			=[[D Pekka] [ei [T{V} malla]]]

8.

		Consume "virtaa"

		[[D Pekka] [ei [T{V} malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [ei [T{V} malla{V}]]]

9.
	>>>	Trying candidate parse [[D Pekka] [ei [T{V} malla{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{V} malla{V}]]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [ei [T [nukku malla{V}]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [ei [T [nukku [malla virtaa]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [ei [T [nukku [malla virtaa]]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:1 [ei [<DP>:1 [T [nukku [malla virtaa]]]]]]
				<malla virtaa> was made an adjunct.
				= [<D Pekka> [ei [<D Pekka> [T [nukku <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			= [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 [nukku <malla virtaa>]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 9/95 operations) <------------------------------------
		Solution:
		[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]]]
		Grammar: [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 [nukku <malla virtaa>]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [__:1 [T [__:1 [V ADVP]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
nukku: [V, T, Neg/fin]
malla: [ADV, V, T, Neg/fin]
virtaa: [V, ADV, V, T, Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 30
['Pekka#foc', 'ei', 'nukkunut', 'virtaamalla']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'ABAR:FOC', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

6.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

7.

		Consume "nukku"

		[[D Pekka] [ei T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [ei T{V}]]

8.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [ei T{V}]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla.
				Avoid Neg/finP as SPEC, malla.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [ei [T nukku]] as left branch because it constitutes illicit structure.
T{V} {'ADV'}{'D', 'v', '*', 'V'}
nukku {'ADV'}{'P'}
[(-196, [Neg/fin T]), (-99, [[D N] [Neg/fin T]]), (0, T)]
		Ranking completed:
			1. [T{V}; malla]
			2. [[[D Pekka] [ei T{V}]]; malla]
			3. [[ei T{V}]; malla]
		Exploring solution number (1) =[T{V} malla]
			T{V} cannot be opened.
			=[[D Pekka] [ei [T{V} malla]]]

9.

		Consume "virtaa"

		[[D Pekka] [ei [T{V} malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [ei [T{V} malla{V}]]]

10.
	>>>	Trying candidate parse [[D Pekka] [ei [T{V} malla{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{V} malla{V}]]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [ei [T [nukku malla{V}]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [ei [T [nukku [malla virtaa]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [ei [T [nukku [malla virtaa]]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:1 [ei [<DP>:1 [T [nukku [malla virtaa]]]]]]
				<malla virtaa> was made an adjunct.
				= [<D Pekka> [ei [<D Pekka> [T [nukku <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}
				Moving "____" into memory buffer from SPEC of "T".
				Criterial features {'FOC'} copied to {'T'}
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			= [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 [nukku <malla virtaa>]]]]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 10/103 operations) <------------------------------------
		Solution:
		[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]]]
		Grammar: [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 [nukku <malla virtaa>]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [__:1 [T [__:1 [V ADVP]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iFOC/uFOC', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iFOC/uFOC', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
nukku: [V, T, Neg/fin]
malla: [ADV, V, T, Neg/fin]
virtaa: [V, ADV, V, T, Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 31
['Pekka', 'ei', 'virtaamalla', 'nukkunut']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] ei] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
				Avoid [[D Pekka] ei] as left branch because it constitutes illicit structure.
ei {'ADV'}{'T'}
[(-198, [[D N] Neg/fin]), (0, Neg/fin)]
		Ranking completed:
			1. [ei; malla]
			2. [[[D Pekka] ei]; malla]
		Exploring solution number (1) =[ei malla]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei malla]]

6.

		Consume "virtaa"

		[[D Pekka] [ei malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [ei malla{V}]]

7.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] [ei malla{V}]] + T
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [ei [<D Pekka> <malla virtaa>]]] T] due to bad left branch.
				Reject [[ei [malla virtaa]] T] due to bad left branch.
		Exploring solution number (1) =[malla{V} T]
			malla was opened.
			=[[D Pekka] [ei [[malla virtaa] T]]]

8.

		Consume "nukku"

		[[D Pekka] [ei [[malla virtaa] T]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [ei [[malla virtaa] T{V}]]]

9.
	>>>	Trying candidate parse [[D Pekka] [ei [[malla virtaa] T{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [[malla virtaa] T{V}]]].
				Extracted head "nukku" from T and created [[D Pekka] [ei [[malla virtaa] [T nukku]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [ei [[malla virtaa] [T nukku]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:1 [ei [<DP>:1 [[malla virtaa] [T nukku]]]]]
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [<DP>:1 [[malla virtaa] [T nukku]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<D Pekka>:1 [ei [<DP>:1 [<malla virtaa>:2 [T [nukku <ADVP>:2]]]]]]
				= [<D Pekka> [ei [<D Pekka> [<malla virtaa> [T [nukku <malla virtaa>]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				New head was spawned due to multiple specifiers at T but its category is unknown!
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
				ei (ei) is missing a mandatory complement T
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<D Pekka>:1 [ei [<DP>:1 [? [<malla virtaa>:2 [T [<DP>:1 [nukku <ADVP>:2]]]]]]]].
			= [<D Pekka> [ei [<D Pekka> [? [<malla virtaa> [T [<D Pekka> [nukku <malla virtaa>]]]]]]]]
		Checking LF-interface conditions.
				ei (ei) is missing a mandatory complement T
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
:['LANG:FI']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
?: [?, Neg/fin]
malla: [ADV, ?, Neg/fin]
virtaa: [V, ADV, ?, Neg/fin]
T: [T, ?, Neg/fin]
(D): [D, T, ?, Neg/fin]
(N): [N, D, T, ?, Neg/fin]
nukku: [V, T, ?, Neg/fin]
(ADV): [ADV, V, T, ?, Neg/fin]
(V): [V, ADV, V, T, ?, Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D Pekka] ei] malla]
			Reconstructing head movement for [[D Pekka] ei].
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at ei
				= [[D Pekka] ei]
			Dropping A-/A-bar movement.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
				Extraposition will be tried on [[D Pekka] ei].
			=[[[D Pekka] ei] malla]

10.

		Consume "virtaa"

		[[[D Pekka] ei] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[D Pekka] ei] malla{V}]

11.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[[D Pekka] ei] malla{V}] + T
			Filtering out impossible merge sites...
				Reject [[[[D Pekka] ei] [malla virtaa]] T] due to bad left branch.
		Exploring solution number (1) =[malla{V} T]
			malla was opened.
			=[[[D Pekka] ei] [[malla virtaa] T]]

12.

		Consume "nukku"

		[[[D Pekka] ei] [[malla virtaa] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[[D Pekka] ei] [[malla virtaa] T{V}]]

13.
	>>>	Trying candidate parse [[[D Pekka] ei] [[malla virtaa] T{V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [[[D Pekka] ei] [[malla virtaa] T{V}]].
				Extracted head "nukku" from T and created [[[D Pekka] ei] [[malla virtaa] [T nukku]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[malla virtaa] [T nukku]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [[[D Pekka] ei] [<malla virtaa>:1 [T [nukku <ADVP>:1]]]]
				= [[[D Pekka] ei] [<malla virtaa> [T [nukku <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka ei " into memory buffer from SPEC of "T".
				New head was spawned due to multiple specifiers at T but its category is unknown!
				Memory buffer: [[[D N] Neg/fin]]
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [[[D Pekka] ei] [? [<malla virtaa>:1 [T [nukku <ADVP>:1]]]]].
			= [[[D Pekka] ei] [? [<malla virtaa> [T [nukku <malla virtaa>]]]]]
		Checking LF-interface conditions.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
:['LANG:FI']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
?: [?]
malla: [ADV, ?]
virtaa: [V, ADV, ?]
T: [T, ?]
nukku: [V, T, ?]
(ADV): [ADV, V, T, ?]
(V): [V, ADV, V, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 32
['Pekka#foc', 'ei', 'virtaamalla', 'nukkunut']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'ABAR:FOC', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

6.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] ei] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
				Avoid [[D Pekka] ei] as left branch because it constitutes illicit structure.
ei {'ADV'}{'T'}
[(-198, [[D N] Neg/fin]), (0, Neg/fin)]
		Ranking completed:
			1. [ei; malla]
			2. [[[D Pekka] ei]; malla]
		Exploring solution number (1) =[ei malla]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei malla]]

7.

		Consume "virtaa"

		[[D Pekka] [ei malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [ei malla{V}]]

8.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] [ei malla{V}]] + T
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [ei <<D Pekka> <malla virtaa>>]] T] due to bad left branch.
				Reject [[ei [malla virtaa]] T] due to bad left branch.
		Exploring solution number (1) =[malla{V} T]
			malla was opened.
			=[[D Pekka] [ei [[malla virtaa] T]]]

9.

		Consume "nukku"

		[[D Pekka] [ei [[malla virtaa] T]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [ei [[malla virtaa] T{V}]]]

10.
	>>>	Trying candidate parse [[D Pekka] [ei [[malla virtaa] T{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [[malla virtaa] T{V}]]].
				Extracted head "nukku" from T and created [[D Pekka] [ei [[malla virtaa] [T nukku]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [ei [[malla virtaa] [T nukku]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:1 [ei [<DP>:1 [[malla virtaa] [T nukku]]]]]
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [<DP>:1 [[malla virtaa] [T nukku]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<D Pekka>:1 [ei [<DP>:1 [<malla virtaa>:2 [T [nukku <ADVP>:2]]]]]]
				= [<D Pekka> [ei [<D Pekka> [<malla virtaa> [T [nukku <malla virtaa>]]]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}
				Moving "____" into memory buffer from SPEC of "T".
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [<D Pekka>:1 [ei [<DP>:1 [uFOC [<malla virtaa>:2 [T [<DP>:1 [nukku <ADVP>:2]]]]]]]].
			= [<D Pekka> [ei [<D Pekka> [uFOC [<malla virtaa> [T [<D Pekka> [nukku <malla virtaa>]]]]]]]]
		Checking LF-interface conditions.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iFOC/uFOC', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
uFOC: [, Neg/fin]
malla: [ADV, , Neg/fin]
virtaa: [V, ADV, , Neg/fin]
T: [T, , Neg/fin]
(D): [D, T, , Neg/fin]
(N): [N, D, T, , Neg/fin]
nukku: [V, T, , Neg/fin]
(ADV): [ADV, V, T, , Neg/fin]
(V): [V, ADV, V, T, , Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D Pekka] ei] malla]
			Reconstructing head movement for [[D Pekka] ei].
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at ei
				= [[D Pekka] ei]
			Dropping A-/A-bar movement.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
				Extraposition will be tried on [[D Pekka] ei].
			=[[[D Pekka] ei] malla]

11.

		Consume "virtaa"

		[[[D Pekka] ei] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[D Pekka] ei] malla{V}]

12.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[[D Pekka] ei] malla{V}] + T
			Filtering out impossible merge sites...
				Reject [[[[D Pekka] ei] <malla virtaa>] T] due to bad left branch.
		Exploring solution number (1) =[malla{V} T]
			malla was opened.
			=[[[D Pekka] ei] [[malla virtaa] T]]

13.

		Consume "nukku"

		[[[D Pekka] ei] [[malla virtaa] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[[D Pekka] ei] [[malla virtaa] T{V}]]

14.
	>>>	Trying candidate parse [[[D Pekka] ei] [[malla virtaa] T{V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [[[D Pekka] ei] [[malla virtaa] T{V}]].
				Extracted head "nukku" from T and created [[[D Pekka] ei] [[malla virtaa] [T nukku]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[malla virtaa] [T nukku]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [[[D Pekka] ei] [<malla virtaa>:1 [T [nukku <ADVP>:1]]]]
				= [[[D Pekka] ei] [<malla virtaa> [T [nukku <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka ei " into memory buffer from SPEC of "T".
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T
				Memory buffer: [[[D N] Neg/fin]]
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [[[D Pekka] ei] [uFOC [<malla virtaa>:1 [T [nukku <ADVP>:1]]]]].
			= [[[D Pekka] ei] [uFOC [<malla virtaa> [T [nukku <malla virtaa>]]]]]
		Checking LF-interface conditions.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
uFOC: []
malla: [ADV, ]
virtaa: [V, ADV, ]
T: [T, ]
nukku: [V, T, ]
(ADV): [ADV, V, T, ]
(V): [V, ADV, V, T, ]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka#foc".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 33
['Pekka', 'nukkunut', 'ei', 'virtaamalla']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "nukku"

		[[D Pekka] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] T{V}]

6.

		Consume "ei"

		[[D Pekka] T{V}] + ei
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [T nukku]] ei] due to bad left branch.
		Exploring solution number (1) =[T{V} ei]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} ei]]

7.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [T{V} ei]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Avoid [[D Pekka] [T [nukku [[D Pekka] ei]]]] as left branch because it constitutes illicit structure.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [T [nukku ei]] as left branch because it constitutes illicit structure.
ei {'ADV'}{'T'}
[(-99, [[D N] [T Neg/fin]]), (-98, [T Neg/fin]), (0, Neg/fin)]
		Ranking completed:
			1. [ei; malla]
			2. [[T{V} ei]; malla]
			3. [[[D Pekka] [T{V} ei]]; malla]
		Exploring solution number (1) =[ei malla]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [T{V} [ei malla]]]

8.

		Consume "virtaa"

		[[D Pekka] [T{V} [ei malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [T{V} [ei malla{V}]]]

9.
	>>>	Trying candidate parse [[D Pekka] [T{V} [ei malla{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T{V} [ei malla{V}]]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T [nukku [ei malla{V}]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [T [nukku [ei [malla virtaa]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [T [nukku [ei [malla virtaa]]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:1 [T [nukku [ei [<DP>:1 [malla virtaa]]]]]]
				[malla virtaa] cannot be made an adjunct because its sister is an adjunct.
				[malla virtaa] cannot be made an adjunct because its sister is an adjunct.
				= [<D Pekka> [T [nukku [ei [<D Pekka> [malla virtaa]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "malla".
				Memory buffer: [[D N]]
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [<D Pekka>:1 [T [nukku [ei [<DP>:1 [malla virtaa]]]]]].
				<malla virtaa> was made adjunct by an extraposition rule.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
			= [<D Pekka> [T [nukku [ei [<D Pekka> <malla virtaa>]]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T]
nukku: [V, T]
ei: [Neg/fin, V, T]
(D): [D, Neg/fin, V, T]
(N): [N, D, Neg/fin, V, T]
malla: [ADV, Neg/fin, V, T]
virtaa: [V, ADV, Neg/fin, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T{V} ei] malla]
			Reconstructing head movement for [T{V} ei].
				Extracted head "nukku" and reconstructed it = [T [nukku ei]]
			Dropping floaters...
				= [T [nukku ei]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [T [nukku ei]].
			=[[D Pekka] [[T [nukku ei]] malla]]

10.

		Consume "virtaa"

		[[D Pekka] [[T [nukku ei]] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [[T [nukku ei]] malla{V}]]

11.
	>>>	Trying candidate parse [[D Pekka] [[T [nukku ei]] malla{V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[T [nukku ei]] malla{V}]].
				Extracted head "virtaa" from malla and created [[D Pekka] [[T [nukku ei]] [malla virtaa]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [[T [nukku ei]] [malla virtaa]]
				malla failed to tail.
				= [[D Pekka] [[T [nukku ei]] [malla virtaa]]]
			Dropping A-/A-bar movement.
				Moving "T nukku ei " into memory buffer from SPEC of "malla".
				Moving "D Pekka " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Memory buffer: [[T [V Neg/fin]], [D N]]
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [[D Pekka] [? [[T [nukku ei]] [malla virtaa]]]].
			= [[D Pekka] [? [[T [nukku ei]] [malla virtaa]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
?: [?]
T: [T, ?]
nukku: [V, T, ?]
ei: [Neg/fin, V, T, ?]
malla: [ADV, ?]
virtaa: [V, ADV, ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D Pekka] [T{V} ei]] malla]
			Reconstructing head movement for [[D Pekka] [T{V} ei]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T [nukku ei]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [T [nukku ei]]
				= [[D Pekka] [T [nukku ei]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of ei
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [[D Pekka]:1 [T [nukku [(DP):1 ei]]]].
			=[[[D Pekka]:1 [T [nukku [(DP):1 ei]]]] malla]

12.

		Consume "virtaa"

		[[[D Pekka] [T [nukku [[D Pekka] ei]]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[D Pekka]:1 [T [nukku [(DP):1 ei]]]] malla{V}]

13.
	>>>	Trying candidate parse [[[D Pekka] [T [nukku [[D Pekka] ei]]]] malla{V}] (3.)
		Reconstructing...
			Reconstructing head movement for [[[D Pekka]:1 [T [nukku [(DP):1 ei]]]] malla{V}].
				Extracted head "virtaa" from malla and created [[[D Pekka]:1 [T [nukku [(DP):1 ei]]]] [malla virtaa]]
			Dropping floaters...
				malla failed to tail.
				= [[[D Pekka] [T [nukku [[D Pekka] ei]]]] [malla virtaa]]
			Dropping A-/A-bar movement.
				Moving "D Pekka T nukku __ei " into memory buffer from SPEC of "malla".
				Memory buffer: [[[D N] [T [V [[D N] Neg/fin]]]]]
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [[[D Pekka]:1 [T [nukku [(DP):1 ei]]]] [malla virtaa]].
			= [[[D Pekka] [T [nukku [[D Pekka] ei]]]] [malla virtaa]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T]
nukku: [V, T]
(D): [D, V, T]
(N): [N, D, V, T]
ei: [Neg/fin, V, T]
malla: [ADV]
virtaa: [V, ADV]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 34
['Pekka#foc', 'nukkunut', 'ei', 'virtaamalla']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'ABAR:FOC', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

6.

		Consume "nukku"

		[[D Pekka] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] T{V}]

7.

		Consume "ei"

		[[D Pekka] T{V}] + ei
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [T nukku]] ei] due to bad left branch.
		Exploring solution number (1) =[T{V} ei]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} ei]]

8.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [T{V} ei]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Avoid [[D Pekka] [T [nukku [[D Pekka] ei]]]] as left branch because it constitutes illicit structure.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [T [nukku ei]] as left branch because it constitutes illicit structure.
ei {'ADV'}{'T'}
[(-99, [[D N] [T Neg/fin]]), (-98, [T Neg/fin]), (0, Neg/fin)]
		Ranking completed:
			1. [ei; malla]
			2. [[T{V} ei]; malla]
			3. [[[D Pekka] [T{V} ei]]; malla]
		Exploring solution number (1) =[ei malla]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [T{V} [ei malla]]]

9.

		Consume "virtaa"

		[[D Pekka] [T{V} [ei malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [T{V} [ei malla{V}]]]

10.
	>>>	Trying candidate parse [[D Pekka] [T{V} [ei malla{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T{V} [ei malla{V}]]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T [nukku [ei malla{V}]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [T [nukku [ei [malla virtaa]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [T [nukku [ei [malla virtaa]]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:1 [T [nukku [ei [<DP>:1 [malla virtaa]]]]]]
				[malla virtaa] cannot be made an adjunct because its sister is an adjunct.
				[malla virtaa] cannot be made an adjunct because its sister is an adjunct.
				= [<D Pekka> [T [nukku [ei [<D Pekka> [malla virtaa]]]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'T'}
				Moving "____" into memory buffer from SPEC of "malla".
				Criterial features {'FOC'} copied to {'ADV'}
				Tail features [CAT:V] were detected at malla, this must head an adjunct floater.
				[malla virtaa] cannot be made an adjunct because its sister is an adjunct.
				Memory buffer: [[D N]]
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [<D Pekka>:1 [T [nukku [ei [<DP>:1 [malla virtaa]]]]]].
				<malla virtaa> was made adjunct by an extraposition rule.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
			= [<D Pekka> [T [nukku [ei [<D Pekka> <malla virtaa>]]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'CAT:ADV/uFOC', 'CAT:uFOC', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T]
nukku: [V, T]
ei: [Neg/fin, V, T]
(D): [D, Neg/fin, V, T]
(N): [N, D, Neg/fin, V, T]
malla: [ADV, Neg/fin, V, T]
virtaa: [V, ADV, Neg/fin, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T{V} ei] malla]
			Reconstructing head movement for [T{V} ei].
				Extracted head "nukku" and reconstructed it = [T [nukku ei]]
			Dropping floaters...
				= [T [nukku ei]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [T [nukku ei]].
			=[[D Pekka] [[T [nukku ei]] malla]]

11.

		Consume "virtaa"

		[[D Pekka] [[T [nukku ei]] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [[T [nukku ei]] malla{V}]]

12.
	>>>	Trying candidate parse [[D Pekka] [[T [nukku ei]] malla{V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[T [nukku ei]] malla{V}]].
				Extracted head "virtaa" from malla and created [[D Pekka] [[T [nukku ei]] [malla virtaa]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [[T [nukku ei]] [malla virtaa]]
				malla failed to tail.
				= [[D Pekka] [[T [nukku ei]] [malla virtaa]]]
			Dropping A-/A-bar movement.
				Moving "T nukku ei " into memory buffer from SPEC of "malla".
				Moving "D Pekka " into memory buffer from SPEC of "malla".
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at malla
				Memory buffer: [[T [V Neg/fin]], [D N]]
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [[D Pekka] [uFOC [[T [nukku ei]] [malla virtaa]]]].
			= [[D Pekka] [uFOC [[T [nukku ei]] [malla virtaa]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
uFOC: []
T: [T, ]
nukku: [V, T, ]
ei: [Neg/fin, V, T, ]
malla: [ADV, ]
virtaa: [V, ADV, ]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D Pekka] [T{V} ei]] malla]
			Reconstructing head movement for [[D Pekka] [T{V} ei]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T [nukku ei]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [T [nukku ei]]
				= [[D Pekka] [T [nukku ei]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Criterial features {'FOC'} copied to {'T'}
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of ei
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [[D Pekka]:1 [T [nukku [(DP):1 ei]]]].
			=[[[D Pekka]:1 [T [nukku [(DP):1 ei]]]] malla]

13.

		Consume "virtaa"

		[[[D Pekka] [T [nukku [[D Pekka] ei]]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[D Pekka]:1 [T [nukku [(DP):1 ei]]]] malla{V}]

14.
	>>>	Trying candidate parse [[[D Pekka] [T [nukku [[D Pekka] ei]]]] malla{V}] (3.)
		Reconstructing...
			Reconstructing head movement for [[[D Pekka]:1 [T [nukku [(DP):1 ei]]]] malla{V}].
				Extracted head "virtaa" from malla and created [[[D Pekka]:1 [T [nukku [(DP):1 ei]]]] [malla virtaa]]
			Dropping floaters...
				malla failed to tail.
				= [[[D Pekka] [T [nukku [[D Pekka] ei]]]] [malla virtaa]]
			Dropping A-/A-bar movement.
				Moving "D Pekka T nukku __ei " into memory buffer from SPEC of "malla".
				Memory buffer: [[[D N] [T [V [[D N] Neg/fin]]]]]
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [[[D Pekka]:1 [T [nukku [(DP):1 ei]]]] [malla virtaa]].
			= [[[D Pekka] [T [nukku [[D Pekka] ei]]]] [malla virtaa]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T]
nukku: [V, T]
(D): [D, V, T]
(N): [N, D, V, T]
ei: [Neg/fin, V, T]
malla: [ADV]
virtaa: [V, ADV]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka#foc".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 35
['Pekka', 'nukkunut', 'virtaamalla', 'ei']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "nukku"

		[[D Pekka] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] T{V}]

6.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] T{V}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [[D Pekka] [T nukku]] as left branch because it constitutes illicit structure.
T{V} {'ADV'}{'D', 'v', '*', 'V'}
nukku {'ADV'}{'P'}
[(-99, [[D N] T]), (0, T)]
		Ranking completed:
			1. [T{V}; malla]
			2. [[[D Pekka] T{V}]; malla]
		Exploring solution number (1) =[T{V} malla]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} malla]]

7.

		Consume "virtaa"

		[[D Pekka] [T{V} malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [T{V} malla{V}]]

8.

		Consume "ei"

		[[D Pekka] [T{V} malla{V}]] + ei
			Filtering out impossible merge sites...
				Reject [[T [nukku <malla virtaa>]] ei] due to bad left branch.
			Ranking remaining sites...
malla{V} {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}{'*'}
virtaa {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}{'P'}
				Avoid malla{V} because it could break words.
[(-98, ADV), (0, [[D N] [T ADV]])]
		Ranking completed:
			1. [[[D Pekka] [T{V} malla{V}]]; ei]
			2. [malla{V}; ei]
		Exploring solution number (1) =[[[D Pekka] [T{V} malla{V}]] ei]
			Reconstructing head movement for [[D Pekka] [T{V} malla{V}]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T [nukku malla{V}]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [T [nukku [malla virtaa]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [T [nukku [malla virtaa]]]
				<malla virtaa> was made an adjunct.
				= [[D Pekka] [T [nukku <malla virtaa>]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of nukku
			=[[[D Pekka]:1 [T [(DP):1 [nukku <malla virtaa>]]]] ei]

9.
	>>>	Trying candidate parse [[[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]] ei] (1.)
		Reconstructing...
			Reconstructing head movement for [[[D Pekka]:1 [T [(DP):1 [nukku <malla virtaa>]]]] ei].
			Dropping floaters...
				= [[[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]] ei]
			Dropping A-/A-bar movement.
			= [[[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]] ei]
		Checking LF-interface conditions.
			Trying to transfer [[[D Pekka]:1 [T [(DP):1 [nukku <malla virtaa>]]]] ei] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 9/94 operations) <------------------------------------
		Solution:
		[[[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]] ei]
		Grammar: [[[D Pekka]:1 [T [(DP):1 [nukku <malla virtaa>]]]] ei]
		Spellout Neg/finP = [TP Neg/fin]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']

D: [D]
Pekka: [N, D]
T: [T]
(D): [D, T]
(N): [N, D, T]
nukku: [V, T]
malla: [ADV, V, T]
virtaa: [V, ADV, V, T]
ei: [Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 36
['Pekka#foc', 'nukkunut', 'virtaamalla', 'ei']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'ABAR:FOC', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

6.

		Consume "nukku"

		[[D Pekka] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] T{V}]

7.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] T{V}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [[D Pekka] [T nukku]] as left branch because it constitutes illicit structure.
T{V} {'ADV'}{'D', 'v', '*', 'V'}
nukku {'ADV'}{'P'}
[(-99, [[D N] T]), (0, T)]
		Ranking completed:
			1. [T{V}; malla]
			2. [[[D Pekka] T{V}]; malla]
		Exploring solution number (1) =[T{V} malla]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} malla]]

8.

		Consume "virtaa"

		[[D Pekka] [T{V} malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [T{V} malla{V}]]

9.

		Consume "ei"

		[[D Pekka] [T{V} malla{V}]] + ei
			Filtering out impossible merge sites...
				Reject [[T [nukku <malla virtaa>]] ei] due to bad left branch.
			Ranking remaining sites...
malla{V} {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}{'*'}
virtaa {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}{'P'}
				Avoid malla{V} because it could break words.
[(-98, ADV), (0, [[D N] [T ADV]])]
		Ranking completed:
			1. [[[D Pekka] [T{V} malla{V}]]; ei]
			2. [malla{V}; ei]
		Exploring solution number (1) =[[[D Pekka] [T{V} malla{V}]] ei]
			Reconstructing head movement for [[D Pekka] [T{V} malla{V}]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T [nukku malla{V}]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [T [nukku [malla virtaa]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [T [nukku [malla virtaa]]]
				<malla virtaa> was made an adjunct.
				= [[D Pekka] [T [nukku <malla virtaa>]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Criterial features {'FOC'} copied to {'T'}
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of nukku
			=[[[D Pekka]:1 [T [(DP):1 [nukku <malla virtaa>]]]] ei]

10.
	>>>	Trying candidate parse [[[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]] ei] (1.)
		Reconstructing...
			Reconstructing head movement for [[[D Pekka]:1 [T [(DP):1 [nukku <malla virtaa>]]]] ei].
			Dropping floaters...
				= [[[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]] ei]
			Dropping A-/A-bar movement.
			= [[[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]] ei]
		Checking LF-interface conditions.
			Trying to transfer [[[D Pekka]:1 [T [(DP):1 [nukku <malla virtaa>]]]] ei] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 10/100 operations) <------------------------------------
		Solution:
		[[[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]] ei]
		Grammar: [[[D Pekka]:1 [T [(DP):1 [nukku <malla virtaa>]]]] ei]
		Spellout Neg/finP = [TP Neg/fin]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']

D: [D]
Pekka: [N, D]
T: [T]
(D): [D, T]
(N): [N, D, T]
nukku: [V, T]
malla: [ADV, V, T]
virtaa: [V, ADV, V, T]
ei: [Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 37
['Pekka', 'virtaamalla', 'ei', 'nukkunut']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		D{N} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[D Pekka] malla]

5.

		Consume "virtaa"

		[[D Pekka] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] malla{V}]

6.

		Consume "ei"

		[[D Pekka] malla{V}] + ei
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [malla virtaa]] ei] due to bad left branch.
		Exploring solution number (1) =[malla{V} ei]
			malla was opened.
			=[[D Pekka] [[malla virtaa] ei]]

7.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] [[malla virtaa] ei]] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [[malla virtaa] ei]] T] due to bad left branch.
				Reject [[[malla virtaa] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [[malla virtaa] [ei T]]]

8.

		Consume "nukku"

		[[D Pekka] [[malla virtaa] [ei T]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [[malla virtaa] [ei T{V}]]]

9.
	>>>	Trying candidate parse [[D Pekka] [[malla virtaa] [ei T{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[malla virtaa] [ei T{V}]]].
				Extracted head "nukku" from T and created [[D Pekka] [[malla virtaa] [ei [T nukku]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [[malla virtaa] [ei [T nukku]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:1 [[malla virtaa] [ei [<DP>:1 [T nukku]]]]]
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [ei [<DP>:1 [T nukku]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<D Pekka>:1 [<malla virtaa>:2 [ei [<DP>:1 [T [nukku <ADVP>:2]]]]]]
				= [<D Pekka> [<malla virtaa> [ei [<D Pekka> [T [nukku <malla virtaa>]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at ei but its category is unknown!
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<D Pekka>:1 [? [<malla virtaa>:2 [ei [<DP>:1 [T [<DP>:1 [nukku <ADVP>:2]]]]]]]].
			= [<D Pekka> [? [<malla virtaa> [ei [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D: [D]
Pekka: [N, D]
?: [?]
malla: [ADV, ?]
virtaa: [V, ADV, ?]
ei: [Neg/fin, ?]
(D): [D, Neg/fin, ?]
(N): [N, D, Neg/fin, ?]
T: [T, Neg/fin, ?]
(D): [D, T, Neg/fin, ?]
(N): [N, D, T, Neg/fin, ?]
nukku: [V, T, Neg/fin, ?]
(ADV): [ADV, V, T, Neg/fin, ?]
(V): [V, ADV, V, T, Neg/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 38
['Pekka#foc', 'virtaamalla', 'ei', 'nukkunut']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'ABAR:FOC', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		D{N} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[D Pekka] malla]

6.

		Consume "virtaa"

		[[D Pekka] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] malla{V}]

7.

		Consume "ei"

		[[D Pekka] malla{V}] + ei
			Filtering out impossible merge sites...
				Reject [<[D Pekka] [malla virtaa]> ei] due to bad left branch.
		Exploring solution number (1) =[malla{V} ei]
			malla was opened.
			=[[D Pekka] [[malla virtaa] ei]]

8.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] [[malla virtaa] ei]] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [[malla virtaa] ei]] T] due to bad left branch.
				Reject [[[malla virtaa] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [[malla virtaa] [ei T]]]

9.

		Consume "nukku"

		[[D Pekka] [[malla virtaa] [ei T]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [[malla virtaa] [ei T{V}]]]

10.
	>>>	Trying candidate parse [[D Pekka] [[malla virtaa] [ei T{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[malla virtaa] [ei T{V}]]].
				Extracted head "nukku" from T and created [[D Pekka] [[malla virtaa] [ei [T nukku]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [[malla virtaa] [ei [T nukku]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:1 [[malla virtaa] [ei [<DP>:1 [T nukku]]]]]
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [ei [<DP>:1 [T nukku]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<D Pekka>:1 [<malla virtaa>:2 [ei [<DP>:1 [T [nukku <ADVP>:2]]]]]]
				= [<D Pekka> [<malla virtaa> [ei [<D Pekka> [T [nukku <malla virtaa>]]]]]]
			Dropping A-/A-bar movement.
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at ei
				Moving "____" into memory buffer from SPEC of "T".
				Criterial features {'FOC'} copied to {'T'}
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			= [<D Pekka> [uFOC [<malla virtaa> [ei [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [uFOC [<malla virtaa>:2 [ei [<DP>:1 [T [<DP>:1 [nukku <ADVP>:2]]]]]]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 10/94 operations) <------------------------------------
		Solution:
		[<D Pekka> [uFOC [<malla virtaa> [ei [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]]]]]
		Grammar: [<D Pekka>:1 [uFOC [<malla virtaa>:2 [ei [<DP>:1 [T [<DP>:1 [nukku <ADVP>:2]]]]]]]]
		Spellout P = [DP:1 [ [ADVP:2 [Neg/fin [__:1 [T [__:1 [V __:2]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D: [D]
Pekka: [N, D]
uFOC: []
malla: [ADV, ]
virtaa: [V, ADV, ]
ei: [Neg/fin, ]
(D): [D, Neg/fin, ]
(N): [N, D, Neg/fin, ]
T: [T, Neg/fin, ]
(D): [D, T, Neg/fin, ]
(N): [N, D, T, Neg/fin, ]
nukku: [V, T, Neg/fin, ]
(ADV): [ADV, V, T, Neg/fin, ]
(V): [V, ADV, V, T, Neg/fin, ]

			Checking if the sentence is ambiguous...


\========================================================================
# 39
['Pekka', 'virtaamalla', 'nukkunut', 'ei']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		D{N} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[D Pekka] malla]

5.

		Consume "virtaa"

		[[D Pekka] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] malla{V}]

6.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] malla{V}] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [malla virtaa]] T] due to bad left branch.
		Exploring solution number (1) =[malla{V} T]
			malla was opened.
			=[[D Pekka] [[malla virtaa] T]]

7.

		Consume "nukku"

		[[D Pekka] [[malla virtaa] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [[malla virtaa] T{V}]]

8.

		Consume "ei"

		[[D Pekka] [[malla virtaa] T{V}]] + ei
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [? [<malla virtaa> [T [[D Pekka] [nukku <malla virtaa>]]]]]] ei] due to bad left branch.
				Reject [[<malla virtaa> [T [nukku <malla virtaa>]]] ei] due to bad left branch.
		Exploring solution number (1) =[T{V} ei]
			T{V} cannot be opened.
			=[[D Pekka] [[malla virtaa] [T{V} ei]]]

9.
	>>>	Trying candidate parse [[D Pekka] [[malla virtaa] [T{V} ei]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[malla virtaa] [T{V} ei]]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [[malla virtaa] [T [nukku ei]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [[malla virtaa] [T [nukku ei]]]
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[malla virtaa] [T [nukku ei]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [[D Pekka] [<malla virtaa>:1 [T [nukku [ei <ADVP>:1]]]]]
				= [[D Pekka] [<malla virtaa> [T [nukku [ei <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				New head was spawned due to multiple specifiers at T but its category is unknown!
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of ei
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [[D Pekka]:2 [? [<malla virtaa>:1 [T [nukku [(DP):2 [ei <ADVP>:1]]]]]]].
			= [[D Pekka] [? [<malla virtaa> [T [nukku [[D Pekka] [ei <malla virtaa>]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D: [D]
Pekka: [N, D]
?: [?]
malla: [ADV, ?]
virtaa: [V, ADV, ?]
T: [T, ?]
nukku: [V, T, ?]
(D): [D, V, T, ?]
(N): [N, D, V, T, ?]
ei: [Neg/fin, V, T, ?]
(ADV): [ADV, Neg/fin, V, T, ?]
(V): [V, ADV, Neg/fin, V, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 40
['Pekka#foc', 'virtaamalla', 'nukkunut', 'ei']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'ABAR:FOC', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		D{N} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[D Pekka] malla]

6.

		Consume "virtaa"

		[[D Pekka] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] malla{V}]

7.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] malla{V}] + T
			Filtering out impossible merge sites...
				Reject [<[D Pekka] [malla virtaa]> T] due to bad left branch.
		Exploring solution number (1) =[malla{V} T]
			malla was opened.
			=[[D Pekka] [[malla virtaa] T]]

8.

		Consume "nukku"

		[[D Pekka] [[malla virtaa] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [[malla virtaa] T{V}]]

9.

		Consume "ei"

		[[D Pekka] [[malla virtaa] T{V}]] + ei
			Filtering out impossible merge sites...
				Reject [[<malla virtaa> [T [nukku <malla virtaa>]]] ei] due to bad left branch.
			Ranking remaining sites...
T{V} {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}{'D', 'v', '*', 'V'}
nukku {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}{'P'}
[(0, [[D N] [[ADV V] T]]), (0, T)]
		Ranking completed:
			1. [T{V}; ei]
			2. [[[D Pekka] [[malla virtaa] T{V}]]; ei]
		Exploring solution number (1) =[T{V} ei]
			T{V} cannot be opened.
			=[[D Pekka] [[malla virtaa] [T{V} ei]]]

10.
	>>>	Trying candidate parse [[D Pekka] [[malla virtaa] [T{V} ei]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[malla virtaa] [T{V} ei]]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [[malla virtaa] [T [nukku ei]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [[malla virtaa] [T [nukku ei]]]
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[malla virtaa] [T [nukku ei]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [[D Pekka] [<malla virtaa>:1 [T [nukku [ei <ADVP>:1]]]]]
				= [[D Pekka] [<malla virtaa> [T [nukku [ei <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of ei
				Criterial features {'FOC'} copied to {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}
				Criterial features {'FOC'} copied to {'iFOC', 'NEG', 'FIN/NEG/Neg/fin', 'Neg/fin', 'FIN', 'FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iFOC/uFOC', 'uFOC'}
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [[D Pekka]:2 [uFOC [<malla virtaa>:1 [T [nukku [(DP):2 [ei <ADVP>:1]]]]]]].
			= [[D Pekka] [uFOC [<malla virtaa> [T [nukku [[D Pekka] [ei <malla virtaa>]]]]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iFOC/uFOC/FIN/NEG/Neg/fin/NEG/Neg/fin/iFOC/uFOC', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iFOC/uFOC', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D: [D]
Pekka: [N, D]
uFOC: []
malla: [ADV, ]
virtaa: [V, ADV, ]
T: [T, ]
nukku: [V, T, ]
(D): [D, V, T, ]
(N): [N, D, V, T, ]
ei: [Neg/fin, V, T, ]
(ADV): [ADV, Neg/fin, V, T, ]
(V): [V, ADV, Neg/fin, V, T, ]


		Trying to find other solutions...
		Exploring solution number (2) =[[[D Pekka] [[malla virtaa] T{V}]] ei]
			Reconstructing head movement for [[D Pekka] [[malla virtaa] T{V}]].
				Extracted head "nukku" from T and created [[D Pekka] [[malla virtaa] [T nukku]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [[malla virtaa] [T nukku]]
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[malla virtaa] [T nukku]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [[D Pekka] [<malla virtaa>:1 [T [nukku <ADVP>:1]]]]
				= [[D Pekka] [<malla virtaa> [T [nukku <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of nukku
			=[[[D Pekka]:2 [uFOC [<malla virtaa>:1 [T [(DP):2 [nukku <ADVP>:1]]]]]] ei]

11.
	>>>	Trying candidate parse [[[D Pekka] [uFOC [<malla virtaa> [T [[D Pekka] [nukku <malla virtaa>]]]]]] ei] (2.)
		Reconstructing...
			Reconstructing head movement for [[[D Pekka]:2 [uFOC [<malla virtaa>:1 [T [(DP):2 [nukku <ADVP>:1]]]]]] ei].
			Dropping floaters...
				= [[[D Pekka] [uFOC [<malla virtaa> [T [[D Pekka] [nukku <malla virtaa>]]]]]] ei]
			Dropping A-/A-bar movement.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [[[D Pekka]:2 [uFOC [<malla virtaa>:1 [T [(DP):2 [nukku <ADVP>:1]]]]]] ei].
			= [[[D Pekka] [uFOC [<malla virtaa> [T [[D Pekka] [nukku <malla virtaa>]]]]]] ei]
		Checking LF-interface conditions.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iFOC/uFOC/FIN/NEG/Neg/fin/NEG/Neg/fin/iFOC/uFOC', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iFOC/uFOC', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']

D: [D]
Pekka: [N, D]
uFOC: []
malla: [ADV, ]
virtaa: [V, ADV, ]
T: [T, ]
(D): [D, T, ]
(N): [N, D, T, ]
nukku: [V, T, ]
(ADV): [ADV, V, T, ]
(V): [V, ADV, V, T, ]
ei: [Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka#foc".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 41
['ei', 'Pekka', 'nukkunut', 'virtaamalla']


			=None

1.
			=ei

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=ei

3.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		ei + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[ei D]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[ei D]

4.

		Consume "Pekka"

		[ei D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[ei D{N}]

5.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[ei D{N}] + T
			Filtering out impossible merge sites...
				Reject [[ei [D Pekka]] T] due to bad left branch.
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[ei [[D Pekka] T]]

6.

		Consume "nukku"

		[ei [[D Pekka] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[ei [[D Pekka] T{V}]]

7.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[ei [[D Pekka] T{V}]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla.
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [ei [[D Pekka] [T [[D Pekka] nukku]]]] as left branch because it constitutes illicit structure.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [[D Pekka] [T nukku]] as left branch because it constitutes illicit structure.
T{V} {'ADV'}{'D', 'v', '*', 'V'}
nukku {'ADV'}{'P'}
[(-198, [Neg/fin [[D N] T]]), (-98, [[D N] T]), (0, T)]
		Ranking completed:
			1. [T{V}; malla]
			2. [[[D Pekka] T{V}]; malla]
			3. [[ei [[D Pekka] T{V}]]; malla]
		Exploring solution number (1) =[T{V} malla]
			T{V} cannot be opened.
			=[ei [[D Pekka] [T{V} malla]]]

8.

		Consume "virtaa"

		[ei [[D Pekka] [T{V} malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[ei [[D Pekka] [T{V} malla{V}]]]

9.
	>>>	Trying candidate parse [ei [[D Pekka] [T{V} malla{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [ei [[D Pekka] [T{V} malla{V}]]].
				Extracted head "nukku" and reconstructed it = [ei [[D Pekka] [T [nukku malla{V}]]]]
				Extracted head "virtaa" from malla and created [ei [[D Pekka] [T [nukku [malla virtaa]]]]]
			Dropping floaters...
				<malla virtaa> was made an adjunct.
				= [ei [[D Pekka] [T [nukku <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of nukku
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [ei [[D Pekka]:1 [T [(DP):1 [nukku <malla virtaa>]]]]].
			= [ei [[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]]]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

ei: [Neg/fin]
D: [D, Neg/fin]
Pekka: [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
nukku: [V, T, Neg/fin]
malla: [ADV, V, T, Neg/fin]
virtaa: [V, ADV, V, T, Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D Pekka] T{V}] malla]
			Reconstructing head movement for [[D Pekka] T{V}].
				Extracted head "nukku" from T and created [[D Pekka] [T nukku]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [T nukku]
				= [[D Pekka] [T nukku]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				An EPP-head "nukku" lacks specifier D that it requires.
			=[ei [[[D Pekka]:1 [T nukku]] malla]]

10.

		Consume "virtaa"

		[ei [[[D Pekka] [T nukku]] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[ei [[[D Pekka]:1 [T nukku]] malla{V}]]

11.
	>>>	Trying candidate parse [ei [[[D Pekka] [T nukku]] malla{V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [ei [[[D Pekka]:1 [T nukku]] malla{V}]].
				Extracted head "virtaa" from malla and created [ei [[[D Pekka]:1 [T nukku]] [malla virtaa]]]
			Dropping floaters...
				malla failed to tail.
				malla failed to tail.
				= [ei [[[D Pekka] [T nukku]] [malla virtaa]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka T nukku " into memory buffer from SPEC of "malla".
				Memory buffer: [[[D N] [T V]]]
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [ei [[[D Pekka]:1 [T nukku]] [malla virtaa]]].
				<malla virtaa> was made adjunct by an extraposition rule.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
			= [ei [[[D Pekka] [T nukku]] <malla virtaa>]]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

ei: [Neg/fin]
D: [D, Neg/fin]
Pekka: [N, D, Neg/fin]
T: [T, Neg/fin]
nukku: [V, T, Neg/fin]
malla: [ADV, Neg/fin]
virtaa: [V, ADV, Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[ei [[D Pekka] T{V}]] malla]
			Reconstructing head movement for [ei [[D Pekka] T{V}]].
				Extracted head "nukku" from T and created [ei [[D Pekka] [T nukku]]]
			Dropping floaters...
				= [ei [[D Pekka] [T nukku]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of nukku
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [ei [[D Pekka]:1 [T [(DP):1 nukku]]]].
			=[[ei [[D Pekka]:1 [T [(DP):1 nukku]]]] malla]

12.

		Consume "virtaa"

		[[ei [[D Pekka] [T [[D Pekka] nukku]]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[ei [[D Pekka]:1 [T [(DP):1 nukku]]]] malla{V}]

13.
	>>>	Trying candidate parse [[ei [[D Pekka] [T [[D Pekka] nukku]]]] malla{V}] (3.)
		Reconstructing...
			Reconstructing head movement for [[ei [[D Pekka]:1 [T [(DP):1 nukku]]]] malla{V}].
				Extracted head "virtaa" from malla and created [[ei [[D Pekka]:1 [T [(DP):1 nukku]]]] [malla virtaa]]
			Dropping floaters...
				malla failed to tail.
				= [[ei [[D Pekka] [T [[D Pekka] nukku]]]] [malla virtaa]]
			Dropping A-/A-bar movement.
				Moving "ei D Pekka T __nukku " into memory buffer from SPEC of "malla".
				Memory buffer: [[Neg/fin [[D N] [T [[D N] V]]]]]
				An EPP-head "ei" lacks specifier but needs one.
				malla has unaccetable specifier [ei [[D Pekka]:1 [T [(DP):1 nukku]]]].
				Extraposition will be tried on [[ei [[D Pekka]:1 [T [(DP):1 nukku]]]] [malla virtaa]].
			= [[ei [[D Pekka] [T [[D Pekka] nukku]]]] [malla virtaa]]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
				malla has unaccetable specifier [ei [[D Pekka]:1 [T [(DP):1 nukku]]]].
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

ei: [Neg/fin]
D: [D, Neg/fin]
Pekka: [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
nukku: [V, T, Neg/fin]
malla: [ADV]
virtaa: [V, ADV]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 42
['ei#foc', 'Pekka', 'nukkunut', 'virtaamalla']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'ei']
			=C

2.

		Consume "ei"

		C + ei
			Filtering out impossible merge sites...
			Sink "ei" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*ei]
			=C{Neg/fin}

3.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=C{Neg/fin}

4.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		C{Neg/fin} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{Neg/fin} D]
			C{Neg/fin} cannot be opened.
			=[C{Neg/fin} D]

5.

		Consume "Pekka"

		[C{Neg/fin} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{Neg/fin} D{N}]

6.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[C{Neg/fin} D{N}] + T
			Filtering out impossible merge sites...
				Reject [[C [ei [D Pekka]]] T] due to bad left branch.
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[C{Neg/fin} [[D Pekka] T]]

7.

		Consume "nukku"

		[C{Neg/fin} [[D Pekka] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[C{Neg/fin} [[D Pekka] T{V}]]

8.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[C{Neg/fin} [[D Pekka] T{V}]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [[D Pekka] [T nukku]] as left branch because it constitutes illicit structure.
T{V} {'ADV'}{'D', 'v', '*', 'V'}
nukku {'ADV'}{'P'}
[(-98, [[D N] T]), (0, [C/fin [[D N] T]]), (0, T)]
		Ranking completed:
			1. [T{V}; malla]
			2. [[C{Neg/fin} [[D Pekka] T{V}]]; malla]
			3. [[[D Pekka] T{V}]; malla]
		Exploring solution number (1) =[T{V} malla]
			T{V} cannot be opened.
			=[C{Neg/fin} [[D Pekka] [T{V} malla]]]

9.

		Consume "virtaa"

		[C{Neg/fin} [[D Pekka] [T{V} malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[C{Neg/fin} [[D Pekka] [T{V} malla{V}]]]

10.
	>>>	Trying candidate parse [C{Neg/fin} [[D Pekka] [T{V} malla{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{Neg/fin} [[D Pekka] [T{V} malla{V}]]].
				Extracted head "ei" and reconstructed it = [C [[D Pekka] [ei [T{V} malla{V}]]]]
				Extracted head "nukku" and reconstructed it = [C [[D Pekka] [ei [T [nukku malla{V}]]]]]
				Extracted head "virtaa" from malla and created [C [[D Pekka] [ei [T [nukku [malla virtaa]]]]]]
			Dropping floaters...
				[D Pekka] is in an EPP SPEC position.
				Start reconstruction at [[D Pekka] [ei [T [nukku [malla virtaa]]]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<D Pekka>:1 [ei [<DP>:1 [T [nukku [malla virtaa]]]]]]]
				<malla virtaa> was made an adjunct.
				= [C [<D Pekka> [ei [<D Pekka> [T [nukku <malla virtaa>]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			= [C [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 [nukku <malla virtaa>]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 10/96 operations) <------------------------------------
		Solution:
		[C [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]]]]
		Grammar: [C [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 [nukku <malla virtaa>]]]]]]]
		Spellout C/finP = [C/fin [DP:1 [Neg/fin [__:1 [T [__:1 [V ADVP]]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

C: [C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
ei: [Neg/fin, C/fin]
(D): [D, Neg/fin, C/fin]
(N): [N, D, Neg/fin, C/fin]
T: [T, Neg/fin, C/fin]
(D): [D, T, Neg/fin, C/fin]
(N): [N, D, T, Neg/fin, C/fin]
nukku: [V, T, Neg/fin, C/fin]
malla: [ADV, V, T, Neg/fin, C/fin]
virtaa: [V, ADV, V, T, Neg/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 43
['ei', 'Pekka', 'virtaamalla', 'nukkunut']


			=None

1.
			=ei

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=ei

3.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		ei + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[ei D]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[ei D]

4.

		Consume "Pekka"

		[ei D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[ei D{N}]

5.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[ei D{N}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [ei [D Pekka]] as left branch because it constitutes illicit structure.
D{N} {'ADV'}{'N', '*'}
Pekka {'ADV'}{'R', 'uR', 'R/D'}
				Avoid [Pekka malla] due to complement selection.
			D was opened.
				Prioritize D{N} because all solutions were negative.
[(-198, [Neg/fin D]), (102, D)]
		Ranking completed:
			1. [D{N}; malla]
			2. [[ei D{N}]; malla]
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[ei [[D Pekka] malla]]

6.

		Consume "virtaa"

		[ei [[D Pekka] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[ei [[D Pekka] malla{V}]]

7.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[ei [[D Pekka] malla{V}]] + T
			Filtering out impossible merge sites...
				Reject [[ei [[D Pekka] <malla virtaa>]] T] due to bad left branch.
				Reject [[[D Pekka] [malla virtaa]] T] due to bad left branch.
		Exploring solution number (1) =[malla{V} T]
			malla was opened.
			=[ei [[D Pekka] [[malla virtaa] T]]]

8.

		Consume "nukku"

		[ei [[D Pekka] [[malla virtaa] T]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[ei [[D Pekka] [[malla virtaa] T{V}]]]

9.
	>>>	Trying candidate parse [ei [[D Pekka] [[malla virtaa] T{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [ei [[D Pekka] [[malla virtaa] T{V}]]].
				Extracted head "nukku" from T and created [ei [[D Pekka] [[malla virtaa] [T nukku]]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[D Pekka] [[malla virtaa] [T nukku]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [ei [[D Pekka] [<malla virtaa>:1 [T [nukku <ADVP>:1]]]]]
				= [ei [[D Pekka] [<malla virtaa> [T [nukku <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				New head was spawned due to multiple specifiers at T but its category is unknown!
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of nukku
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [ei [[D Pekka]:2 [? [<malla virtaa>:1 [T [(DP):2 [nukku <ADVP>:1]]]]]]].
			= [ei [[D Pekka] [? [<malla virtaa> [T [[D Pekka] [nukku <malla virtaa>]]]]]]]
		Checking LF-interface conditions.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

ei: [Neg/fin]
D: [D, Neg/fin]
Pekka: [N, D, Neg/fin]
?: [?, Neg/fin]
malla: [ADV, ?, Neg/fin]
virtaa: [V, ADV, ?, Neg/fin]
T: [T, ?, Neg/fin]
(D): [D, T, ?, Neg/fin]
(N): [N, D, T, ?, Neg/fin]
nukku: [V, T, ?, Neg/fin]
(ADV): [ADV, V, T, ?, Neg/fin]
(V): [V, ADV, V, T, ?, Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[ei D{N}] malla]
			Reconstructing head movement for [ei D{N}].
				Extracted head "Pekka" from D and created [ei [D Pekka]]
			Dropping floaters...
				= [ei [D Pekka]]
			Dropping A-/A-bar movement.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [ei [D Pekka]].
			=[[ei [D Pekka]] malla]

10.

		Consume "virtaa"

		[[ei [D Pekka]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[ei [D Pekka]] malla{V}]

11.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[ei [D Pekka]] malla{V}] + T
			Filtering out impossible merge sites...
				Reject [[[ei [D Pekka]] [malla virtaa]] T] due to bad left branch.
		Exploring solution number (1) =[malla{V} T]
			malla was opened.
			=[[ei [D Pekka]] [[malla virtaa] T]]

12.

		Consume "nukku"

		[[ei [D Pekka]] [[malla virtaa] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[ei [D Pekka]] [[malla virtaa] T{V}]]

13.
	>>>	Trying candidate parse [[ei [D Pekka]] [[malla virtaa] T{V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [[ei [D Pekka]] [[malla virtaa] T{V}]].
				Extracted head "nukku" from T and created [[ei [D Pekka]] [[malla virtaa] [T nukku]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[malla virtaa] [T nukku]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [[ei [D Pekka]] [<malla virtaa>:1 [T [nukku <ADVP>:1]]]]
				= [[ei [D Pekka]] [<malla virtaa> [T [nukku <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				Moving "ei D Pekka " into memory buffer from SPEC of "T".
				New head was spawned due to multiple specifiers at T but its category is unknown!
				Memory buffer: [[Neg/fin [D N]]]
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [[ei [D Pekka]] [? [<malla virtaa>:1 [T [nukku <ADVP>:1]]]]].
			= [[ei [D Pekka]] [? [<malla virtaa> [T [nukku <malla virtaa>]]]]]
		Checking LF-interface conditions.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

ei: [Neg/fin]
D: [D, Neg/fin]
Pekka: [N, D, Neg/fin]
?: [?]
malla: [ADV, ?]
virtaa: [V, ADV, ?]
T: [T, ?]
nukku: [V, T, ?]
(ADV): [ADV, V, T, ?]
(V): [V, ADV, V, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 44
['ei#foc', 'Pekka', 'virtaamalla', 'nukkunut']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'ei']
			=C

2.

		Consume "ei"

		C + ei
			Filtering out impossible merge sites...
			Sink "ei" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*ei]
			=C{Neg/fin}

3.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=C{Neg/fin}

4.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		C{Neg/fin} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{Neg/fin} D]
			C{Neg/fin} cannot be opened.
			=[C{Neg/fin} D]

5.

		Consume "Pekka"

		[C{Neg/fin} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{Neg/fin} D{N}]

6.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[C{Neg/fin} D{N}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [C [ei [D Pekka]]] as left branch because it constitutes illicit structure.
D{N} {'ADV'}{'N', '*'}
Pekka {'ADV'}{'R', 'uR', 'R/D'}
				Avoid [Pekka malla] due to complement selection.
			D was opened.
				Prioritize D{N} because all solutions were negative.
[(-99, [C/fin D]), (102, D)]
		Ranking completed:
			1. [D{N}; malla]
			2. [[C{Neg/fin} D{N}]; malla]
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[C{Neg/fin} [[D Pekka] malla]]

7.

		Consume "virtaa"

		[C{Neg/fin} [[D Pekka] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[C{Neg/fin} [[D Pekka] malla{V}]]

8.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[C{Neg/fin} [[D Pekka] malla{V}]] + T
			Filtering out impossible merge sites...
				Reject [[C [<D Pekka> [ei [<D Pekka> <malla virtaa>]]]] T] due to bad left branch.
				Reject [[[D Pekka] [malla virtaa]] T] due to bad left branch.
		Exploring solution number (1) =[malla{V} T]
			malla was opened.
			=[C{Neg/fin} [[D Pekka] [[malla virtaa] T]]]

9.

		Consume "nukku"

		[C{Neg/fin} [[D Pekka] [[malla virtaa] T]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[C{Neg/fin} [[D Pekka] [[malla virtaa] T{V}]]]

10.
	>>>	Trying candidate parse [C{Neg/fin} [[D Pekka] [[malla virtaa] T{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{Neg/fin} [[D Pekka] [[malla virtaa] T{V}]]].
				Extracted head "ei" and reconstructed it = [C [[D Pekka] [ei [[malla virtaa] T{V}]]]]
				Extracted head "nukku" from T and created [C [[D Pekka] [ei [[malla virtaa] [T nukku]]]]]
			Dropping floaters...
				[D Pekka] is in an EPP SPEC position.
				Start reconstruction at [[D Pekka] [ei [[malla virtaa] [T nukku]]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<D Pekka>:1 [ei [<DP>:1 [[malla virtaa] [T nukku]]]]]]
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [<DP>:1 [[malla virtaa] [T nukku]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [C [<D Pekka>:1 [ei [<DP>:1 [<malla virtaa>:2 [T [nukku <ADVP>:2]]]]]]]
				= [C [<D Pekka> [ei [<D Pekka> [<malla virtaa> [T [nukku <malla virtaa>]]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				New head was spawned due to multiple specifiers at T but its category is unknown!
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
				ei (ei) is missing a mandatory complement T
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [C [<D Pekka>:1 [ei [<DP>:1 [? [<malla virtaa>:2 [T [<DP>:1 [nukku <ADVP>:2]]]]]]]]].
			= [C [<D Pekka> [ei [<D Pekka> [? [<malla virtaa> [T [<D Pekka> [nukku <malla virtaa>]]]]]]]]]
		Checking LF-interface conditions.
				ei (ei) is missing a mandatory complement T
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
:['LANG:FI']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

C: [C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
ei: [Neg/fin, C/fin]
(D): [D, Neg/fin, C/fin]
(N): [N, D, Neg/fin, C/fin]
?: [?, Neg/fin, C/fin]
malla: [ADV, ?, Neg/fin, C/fin]
virtaa: [V, ADV, ?, Neg/fin, C/fin]
T: [T, ?, Neg/fin, C/fin]
(D): [D, T, ?, Neg/fin, C/fin]
(N): [N, D, T, ?, Neg/fin, C/fin]
nukku: [V, T, ?, Neg/fin, C/fin]
(ADV): [ADV, V, T, ?, Neg/fin, C/fin]
(V): [V, ADV, V, T, ?, Neg/fin, C/fin]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[C{Neg/fin} D{N}] malla]
			Reconstructing head movement for [C{Neg/fin} D{N}].
				Head reconstruction failed for ei, merged locally as a last resort.
				Extracted head "ei" and reconstructed it = [C [ei D{N}]]
				Extracted head "Pekka" from D and created [C [ei [D Pekka]]]
			Dropping floaters...
				= [C [ei [D Pekka]]]
			Dropping A-/A-bar movement.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [C [ei [D Pekka]]].
			=[[C [ei [D Pekka]]] malla]

11.

		Consume "virtaa"

		[[C [ei [D Pekka]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[C [ei [D Pekka]]] malla{V}]

12.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[C [ei [D Pekka]]] malla{V}] + T
			Filtering out impossible merge sites...
				Reject [[[C [ei [D Pekka]]] [malla virtaa]] T] due to bad left branch.
		Exploring solution number (1) =[malla{V} T]
			malla was opened.
			=[[C [ei [D Pekka]]] [[malla virtaa] T]]

13.

		Consume "nukku"

		[[C [ei [D Pekka]]] [[malla virtaa] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[C [ei [D Pekka]]] [[malla virtaa] T{V}]]

14.
	>>>	Trying candidate parse [[C [ei [D Pekka]]] [[malla virtaa] T{V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [[C [ei [D Pekka]]] [[malla virtaa] T{V}]].
				Extracted head "nukku" from T and created [[C [ei [D Pekka]]] [[malla virtaa] [T nukku]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[malla virtaa] [T nukku]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [[C [ei [D Pekka]]] [<malla virtaa>:1 [T [nukku <ADVP>:1]]]]
				= [[C [ei [D Pekka]]] [<malla virtaa> [T [nukku <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				Moving "C ei D Pekka " into memory buffer from SPEC of "T".
				New head was spawned due to multiple specifiers at T but its category is unknown!
				Memory buffer: [[C/fin [Neg/fin [D N]]]]
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [[C [ei [D Pekka]]] [? [<malla virtaa>:1 [T [nukku <ADVP>:1]]]]].
			= [[C [ei [D Pekka]]] [? [<malla virtaa> [T [nukku <malla virtaa>]]]]]
		Checking LF-interface conditions.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

C: [C/fin]
ei: [Neg/fin, C/fin]
D: [D, Neg/fin, C/fin]
Pekka: [N, D, Neg/fin, C/fin]
?: [?]
malla: [ADV, ?]
virtaa: [V, ADV, ?]
T: [T, ?]
nukku: [V, T, ?]
(ADV): [ADV, V, T, ?]
(V): [V, ADV, V, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei#foc".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 45
['ei', 'nukkunut', 'Pekka', 'virtaamalla']


			=None

1.
			=ei

2.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		ei + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[ei T]

3.

		Consume "nukku"

		[ei T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[ei T{V}]

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[ei T{V}]

5.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[ei T{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [ei [T nukku]] as left branch because it constitutes illicit structure.
				Avoid TP as SPEC for D due to unselective SPEC feature.
T{V} {'D'}{'D', 'v', '*', 'V'}
				Prioritize [T{V} D] due to complement selection.
nukku {'D'}{'P'}
[(-198, [Neg/fin T]), (4, T)]
		Ranking completed:
			1. [T{V}; D]
			2. [[ei T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[ei [T{V} D]]

6.

		Consume "Pekka"

		[ei [T{V} D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[ei [T{V} D{N}]]

7.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[ei [T{V} D{N}]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla.
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [ei [<D Pekka> [T [<D Pekka> [nukku <D Pekka>]]]]] as left branch because it constitutes illicit structure.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				Avoid [T [nukku [D Pekka]]] as left branch because it constitutes illicit structure.
D{N} {'ADV'}{'N', '*'}
Pekka {'ADV'}{'R', 'uR', 'R/D'}
				Avoid [Pekka malla] due to complement selection.
			D was opened.
				Prioritize D{N} because all solutions were negative.
[(-198, [Neg/fin [T D]]), (-98, [T D]), (103, D)]
		Ranking completed:
			1. [D{N}; malla]
			2. [[T{V} D{N}]; malla]
			3. [[ei [T{V} D{N}]]; malla]
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[ei [T{V} [[D Pekka] malla]]]

8.

		Consume "virtaa"

		[ei [T{V} [[D Pekka] malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[ei [T{V} [[D Pekka] malla{V}]]]

9.
	>>>	Trying candidate parse [ei [T{V} [[D Pekka] malla{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [ei [T{V} [[D Pekka] malla{V}]]].
				Extracted head "nukku" and reconstructed it = [ei [T [nukku [[D Pekka] malla{V}]]]]
				Extracted head "virtaa" from malla and created [ei [T [nukku [[D Pekka] [malla virtaa]]]]]
			Dropping floaters...
				<malla virtaa> was made an adjunct.
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [T [nukku [[D Pekka] <malla virtaa>]]]
				[D Pekka] cannot be made an adjunct because its sister is an adjunct.
				Floater [D Pekka] dropped: [ei [(DP):1 [T [nukku [[D Pekka]:1 <malla virtaa>]]]]]
				= [ei [[D Pekka] [T [nukku [[D Pekka] <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent (DP):1 from memory buffer into Spec of nukku
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [ei [(DP):1 [T [(DP):1 [nukku [[D Pekka]:1 <malla virtaa>]]]]]].
			= [ei [[D Pekka] [T [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]]]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
nukku: [V, T, Neg/fin]
D: [D, V, T, Neg/fin]
Pekka: [N, D, V, T, Neg/fin]
malla: [ADV, V, T, Neg/fin]
virtaa: [V, ADV, V, T, Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T{V} D{N}] malla]
			Reconstructing head movement for [T{V} D{N}].
				Extracted head "nukku" and reconstructed it = [T [nukku D{N}]]
				Extracted head "Pekka" from D and created [T [nukku [D Pekka]]]
			Dropping floaters...
				D failed to tail.
				= [T [nukku [D Pekka]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
			=[ei [[T [nukku [D Pekka]]] malla]]

10.

		Consume "virtaa"

		[ei [[T [nukku [D Pekka]]] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[ei [[T [nukku [D Pekka]]] malla{V}]]

11.
	>>>	Trying candidate parse [ei [[T [nukku [D Pekka]]] malla{V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [ei [[T [nukku [D Pekka]]] malla{V}]].
				Extracted head "virtaa" from malla and created [ei [[T [nukku [D Pekka]]] [malla virtaa]]]
			Dropping floaters...
				malla failed to tail.
				malla failed to tail.
				= [ei [[T [nukku [D Pekka]]] [malla virtaa]]]
			Dropping A-/A-bar movement.
				Moving "T nukku D Pekka " into memory buffer from SPEC of "malla".
				Memory buffer: [[T [V [D N]]]]
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				Extraposition will be tried on [ei [[T [nukku [D Pekka]]] [malla virtaa]]].
				<malla virtaa> was made adjunct by an extraposition rule.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
			= [ei [[T [nukku [D Pekka]]] <malla virtaa>]]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

ei: [Neg/fin]
T: [T, Neg/fin]
nukku: [V, T, Neg/fin]
D: [D, V, T, Neg/fin]
Pekka: [N, D, V, T, Neg/fin]
malla: [ADV, Neg/fin]
virtaa: [V, ADV, Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[ei [T{V} D{N}]] malla]
			Reconstructing head movement for [ei [T{V} D{N}]].
				Extracted head "nukku" and reconstructed it = [ei [T [nukku D{N}]]]
				Extracted head "Pekka" from D and created [ei [T [nukku [D Pekka]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at [T [nukku <D Pekka>]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [ei [<DP>:1 [T [nukku <D Pekka>:1]]]]
				= [ei [<D Pekka> [T [nukku <D Pekka>]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [ei [<DP>:1 [T [<DP>:1 [nukku <D Pekka>:1]]]]].
			=[[ei [<DP>:1 [T [<DP>:1 [nukku <D Pekka>:1]]]]] malla]

12.

		Consume "virtaa"

		[[ei [<D Pekka> [T [<D Pekka> [nukku <D Pekka>]]]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[ei [<DP>:1 [T [<DP>:1 [nukku <D Pekka>:1]]]]] malla{V}]

13.
	>>>	Trying candidate parse [[ei [<D Pekka> [T [<D Pekka> [nukku <D Pekka>]]]]] malla{V}] (3.)
		Reconstructing...
			Reconstructing head movement for [[ei [<DP>:1 [T [<DP>:1 [nukku <D Pekka>:1]]]]] malla{V}].
				Extracted head "virtaa" from malla and created [[ei [<DP>:1 [T [<DP>:1 [nukku <D Pekka>:1]]]]] [malla virtaa]]
			Dropping floaters...
				malla failed to tail.
				= [[ei [<D Pekka> [T [<D Pekka> [nukku <D Pekka>]]]]] [malla virtaa]]
			Dropping A-/A-bar movement.
				Moving "ei __T __nukku D Pekka " into memory buffer from SPEC of "malla".
				Memory buffer: [[Neg/fin [[D N] [T [[D N] [V [D N]]]]]]]
				An EPP-head "ei" lacks specifier but needs one.
				malla has unaccetable specifier [ei [<DP>:1 [T [<DP>:1 [nukku <D Pekka>:1]]]]].
				Extraposition will be tried on [[ei [<DP>:1 [T [<DP>:1 [nukku <D Pekka>:1]]]]] [malla virtaa]].
			= [[ei [<D Pekka> [T [<D Pekka> [nukku <D Pekka>]]]]] [malla virtaa]]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
				malla has unaccetable specifier [ei [<DP>:1 [T [<DP>:1 [nukku <D Pekka>:1]]]]].
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
nukku: [V, T, Neg/fin]
D: [D, V, T, Neg/fin]
Pekka: [N, D, V, T, Neg/fin]
malla: [ADV]
virtaa: [V, ADV]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[ei T{V}] D]
			Reconstructing head movement for [ei T{V}].
				Extracted head "nukku" from T and created [ei [T nukku]]
			Dropping floaters...
				= [ei [T nukku]]
			Dropping A-/A-bar movement.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [ei [T nukku]].
			=[[ei [T nukku]] D]

14.

		Consume "Pekka"

		[[ei [T nukku]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[ei [T nukku]] D{N}]

15.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[ei [T nukku]] D{N}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [[ei [T nukku]] <D Pekka>] as left branch because it constitutes illicit structure.
D{N} {'ADV'}{'N', '*'}
Pekka {'ADV'}{'R', 'uR', 'R/D'}
				Avoid [Pekka malla] due to complement selection.
			D was opened.
				Prioritize D{N} because all solutions were negative.
[(-99, [[Neg/fin [T V]] D]), (102, D)]
		Ranking completed:
			1. [D{N}; malla]
			2. [[[ei [T nukku]] D{N}]; malla]
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[ei [T nukku]] [[D Pekka] malla]]

16.

		Consume "virtaa"

		[[ei [T nukku]] [[D Pekka] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[ei [T nukku]] [[D Pekka] malla{V}]]

17.
	>>>	Trying candidate parse [[ei [T nukku]] [[D Pekka] malla{V}]] (4.)
		Reconstructing...
			Reconstructing head movement for [[ei [T nukku]] [[D Pekka] malla{V}]].
				Extracted head "virtaa" from malla and created [[ei [T nukku]] [[D Pekka] [malla virtaa]]]
			Dropping floaters...
				malla failed to tail.
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [[D Pekka] [malla virtaa]]
				= [[ei [T nukku]] [[D Pekka] [malla virtaa]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "malla".
				Moving "ei T nukku " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Memory buffer: [[D N], [Neg/fin [T V]]]
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				An uninterpretable grammatical head without lexical category was detected.
				[D Pekka]" has no thematic role
				Extraposition will be tried on [[ei [T nukku]] [? [[D Pekka] [malla virtaa]]]].
			= [[ei [T nukku]] [? [[D Pekka] [malla virtaa]]]]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				An uninterpretable grammatical head without lexical category was detected.
				[D Pekka]" has no thematic role
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

ei: [Neg/fin]
T: [T, Neg/fin]
nukku: [V, T, Neg/fin]
?: [?]
D: [D, ?]
Pekka: [N, D, ?]
malla: [ADV, ?]
virtaa: [V, ADV, ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[ei [T nukku]] D{N}] malla]
			Reconstructing head movement for [[ei [T nukku]] D{N}].
				Extracted head "Pekka" from D and created [[ei [T nukku]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at <D Pekka>
				= [[ei [T nukku]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [[ei [T nukku]] <D Pekka>].
			=[[[ei [T nukku]] <D Pekka>] malla]

18.

		Consume "virtaa"

		[[[ei [T nukku]] <D Pekka>] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[ei [T nukku]] <D Pekka>] malla{V}]

19.
	>>>	Trying candidate parse [[[ei [T nukku]] <D Pekka>] malla{V}] (5.)
		Reconstructing...
			Reconstructing head movement for [[[ei [T nukku]] <D Pekka>] malla{V}].
				Extracted head "virtaa" from malla and created [[[ei [T nukku]] <D Pekka>] [malla virtaa]]
			Dropping floaters...
				malla failed to tail.
				= [[[ei [T nukku]] <D Pekka>] [malla virtaa]]
			Dropping A-/A-bar movement.
				Moving "ei T nukku D Pekka " into memory buffer from SPEC of "malla".
				Memory buffer: [[[Neg/fin [T V]] [D N]]]
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				malla has unaccetable specifier [[ei [T nukku]] <D Pekka>].
				Extraposition will be tried on [[[ei [T nukku]] <D Pekka>] [malla virtaa]].
			= [[[ei [T nukku]] <D Pekka>] [malla virtaa]]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				malla has unaccetable specifier [[ei [T nukku]] <D Pekka>].
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

ei: [Neg/fin]
T: [T, Neg/fin]
nukku: [V, T, Neg/fin]
D: [D]
Pekka: [N, D]
malla: [ADV]
virtaa: [V, ADV]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 46
['ei#foc', 'nukkunut', 'Pekka', 'virtaamalla']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'ei']
			=C

2.

		Consume "ei"

		C + ei
			Filtering out impossible merge sites...
			Sink "ei" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*ei]
			=C{Neg/fin}

3.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		C{Neg/fin} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{Neg/fin} T]
			C{Neg/fin} cannot be opened.
			=[C{Neg/fin} T]

4.

		Consume "nukku"

		[C{Neg/fin} T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[C{Neg/fin} T{V}]

5.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[C{Neg/fin} T{V}]

6.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[C{Neg/fin} T{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [C [ei [T nukku]]] as left branch because it constitutes illicit structure.
				Avoid TP as SPEC for D due to unselective SPEC feature.
T{V} {'D'}{'D', 'v', '*', 'V'}
				Prioritize [T{V} D] due to complement selection.
nukku {'D'}{'P'}
				Avoid T{V} because it could break words.
[(-198, [C/fin T]), (-94, T)]
		Ranking completed:
			1. [T{V}; D]
			2. [[C{Neg/fin} T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[C{Neg/fin} [T{V} D]]

7.

		Consume "Pekka"

		[C{Neg/fin} [T{V} D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{Neg/fin} [T{V} D{N}]]

8.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[C{Neg/fin} [T{V} D{N}]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				Avoid [T [nukku [D Pekka]]] as left branch because it constitutes illicit structure.
D{N} {'ADV'}{'N', '*'}
Pekka {'ADV'}{'R', 'uR', 'R/D'}
				Avoid [Pekka malla] due to complement selection.
[(-98, [T D]), (-97, D), (0, [C/fin [T D]])]
		Ranking completed:
			1. [[C{Neg/fin} [T{V} D{N}]]; malla]
			2. [D{N}; malla]
			3. [[T{V} D{N}]; malla]
		Exploring solution number (1) =[[C{Neg/fin} [T{V} D{N}]] malla]
			Reconstructing head movement for [C{Neg/fin} [T{V} D{N}]].
				Head reconstruction failed for ei, merged locally as a last resort.
				Extracted head "ei" and reconstructed it = [C [ei [T{V} D{N}]]]
				Extracted head "nukku" and reconstructed it = [C [ei [T [nukku D{N}]]]]
				Extracted head "Pekka" from D and created [C [ei [T [nukku [D Pekka]]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at [ei [T [nukku <D Pekka>]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<DP>:1 [ei [T [nukku <D Pekka>:1]]]]]
				= [C [<D Pekka> [ei [T [nukku <D Pekka>]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of T
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			=[[C [<DP>:1 [ei [<DP>:1 [T [<DP>:1 [nukku <D Pekka>:1]]]]]]] malla]

9.

		Consume "virtaa"

		[[C [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <D Pekka>]]]]]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[C [<DP>:1 [ei [<DP>:1 [T [<DP>:1 [nukku <D Pekka>:1]]]]]]] malla{V}]

10.
	>>>	Trying candidate parse [[C [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <D Pekka>]]]]]]] malla{V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[C [<DP>:1 [ei [<DP>:1 [T [<DP>:1 [nukku <D Pekka>:1]]]]]]] malla{V}].
				Extracted head "virtaa" from malla and created [[C [<DP>:1 [ei [<DP>:1 [T [<DP>:1 [nukku <D Pekka>:1]]]]]]] [malla virtaa]]
			Dropping floaters...
				malla failed to tail.
				= [[C [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <D Pekka>]]]]]]] [malla virtaa]]
			Dropping A-/A-bar movement.
				Moving "C __ei __T __nukku D Pekka " into memory buffer from SPEC of "malla".
				Memory buffer: [[C/fin [[D N] [Neg/fin [[D N] [T [[D N] [V [D N]]]]]]]]]
			= [[C [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <D Pekka>]]]]]]] [malla virtaa]]
		Checking LF-interface conditions.
			malla<[ADV]> failed to tail features [CAT:V]
malla
			Final tail-head check failed.
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

C: [C/fin]
(D): [D, C/fin]
(N): [N, D, C/fin]
ei: [Neg/fin, C/fin]
(D): [D, Neg/fin, C/fin]
(N): [N, D, Neg/fin, C/fin]
T: [T, Neg/fin, C/fin]
(D): [D, T, Neg/fin, C/fin]
(N): [N, D, T, Neg/fin, C/fin]
nukku: [V, T, Neg/fin, C/fin]
D: [D, V, T, Neg/fin, C/fin]
Pekka: [N, D, V, T, Neg/fin, C/fin]
malla: [ADV]
virtaa: [V, ADV]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} malla]
			D was opened.
			=[C{Neg/fin} [T{V} [[D Pekka] malla]]]

11.

		Consume "virtaa"

		[C{Neg/fin} [T{V} [[D Pekka] malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[C{Neg/fin} [T{V} [[D Pekka] malla{V}]]]

12.
	>>>	Trying candidate parse [C{Neg/fin} [T{V} [[D Pekka] malla{V}]]] (2.)
		Reconstructing...
			Reconstructing head movement for [C{Neg/fin} [T{V} [[D Pekka] malla{V}]]].
				Head reconstruction failed for ei, merged locally as a last resort.
				Extracted head "ei" and reconstructed it = [C [ei [T{V} [[D Pekka] malla{V}]]]]
				Extracted head "nukku" and reconstructed it = [C [ei [T [nukku [[D Pekka] malla{V}]]]]]
				Extracted head "virtaa" from malla and created [C [ei [T [nukku [[D Pekka] [malla virtaa]]]]]]
			Dropping floaters...
				<malla virtaa> was made an adjunct.
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [ei [T [nukku [[D Pekka] <malla virtaa>]]]]
				[D Pekka] cannot be made an adjunct because its sister is an adjunct.
				Floater [D Pekka] dropped: [C [(DP):1 [ei [T [nukku [[D Pekka]:1 <malla virtaa>]]]]]]
				= [C [[D Pekka] [ei [T [nukku [[D Pekka] <malla virtaa>]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent (DP):1 from memory buffer into Spec of T
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent (DP):1 from memory buffer into Spec of nukku
			= [C [[D Pekka] [ei [[D Pekka] [T [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [(DP):1 [ei [(DP):1 [T [(DP):1 [nukku [[D Pekka]:1 <malla virtaa>]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 12/164 operations) <------------------------------------
		Solution:
		[C [[D Pekka] [ei [[D Pekka] [T [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]]]]]
		Grammar: [C [(DP):1 [ei [(DP):1 [T [(DP):1 [nukku [[D Pekka]:1 <malla virtaa>]]]]]]]]
		Spellout C/finP = [C/fin [__:1 [Neg/fin [__:1 [T [__:1 [V [[D N]:1 ADVP]]]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

C: [C/fin]
(D): [D, C/fin]
(N): [N, D, C/fin]
ei: [Neg/fin, C/fin]
(D): [D, Neg/fin, C/fin]
(N): [N, D, Neg/fin, C/fin]
T: [T, Neg/fin, C/fin]
(D): [D, T, Neg/fin, C/fin]
(N): [N, D, T, Neg/fin, C/fin]
nukku: [V, T, Neg/fin, C/fin]
D: [D, V, T, Neg/fin, C/fin]
Pekka: [N, D, V, T, Neg/fin, C/fin]
malla: [ADV, V, T, Neg/fin, C/fin]
virtaa: [V, ADV, V, T, Neg/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 47
['ei', 'nukkunut', 'virtaamalla', 'Pekka']


			=None

1.
			=ei

2.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		ei + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[ei T]

3.

		Consume "nukku"

		[ei T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[ei T{V}]

4.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[ei T{V}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [ei [T nukku]] as left branch because it constitutes illicit structure.
T{V} {'ADV'}{'D', 'v', '*', 'V'}
nukku {'ADV'}{'P'}
[(-198, [Neg/fin T]), (0, T)]
		Ranking completed:
			1. [T{V}; malla]
			2. [[ei T{V}]; malla]
		Exploring solution number (1) =[T{V} malla]
			T{V} cannot be opened.
			=[ei [T{V} malla]]

5.

		Consume "virtaa"

		[ei [T{V} malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[ei [T{V} malla{V}]]

6.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[ei [T{V} malla{V}]]

7.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[ei [T{V} malla{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [ei [T [nukku <malla virtaa>]]] as left branch because it constitutes illicit structure.
				Avoid TP as SPEC for D due to unselective SPEC feature.
				Avoid [[T{V} malla{V}], D] because the operation breaks up an existing selectional dependency.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [T [nukku <malla virtaa>]] as left branch because it constitutes illicit structure.
				Avoid ADVP as SPEC for D due to unselective SPEC feature.
				Avoid [malla{V} D] due to local agreement failure.
malla{V} {'D'}{'*'}
virtaa {'D'}{'P'}
				Avoid [virtaa D] due to complement selection.
				Avoid malla{V} because it could break words.
			malla was opened.
				Prioritize malla{V} because all solutions were negative.
[(-294, [T ADV]), (-198, [Neg/fin [T ADV]]), (-188, ADV)]
		Ranking completed:
			1. [malla{V}; D]
			2. [[ei [T{V} malla{V}]]; D]
			3. [[T{V} malla{V}]; D]
		Exploring solution number (1) =[malla{V} D]
			malla was opened.
			=[ei [T{V} [[malla virtaa] D]]]

8.

		Consume "Pekka"

		[ei [T{V} [[malla virtaa] D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[ei [T{V} [[malla virtaa] D{N}]]]

9.
	>>>	Trying candidate parse [ei [T{V} [[malla virtaa] D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [ei [T{V} [[malla virtaa] D{N}]]].
				Extracted head "nukku" and reconstructed it = [ei [T [nukku [[malla virtaa] D{N}]]]]
				Extracted head "Pekka" from D and created [ei [T [nukku [[malla virtaa] [D Pekka]]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at [T [nukku [[malla virtaa] <D Pekka>]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [ei [<DP>:1 [T [nukku [[malla virtaa] <D Pekka>:1]]]]]
				= [ei [<D Pekka> [T [nukku [[malla virtaa] <D Pekka>]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [ei [<DP>:1 [T [<DP>:1 [nukku [[malla virtaa] <D Pekka>:1]]]]]].
			= [ei [<D Pekka> [T [<D Pekka> [nukku [[malla virtaa] <D Pekka>]]]]]]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
nukku: [V, T, Neg/fin]
malla: [ADV, V, T, Neg/fin]
virtaa: [V, ADV, V, T, Neg/fin]
D: [D, V, T, Neg/fin]
Pekka: [N, D, V, T, Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[ei [T{V} malla{V}]] D]
			Reconstructing head movement for [ei [T{V} malla{V}]].
				Extracted head "nukku" and reconstructed it = [ei [T [nukku malla{V}]]]
				Extracted head "virtaa" from malla and created [ei [T [nukku [malla virtaa]]]]
			Dropping floaters...
				<malla virtaa> was made an adjunct.
				= [ei [T [nukku <malla virtaa>]]]
			Dropping A-/A-bar movement.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [ei [T [nukku <malla virtaa>]]].
			=[[ei [T [nukku <malla virtaa>]]] D]

10.

		Consume "Pekka"

		[[ei [T [nukku <malla virtaa>]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[ei [T [nukku <malla virtaa>]]] D{N}]

11.
	>>>	Trying candidate parse [[ei [T [nukku <malla virtaa>]]] D{N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[ei [T [nukku <malla virtaa>]]] D{N}].
				Extracted head "Pekka" from D and created [[ei [T [nukku <malla virtaa>]]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at <D Pekka>
				= [[ei [T [nukku <malla virtaa>]]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [[ei [T [nukku <malla virtaa>]]] <D Pekka>].
			= [[ei [T [nukku <malla virtaa>]]] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

ei: [Neg/fin]
T: [T, Neg/fin]
nukku: [V, T, Neg/fin]
malla: [ADV, V, T, Neg/fin]
virtaa: [V, ADV, V, T, Neg/fin]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[T{V} malla{V}] D]
			Reconstructing head movement for [T{V} malla{V}].
				Extracted head "nukku" and reconstructed it = [T [nukku malla{V}]]
				Extracted head "virtaa" from malla and created [T [nukku [malla virtaa]]]
			Dropping floaters...
				<malla virtaa> was made an adjunct.
				= [T [nukku <malla virtaa>]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
			=[ei [[T [nukku <malla virtaa>]] D]]

12.

		Consume "Pekka"

		[ei [[T [nukku <malla virtaa>]] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[ei [[T [nukku <malla virtaa>]] D{N}]]

13.
	>>>	Trying candidate parse [ei [[T [nukku <malla virtaa>]] D{N}]] (3.)
		Reconstructing...
			Reconstructing head movement for [ei [[T [nukku <malla virtaa>]] D{N}]].
				Extracted head "Pekka" from D and created [ei [[T [nukku <malla virtaa>]] [D Pekka]]]
			Dropping floaters...
				= [ei [[T [nukku <malla virtaa>]] [D Pekka]]]
			Dropping A-/A-bar movement.
				Moving "T nukku malla virtaa " into memory buffer from SPEC of "D".
				Memory buffer: [[T [V [ADV V]]]]
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				D (D) has a specifier [T [nukku <malla virtaa>]] but is marked for -EPP behavior.
				Extraposition will be tried on [ei [[T [nukku <malla virtaa>]] [D Pekka]]].
				<D Pekka> was made adjunct by an extraposition rule.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
			= [ei [[T [nukku <malla virtaa>]] <D Pekka>]]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

ei: [Neg/fin]
T: [T, Neg/fin]
nukku: [V, T, Neg/fin]
malla: [ADV, V, T, Neg/fin]
virtaa: [V, ADV, V, T, Neg/fin]
D: [D, Neg/fin]
Pekka: [N, D, Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[ei T{V}] malla]
			Reconstructing head movement for [ei T{V}].
				Extracted head "nukku" from T and created [ei [T nukku]]
			Dropping floaters...
				= [ei [T nukku]]
			Dropping A-/A-bar movement.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [ei [T nukku]].
			=[[ei [T nukku]] malla]

14.

		Consume "virtaa"

		[[ei [T nukku]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[ei [T nukku]] malla{V}]

15.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[ei [T nukku]] malla{V}]

16.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[ei [T nukku]] malla{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid ADVP as SPEC for D due to unselective SPEC feature.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				malla has unaccetable specifier [ei [T nukku]].
				Avoid [[ei [T nukku]] [malla virtaa]] as left branch because it constitutes illicit structure.
				Avoid ADVP as SPEC for D due to unselective SPEC feature.
				Avoid [malla{V} D] due to local agreement failure.
malla{V} {'D'}{'*'}
virtaa {'D'}{'P'}
				Avoid [virtaa D] due to complement selection.
			malla was opened.
				Prioritize malla{V} because all solutions were negative.
[(-198, [[Neg/fin [T V]] ADV]), (-94, ADV)]
		Ranking completed:
			1. [malla{V}; D]
			2. [[[ei [T nukku]] malla{V}]; D]
		Exploring solution number (1) =[malla{V} D]
			malla was opened.
			=[[ei [T nukku]] [[malla virtaa] D]]

17.

		Consume "Pekka"

		[[ei [T nukku]] [[malla virtaa] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[ei [T nukku]] [[malla virtaa] D{N}]]

18.
	>>>	Trying candidate parse [[ei [T nukku]] [[malla virtaa] D{N}]] (4.)
		Reconstructing...
			Reconstructing head movement for [[ei [T nukku]] [[malla virtaa] D{N}]].
				Extracted head "Pekka" from D and created [[ei [T nukku]] [[malla virtaa] [D Pekka]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at [[malla virtaa] <D Pekka>]
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[malla virtaa] <D Pekka>]
				= [[ei [T nukku]] [[malla virtaa] <D Pekka>]]
			Dropping A-/A-bar movement.
				Moving "ei T nukku " into memory buffer from SPEC of "malla".
				Memory buffer: [[Neg/fin [T V]]]
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				malla has unaccetable specifier [ei [T nukku]].
				Extraposition will be tried on [[ei [T nukku]] [[malla virtaa] <D Pekka>]].
			= [[ei [T nukku]] [[malla virtaa] <D Pekka>]]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				malla has unaccetable specifier [ei [T nukku]].
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

ei: [Neg/fin]
T: [T, Neg/fin]
nukku: [V, T, Neg/fin]
malla: [ADV]
virtaa: [V, ADV]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[ei [T nukku]] malla{V}] D]
			Reconstructing head movement for [[ei [T nukku]] malla{V}].
				Extracted head "virtaa" from malla and created [[ei [T nukku]] [malla virtaa]]
			Dropping floaters...
				malla failed to tail.
				= [[ei [T nukku]] [malla virtaa]]
			Dropping A-/A-bar movement.
				Moving "ei T nukku " into memory buffer from SPEC of "malla".
				Memory buffer: [[Neg/fin [T V]]]
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				malla has unaccetable specifier [ei [T nukku]].
				Extraposition will be tried on [[ei [T nukku]] [malla virtaa]].
			=[[[ei [T nukku]] [malla virtaa]] D]

19.

		Consume "Pekka"

		[[[ei [T nukku]] [malla virtaa]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[[ei [T nukku]] [malla virtaa]] D{N}]

20.
	>>>	Trying candidate parse [[[ei [T nukku]] [malla virtaa]] D{N}] (5.)
		Reconstructing...
			Reconstructing head movement for [[[ei [T nukku]] [malla virtaa]] D{N}].
				Extracted head "Pekka" from D and created [[[ei [T nukku]] [malla virtaa]] [D Pekka]]
			Dropping floaters...
				[[ei [T nukku]] [malla virtaa]] failed to tail [CAT:V]
				Start reconstruction at [D Pekka]
				= [[[ei [T nukku]] [malla virtaa]] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "ei T nukku malla virtaa " into memory buffer from SPEC of "D".
				Memory buffer: [[[Neg/fin [T V]] [ADV V]]]
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				malla has unaccetable specifier [ei [T nukku]].
				D (D) has a specifier [[ei [T nukku]] [malla virtaa]] but is marked for -EPP behavior.
				Extraposition will be tried on [[[ei [T nukku]] [malla virtaa]] [D Pekka]].
				<D Pekka> was made adjunct by an extraposition rule.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				malla has unaccetable specifier [ei [T nukku]].
			= [[[ei [T nukku]] [malla virtaa]] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				malla has unaccetable specifier [ei [T nukku]].
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

ei: [Neg/fin]
T: [T, Neg/fin]
nukku: [V, T, Neg/fin]
malla: [ADV]
virtaa: [V, ADV]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 48
['ei#foc', 'nukkunut', 'virtaamalla', 'Pekka']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'ei']
			=C

2.

		Consume "ei"

		C + ei
			Filtering out impossible merge sites...
			Sink "ei" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*ei]
			=C{Neg/fin}

3.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		C{Neg/fin} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{Neg/fin} T]
			C{Neg/fin} cannot be opened.
			=[C{Neg/fin} T]

4.

		Consume "nukku"

		[C{Neg/fin} T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[C{Neg/fin} T{V}]

5.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[C{Neg/fin} T{V}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [C [ei [T nukku]]] as left branch because it constitutes illicit structure.
T{V} {'ADV'}{'D', 'v', '*', 'V'}
nukku {'ADV'}{'P'}
[(-99, [C/fin T]), (0, T)]
		Ranking completed:
			1. [T{V}; malla]
			2. [[C{Neg/fin} T{V}]; malla]
		Exploring solution number (1) =[T{V} malla]
			T{V} cannot be opened.
			=[C{Neg/fin} [T{V} malla]]

6.

		Consume "virtaa"

		[C{Neg/fin} [T{V} malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[C{Neg/fin} [T{V} malla{V}]]

7.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[C{Neg/fin} [T{V} malla{V}]]

8.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[C{Neg/fin} [T{V} malla{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [C [ei [T [nukku <malla virtaa>]]]] as left branch because it constitutes illicit structure.
				Avoid TP as SPEC for D due to unselective SPEC feature.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [T [nukku <malla virtaa>]] as left branch because it constitutes illicit structure.
				Avoid ADVP as SPEC for D due to unselective SPEC feature.
				Avoid [malla{V} D] due to local agreement failure.
malla{V} {'D'}{'*'}
virtaa {'D'}{'P'}
				Avoid [virtaa D] due to complement selection.
				Avoid malla{V} because it could break words.
			malla was opened.
				Prioritize malla{V} because all solutions were negative.
[(-198, [C/fin [T ADV]]), (-196, [T ADV]), (-188, ADV)]
		Ranking completed:
			1. [malla{V}; D]
			2. [[T{V} malla{V}]; D]
			3. [[C{Neg/fin} [T{V} malla{V}]]; D]
		Exploring solution number (1) =[malla{V} D]
			malla was opened.
			=[C{Neg/fin} [T{V} [[malla virtaa] D]]]

9.

		Consume "Pekka"

		[C{Neg/fin} [T{V} [[malla virtaa] D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{Neg/fin} [T{V} [[malla virtaa] D{N}]]]

10.
	>>>	Trying candidate parse [C{Neg/fin} [T{V} [[malla virtaa] D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{Neg/fin} [T{V} [[malla virtaa] D{N}]]].
				Head reconstruction failed for ei, merged locally as a last resort.
				Extracted head "ei" and reconstructed it = [C [ei [T{V} [[malla virtaa] D{N}]]]]
				Extracted head "nukku" and reconstructed it = [C [ei [T [nukku [[malla virtaa] D{N}]]]]]
				Extracted head "Pekka" from D and created [C [ei [T [nukku [[malla virtaa] [D Pekka]]]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at [ei [T [nukku [[malla virtaa] <D Pekka>]]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<DP>:1 [ei [T [nukku [[malla virtaa] <D Pekka>:1]]]]]]
				= [C [<D Pekka> [ei [T [nukku [[malla virtaa] <D Pekka>]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of T
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			= [C [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku [[malla virtaa] <D Pekka>]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<DP>:1 [ei [<DP>:1 [T [<DP>:1 [nukku [[malla virtaa] <D Pekka>:1]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 10/120 operations) <------------------------------------
		Solution:
		[C [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku [[malla virtaa] <D Pekka>]]]]]]]]
		Grammar: [C [<DP>:1 [ei [<DP>:1 [T [<DP>:1 [nukku [[malla virtaa] <D Pekka>:1]]]]]]]]
		Spellout C/finP = [C/fin [__:1 [Neg/fin [__:1 [T [__:1 [V [[ADV V] DP:1]]]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C: [C/fin]
(D): [D, C/fin]
(N): [N, D, C/fin]
ei: [Neg/fin, C/fin]
(D): [D, Neg/fin, C/fin]
(N): [N, D, Neg/fin, C/fin]
T: [T, Neg/fin, C/fin]
(D): [D, T, Neg/fin, C/fin]
(N): [N, D, T, Neg/fin, C/fin]
nukku: [V, T, Neg/fin, C/fin]
malla: [ADV, V, T, Neg/fin, C/fin]
virtaa: [V, ADV, V, T, Neg/fin, C/fin]
D: [D, V, T, Neg/fin, C/fin]
Pekka: [N, D, V, T, Neg/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 49
['ei', 'virtaamalla', 'Pekka', 'nukkunut']


			=None

1.
			=ei

2.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		ei + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[ei malla]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[ei malla]

3.

		Consume "virtaa"

		[ei malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[ei malla{V}]

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[ei malla{V}]

5.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[ei malla{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [ei [malla virtaa]] as left branch because it constitutes illicit structure.
				Avoid ADVP as SPEC for D due to unselective SPEC feature.
				Avoid [malla{V} D] due to local agreement failure.
malla{V} {'D'}{'*'}
virtaa {'D'}{'P'}
				Avoid [virtaa D] due to complement selection.
			malla was opened.
				Prioritize malla{V} because all solutions were negative.
[(-198, [Neg/fin ADV]), (-94, ADV)]
		Ranking completed:
			1. [malla{V}; D]
			2. [[ei malla{V}]; D]
		Exploring solution number (1) =[malla{V} D]
			malla was opened.
			=[ei [[malla virtaa] D]]

6.

		Consume "Pekka"

		[ei [[malla virtaa] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[ei [[malla virtaa] D{N}]]

7.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[ei [[malla virtaa] D{N}]] + T
			Filtering out impossible merge sites...
				Reject [[ei [[malla virtaa] <D Pekka>]] T] due to bad left branch.
			Ranking remaining sites...
D{N} {'T'}{'N', '*'}
Pekka {'T'}{'R', 'uR', 'R/D'}
[(0, [[ADV V] D]), (0, D)]
		Ranking completed:
			1. [D{N}; T]
			2. [[[malla virtaa] D{N}]; T]
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[ei [[malla virtaa] [[D Pekka] T]]]

8.

		Consume "nukku"

		[ei [[malla virtaa] [[D Pekka] T]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[ei [[malla virtaa] [[D Pekka] T{V}]]]

9.
	>>>	Trying candidate parse [ei [[malla virtaa] [[D Pekka] T{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [ei [[malla virtaa] [[D Pekka] T{V}]]].
				Extracted head "nukku" from T and created [ei [[malla virtaa] [[D Pekka] [T nukku]]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[malla virtaa] [[D Pekka] [T nukku]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [ei [<malla virtaa>:1 [[D Pekka] [T [nukku <ADVP>:1]]]]]
				= [ei [<malla virtaa> [[D Pekka] [T [nukku <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				New head was spawned due to multiple specifiers at T but its category is unknown!
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of nukku
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [ei [<malla virtaa>:1 [? [[D Pekka]:2 [T [(DP):2 [nukku <ADVP>:1]]]]]]].
			= [ei [<malla virtaa> [? [[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]]]]]
		Checking LF-interface conditions.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

ei: [Neg/fin]
malla: [ADV, Neg/fin]
virtaa: [V, ADV, Neg/fin]
?: [?, Neg/fin]
D: [D, ?, Neg/fin]
Pekka: [N, D, ?, Neg/fin]
T: [T, ?, Neg/fin]
(D): [D, T, ?, Neg/fin]
(N): [N, D, T, ?, Neg/fin]
nukku: [V, T, ?, Neg/fin]
(ADV): [ADV, V, T, ?, Neg/fin]
(V): [V, ADV, V, T, ?, Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[malla virtaa] D{N}] T]
			Reconstructing head movement for [[malla virtaa] D{N}].
				Extracted head "Pekka" from D and created [[malla virtaa] [D Pekka]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [D Pekka]
				= [[malla virtaa] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "malla virtaa " into memory buffer from SPEC of "D".
				Memory buffer: [[ADV V]]
				D (D) has a specifier [malla virtaa] but is marked for -EPP behavior.
				Extraposition will be tried on [[malla virtaa] [D Pekka]].
				<D Pekka> was made adjunct by an extraposition rule.
			=[ei [[[malla virtaa] <D Pekka>] T]]

10.

		Consume "nukku"

		[ei [[[malla virtaa] <D Pekka>] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[ei [[[malla virtaa] <D Pekka>] T{V}]]

11.
	>>>	Trying candidate parse [ei [[[malla virtaa] <D Pekka>] T{V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [ei [[[malla virtaa] <D Pekka>] T{V}]].
				Extracted head "nukku" from T and created [ei [[[malla virtaa] <D Pekka>] [T nukku]]]
			Dropping floaters...
				[[malla virtaa] <D Pekka>] failed to tail [CAT:V]
				Start reconstruction at [[[malla virtaa] <D Pekka>] [T nukku]]
				<[malla virtaa] <D Pekka>> was made an adjunct.
				Floater <[malla virtaa] <D Pekka>> dropped: [ei [<[malla virtaa] <D Pekka>>:1 [T [nukku <ADVP>:1]]]]
				= [ei [<[malla virtaa] <D Pekka>> [T [nukku <[malla virtaa] <D Pekka>>]]]]
			Dropping A-/A-bar movement.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [ei [<[malla virtaa] <D Pekka>>:1 [T [nukku <ADVP>:1]]]].
			= [ei [<[malla virtaa] <D Pekka>> [T [nukku <[malla virtaa] <D Pekka>>]]]]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				(D) failed internal tail test.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']

ei: [Neg/fin]
malla: [ADV, Neg/fin]
virtaa: [V, ADV, Neg/fin]
D: [D, Neg/fin]
Pekka: [N, D, Neg/fin]
T: [T, Neg/fin]
nukku: [V, T, Neg/fin]
(ADV): [ADV, V, T, Neg/fin]
(V): [V, ADV, V, T, Neg/fin]
(D): [D, V, T, Neg/fin]
(N): [N, D, V, T, Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[ei malla{V}] D]
			Reconstructing head movement for [ei malla{V}].
				Extracted head "virtaa" from malla and created [ei [malla virtaa]]
			Dropping floaters...
				malla failed to tail.
				= [ei [malla virtaa]]
			Dropping A-/A-bar movement.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [ei [malla virtaa]].
			=[[ei [malla virtaa]] D]

12.

		Consume "Pekka"

		[[ei [malla virtaa]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[ei [malla virtaa]] D{N}]

13.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[ei [malla virtaa]] D{N}] + T
			Filtering out impossible merge sites...
				Reject [[[ei [malla virtaa]] <D Pekka>] T] due to bad left branch.
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[ei [malla virtaa]] [[D Pekka] T]]

14.

		Consume "nukku"

		[[ei [malla virtaa]] [[D Pekka] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[ei [malla virtaa]] [[D Pekka] T{V}]]

15.
	>>>	Trying candidate parse [[ei [malla virtaa]] [[D Pekka] T{V}]] (3.)
		Reconstructing...
			Reconstructing head movement for [[ei [malla virtaa]] [[D Pekka] T{V}]].
				Extracted head "nukku" from T and created [[ei [malla virtaa]] [[D Pekka] [T nukku]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [[D Pekka] [T nukku]]
				= [[ei [malla virtaa]] [[D Pekka] [T nukku]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Moving "ei malla virtaa " into memory buffer from SPEC of "T".
				New head was spawned due to multiple specifiers at T but its category is unknown!
				Memory buffer: [[D N], [Neg/fin [ADV V]]]
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [[ei [malla virtaa]] [? [[D Pekka]:1 [T nukku]]]].
			= [[ei [malla virtaa]] [? [[D Pekka] [T nukku]]]]
		Checking LF-interface conditions.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

ei: [Neg/fin]
malla: [ADV, Neg/fin]
virtaa: [V, ADV, Neg/fin]
?: [?]
D: [D, ?]
Pekka: [N, D, ?]
T: [T, ?]
nukku: [V, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 50
['ei#foc', 'virtaamalla', 'Pekka', 'nukkunut']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'ei']
			=C

2.

		Consume "ei"

		C + ei
			Filtering out impossible merge sites...
			Sink "ei" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*ei]
			=C{Neg/fin}

3.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		C{Neg/fin} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{Neg/fin} malla]
			C{Neg/fin} cannot be opened.
			=[C{Neg/fin} malla]

4.

		Consume "virtaa"

		[C{Neg/fin} malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[C{Neg/fin} malla{V}]

5.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[C{Neg/fin} malla{V}]

6.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[C{Neg/fin} malla{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [C [ei [malla virtaa]]] as left branch because it constitutes illicit structure.
				Avoid ADVP as SPEC for D due to unselective SPEC feature.
				Avoid [malla{V} D] due to local agreement failure.
malla{V} {'D'}{'*'}
virtaa {'D'}{'P'}
				Avoid [virtaa D] due to complement selection.
				Avoid malla{V} because it could break words.
			malla was opened.
				Prioritize malla{V} because all solutions were negative.
[(-198, [C/fin ADV]), (-192, ADV)]
		Ranking completed:
			1. [malla{V}; D]
			2. [[C{Neg/fin} malla{V}]; D]
		Exploring solution number (1) =[malla{V} D]
			malla was opened.
			=[C{Neg/fin} [[malla virtaa] D]]

7.

		Consume "Pekka"

		[C{Neg/fin} [[malla virtaa] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{Neg/fin} [[malla virtaa] D{N}]]

8.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[C{Neg/fin} [[malla virtaa] D{N}]] + T
			Filtering out impossible merge sites...
				Reject [[C [[malla virtaa] [ei [D Pekka]]]] T] due to bad left branch.
				Reject [[[ADV V] D] T] as Spec because it breaks words.
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[C{Neg/fin} [[malla virtaa] [[D Pekka] T]]]

9.

		Consume "nukku"

		[C{Neg/fin} [[malla virtaa] [[D Pekka] T]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[C{Neg/fin} [[malla virtaa] [[D Pekka] T{V}]]]

10.
	>>>	Trying candidate parse [C{Neg/fin} [[malla virtaa] [[D Pekka] T{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{Neg/fin} [[malla virtaa] [[D Pekka] T{V}]]].
				Extracted head "ei" and reconstructed it = [C [[malla virtaa] [ei [[D Pekka] T{V}]]]]
				Extracted head "nukku" from T and created [C [[malla virtaa] [ei [[D Pekka] [T nukku]]]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[malla virtaa] [ei [[D Pekka] [T nukku]]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [C [<malla virtaa>:1 [ei [[D Pekka] [T [nukku <ADVP>:1]]]]]]
				= [C [<malla virtaa> [ei [[D Pekka] [T [nukku <malla virtaa>]]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of nukku
			= [C [<malla virtaa> [ei [[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<malla virtaa>:1 [ei [[D Pekka]:2 [T [(DP):2 [nukku <ADVP>:1]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 10/102 operations) <------------------------------------
		Solution:
		[C [<malla virtaa> [ei [[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]]]]]
		Grammar: [C [<malla virtaa>:1 [ei [[D Pekka]:2 [T [(DP):2 [nukku <ADVP>:1]]]]]]]
		Spellout C/finP = [C/fin [ADVP:1 [Neg/fin [DP:2 [T [__:2 [V __:1]]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

C: [C/fin]
malla: [ADV, C/fin]
virtaa: [V, ADV, C/fin]
ei: [Neg/fin, C/fin]
D: [D, Neg/fin, C/fin]
Pekka: [N, D, Neg/fin, C/fin]
T: [T, Neg/fin, C/fin]
(D): [D, T, Neg/fin, C/fin]
(N): [N, D, T, Neg/fin, C/fin]
nukku: [V, T, Neg/fin, C/fin]
(ADV): [ADV, V, T, Neg/fin, C/fin]
(V): [V, ADV, V, T, Neg/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 51
['ei', 'virtaamalla', 'nukkunut', 'Pekka']


			=None

1.
			=ei

2.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		ei + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[ei malla]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[ei malla]

3.

		Consume "virtaa"

		[ei malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[ei malla{V}]

4.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[ei malla{V}] + T
			Filtering out impossible merge sites...
				Reject [[ei [malla virtaa]] T] due to bad left branch.
		Exploring solution number (1) =[malla{V} T]
			malla was opened.
			=[ei [[malla virtaa] T]]

5.

		Consume "nukku"

		[ei [[malla virtaa] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[ei [[malla virtaa] T{V}]]

6.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[ei [[malla virtaa] T{V}]]

7.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[ei [[malla virtaa] T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [ei [<malla virtaa> [T [nukku <malla virtaa>]]]] as left branch because it constitutes illicit structure.
				Avoid TP as SPEC for D due to unselective SPEC feature.
				Avoid [[[malla virtaa] T{V}], D] because the operation breaks up an existing selectional dependency.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [<malla virtaa> [T [nukku <malla virtaa>]]] as left branch because it constitutes illicit structure.
				Avoid TP as SPEC for D due to unselective SPEC feature.
T{V} {'D'}{'D', 'v', '*', 'V'}
				Prioritize [T{V} D] due to complement selection.
nukku {'D'}{'P'}
[(-294, [[ADV V] T]), (-198, [Neg/fin [[ADV V] T]]), (6, T)]
		Ranking completed:
			1. [T{V}; D]
			2. [[ei [[malla virtaa] T{V}]]; D]
			3. [[[malla virtaa] T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[ei [[malla virtaa] [T{V} D]]]

8.

		Consume "Pekka"

		[ei [[malla virtaa] [T{V} D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[ei [[malla virtaa] [T{V} D{N}]]]

9.
	>>>	Trying candidate parse [ei [[malla virtaa] [T{V} D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [ei [[malla virtaa] [T{V} D{N}]]].
				Extracted head "nukku" and reconstructed it = [ei [[malla virtaa] [T [nukku D{N}]]]]
				Extracted head "Pekka" from D and created [ei [[malla virtaa] [T [nukku [D Pekka]]]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[malla virtaa] [T [nukku [D Pekka]]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [ei [<malla virtaa>:1 [T [nukku [[D Pekka] <ADVP>:1]]]]]
				D failed to tail.
				[D Pekka] cannot be made an adjunct because its sister is an adjunct.
				Start reconstruction at [<malla virtaa>:1 [T [nukku [[D Pekka] <ADVP>:1]]]]
				[D Pekka] cannot be made an adjunct because its sister is an adjunct.
				Floater [D Pekka] dropped: [ei [(DP):2 [<malla virtaa>:1 [T [nukku [[D Pekka]:2 <ADVP>:1]]]]]]
				= [ei [[D Pekka] [<malla virtaa> [T [nukku [[D Pekka] <malla virtaa>]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				New head was spawned due to multiple specifiers at T but its category is unknown!
				Memory buffer: [[D N]]
				Dropping constituent (DP):2 from memory buffer into Spec of nukku
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [ei [(DP):2 [? [<malla virtaa>:1 [T [(DP):2 [nukku [[D Pekka]:2 <ADVP>:1]]]]]]]].
			= [ei [[D Pekka] [? [<malla virtaa> [T [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]]]]]
		Checking LF-interface conditions.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
:['LANG:FI']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
?: [?, Neg/fin]
malla: [ADV, ?, Neg/fin]
virtaa: [V, ADV, ?, Neg/fin]
T: [T, ?, Neg/fin]
(D): [D, T, ?, Neg/fin]
(N): [N, D, T, ?, Neg/fin]
nukku: [V, T, ?, Neg/fin]
D: [D, V, T, ?, Neg/fin]
Pekka: [N, D, V, T, ?, Neg/fin]
(ADV): [ADV, V, T, ?, Neg/fin]
(V): [V, ADV, V, T, ?, Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[ei [[malla virtaa] T{V}]] D]
			Reconstructing head movement for [ei [[malla virtaa] T{V}]].
				Extracted head "nukku" from T and created [ei [[malla virtaa] [T nukku]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[malla virtaa] [T nukku]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [ei [<malla virtaa>:1 [T [nukku <ADVP>:1]]]]
				= [ei [<malla virtaa> [T [nukku <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [ei [<malla virtaa>:1 [T [nukku <ADVP>:1]]]].
			=[[ei [<malla virtaa>:1 [T [nukku <ADVP>:1]]]] D]

10.

		Consume "Pekka"

		[[ei [<malla virtaa> [T [nukku <malla virtaa>]]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[ei [<malla virtaa>:1 [T [nukku <ADVP>:1]]]] D{N}]

11.
	>>>	Trying candidate parse [[ei [<malla virtaa> [T [nukku <malla virtaa>]]]] D{N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[ei [<malla virtaa>:1 [T [nukku <ADVP>:1]]]] D{N}].
				Extracted head "Pekka" from D and created [[ei [<malla virtaa>:1 [T [nukku <ADVP>:1]]]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at <D Pekka>
				= [[ei [<malla virtaa> [T [nukku <malla virtaa>]]]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [[ei [<malla virtaa>:1 [T [nukku <ADVP>:1]]]] <D Pekka>].
			= [[ei [<malla virtaa> [T [nukku <malla virtaa>]]]] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

ei: [Neg/fin]
malla: [ADV, Neg/fin]
virtaa: [V, ADV, Neg/fin]
T: [T, Neg/fin]
nukku: [V, T, Neg/fin]
(ADV): [ADV, V, T, Neg/fin]
(V): [V, ADV, V, T, Neg/fin]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[malla virtaa] T{V}] D]
			Reconstructing head movement for [[malla virtaa] T{V}].
				Extracted head "nukku" from T and created [[malla virtaa] [T nukku]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [T nukku]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<malla virtaa>:1 [T [nukku <ADVP>:1]]]
				= [<malla virtaa> [T [nukku <malla virtaa>]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
			=[ei [[<malla virtaa>:1 [T [nukku <ADVP>:1]]] D]]

12.

		Consume "Pekka"

		[ei [[<malla virtaa> [T [nukku <malla virtaa>]]] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[ei [[<malla virtaa>:1 [T [nukku <ADVP>:1]]] D{N}]]

13.
	>>>	Trying candidate parse [ei [[<malla virtaa> [T [nukku <malla virtaa>]]] D{N}]] (3.)
		Reconstructing...
			Reconstructing head movement for [ei [[<malla virtaa>:1 [T [nukku <ADVP>:1]]] D{N}]].
				Extracted head "Pekka" from D and created [ei [[<malla virtaa>:1 [T [nukku <ADVP>:1]]] [D Pekka]]]
			Dropping floaters...
				= [ei [[<malla virtaa> [T [nukku <malla virtaa>]]] [D Pekka]]]
			Dropping A-/A-bar movement.
				Moving "malla virtaa T nukku __" into memory buffer from SPEC of "D".
				Memory buffer: [[[ADV V] [T [V [ADV V]]]]]
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				D (D) has a specifier [<malla virtaa>:1 [T [nukku <ADVP>:1]]] but is marked for -EPP behavior.
				Extraposition will be tried on [ei [[<malla virtaa>:1 [T [nukku <ADVP>:1]]] [D Pekka]]].
				<D Pekka> was made adjunct by an extraposition rule.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
			= [ei [[<malla virtaa> [T [nukku <malla virtaa>]]] <D Pekka>]]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

ei: [Neg/fin]
malla: [ADV, Neg/fin]
virtaa: [V, ADV, Neg/fin]
T: [T, Neg/fin]
nukku: [V, T, Neg/fin]
(ADV): [ADV, V, T, Neg/fin]
(V): [V, ADV, V, T, Neg/fin]
D: [D, Neg/fin]
Pekka: [N, D, Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 52
['ei#foc', 'virtaamalla', 'nukkunut', 'Pekka']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'ei']
			=C

2.

		Consume "ei"

		C + ei
			Filtering out impossible merge sites...
			Sink "ei" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*ei]
			=C{Neg/fin}

3.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		C{Neg/fin} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{Neg/fin} malla]
			C{Neg/fin} cannot be opened.
			=[C{Neg/fin} malla]

4.

		Consume "virtaa"

		[C{Neg/fin} malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[C{Neg/fin} malla{V}]

5.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[C{Neg/fin} malla{V}] + T
			Filtering out impossible merge sites...
				Reject [[C [ei [malla virtaa]]] T] due to bad left branch.
		Exploring solution number (1) =[malla{V} T]
			malla was opened.
			=[C{Neg/fin} [[malla virtaa] T]]

6.

		Consume "nukku"

		[C{Neg/fin} [[malla virtaa] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[C{Neg/fin} [[malla virtaa] T{V}]]

7.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[C{Neg/fin} [[malla virtaa] T{V}]]

8.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[C{Neg/fin} [[malla virtaa] T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [C [<malla virtaa> [ei [T [nukku <malla virtaa>]]]]] as left branch because it constitutes illicit structure.
				Avoid TP as SPEC for D due to unselective SPEC feature.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [<malla virtaa> [T [nukku <malla virtaa>]]] as left branch because it constitutes illicit structure.
				Avoid TP as SPEC for D due to unselective SPEC feature.
T{V} {'D'}{'D', 'v', '*', 'V'}
				Prioritize [T{V} D] due to complement selection.
nukku {'D'}{'P'}
[(-198, [C/fin [[ADV V] T]]), (-196, [[ADV V] T]), (6, T)]
		Ranking completed:
			1. [T{V}; D]
			2. [[[malla virtaa] T{V}]; D]
			3. [[C{Neg/fin} [[malla virtaa] T{V}]]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[C{Neg/fin} [[malla virtaa] [T{V} D]]]

9.

		Consume "Pekka"

		[C{Neg/fin} [[malla virtaa] [T{V} D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{Neg/fin} [[malla virtaa] [T{V} D{N}]]]

10.
	>>>	Trying candidate parse [C{Neg/fin} [[malla virtaa] [T{V} D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{Neg/fin} [[malla virtaa] [T{V} D{N}]]].
				Extracted head "ei" and reconstructed it = [C [[malla virtaa] [ei [T{V} D{N}]]]]
				Extracted head "nukku" and reconstructed it = [C [[malla virtaa] [ei [T [nukku D{N}]]]]]
				Extracted head "Pekka" from D and created [C [[malla virtaa] [ei [T [nukku [D Pekka]]]]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[malla virtaa] [ei [T [nukku [D Pekka]]]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [C [<malla virtaa>:1 [ei [T [nukku [[D Pekka] <ADVP>:1]]]]]]
				D failed to tail.
				[D Pekka] cannot be made an adjunct because its sister is an adjunct.
				Start reconstruction at [T [nukku [[D Pekka] <ADVP>:1]]]
				[D Pekka] cannot be made an adjunct because its sister is an adjunct.
				Floater [D Pekka] dropped: [C [<malla virtaa>:1 [ei [(DP):2 [T [nukku [[D Pekka]:2 <ADVP>:1]]]]]]]
				= [C [<malla virtaa> [ei [[D Pekka] [T [nukku [[D Pekka] <malla virtaa>]]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent (DP):2 from memory buffer into Spec of nukku
			= [C [<malla virtaa> [ei [[D Pekka] [T [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<malla virtaa>:1 [ei [(DP):2 [T [(DP):2 [nukku [[D Pekka]:2 <ADVP>:1]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 10/106 operations) <------------------------------------
		Solution:
		[C [<malla virtaa> [ei [[D Pekka] [T [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]]]]]
		Grammar: [C [<malla virtaa>:1 [ei [(DP):2 [T [(DP):2 [nukku [[D Pekka]:2 <ADVP>:1]]]]]]]]
		Spellout C/finP = [C/fin [ADVP:1 [Neg/fin [__:2 [T [__:2 [V [[D N]:2 __:1]]]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

C: [C/fin]
malla: [ADV, C/fin]
virtaa: [V, ADV, C/fin]
ei: [Neg/fin, C/fin]
(D): [D, Neg/fin, C/fin]
(N): [N, D, Neg/fin, C/fin]
T: [T, Neg/fin, C/fin]
(D): [D, T, Neg/fin, C/fin]
(N): [N, D, T, Neg/fin, C/fin]
nukku: [V, T, Neg/fin, C/fin]
D: [D, V, T, Neg/fin, C/fin]
Pekka: [N, D, V, T, Neg/fin, C/fin]
(ADV): [ADV, V, T, Neg/fin, C/fin]
(V): [V, ADV, V, T, Neg/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 53
['nukkunut', 'Pekka', 'ei', 'virtaamalla']


			=None

1.
		Next word contains multiple morphemes ['$T', 'nukku-']
			=T

2.

		Consume "nukku"

		T + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=T{V}

3.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=T{V}

4.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		T{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[T{V} D]

5.

		Consume "Pekka"

		[T{V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T{V} D{N}]

6.

		Consume "ei"

		[T{V} D{N}] + ei
			Filtering out impossible merge sites...
				Reject [[T [nukku [D Pekka]]] ei] due to bad left branch.
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[T{V} [[D Pekka] ei]]

7.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[T{V} [[D Pekka] ei]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
				Avoid [T [nukku [[D Pekka] ei]]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC, malla.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
				Avoid [[D Pekka] ei] as left branch because it constitutes illicit structure.
ei {'ADV'}{'T'}
[(-196, [[D N] Neg/fin]), (-99, [T [[D N] Neg/fin]]), (0, Neg/fin)]
		Ranking completed:
			1. [ei; malla]
			2. [[T{V} [[D Pekka] ei]]; malla]
			3. [[[D Pekka] ei]; malla]
		Exploring solution number (1) =[ei malla]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[T{V} [[D Pekka] [ei malla]]]

8.

		Consume "virtaa"

		[T{V} [[D Pekka] [ei malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[T{V} [[D Pekka] [ei malla{V}]]]

9.
	>>>	Trying candidate parse [T{V} [[D Pekka] [ei malla{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [T{V} [[D Pekka] [ei malla{V}]]].
				Extracted head "nukku" and reconstructed it = [T [nukku [[D Pekka] [ei malla{V}]]]]
				Extracted head "virtaa" from malla and created [T [nukku [[D Pekka] [ei [malla virtaa]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [ei [malla virtaa]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T [nukku [<D Pekka>:1 [ei [<DP>:1 [malla virtaa]]]]]]
				[malla virtaa] cannot be made an adjunct because its sister is an adjunct.
				[malla virtaa] cannot be made an adjunct because its sister is an adjunct.
				= [T [nukku [<D Pekka> [ei [<D Pekka> [malla virtaa]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "malla".
				Memory buffer: [[D N]]
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [T [nukku [<D Pekka>:1 [ei [<DP>:1 [malla virtaa]]]]]].
				<malla virtaa> was made adjunct by an extraposition rule.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
			= [T [nukku [<D Pekka> [ei [<D Pekka> <malla virtaa>]]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

T: [T]
nukku: [V, T]
D: [D, V, T]
Pekka: [N, D, V, T]
ei: [Neg/fin, V, T]
(D): [D, Neg/fin, V, T]
(N): [N, D, Neg/fin, V, T]
malla: [ADV, Neg/fin, V, T]
virtaa: [V, ADV, Neg/fin, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T{V} [[D Pekka] ei]] malla]
			Reconstructing head movement for [T{V} [[D Pekka] ei]].
				Extracted head "nukku" and reconstructed it = [T [nukku [[D Pekka] ei]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at ei
				= [T [nukku [[D Pekka] ei]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
				Extraposition will be tried on [T [nukku [[D Pekka] ei]]].
			=[[T [nukku [[D Pekka] ei]]] malla]

10.

		Consume "virtaa"

		[[T [nukku [[D Pekka] ei]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[T [nukku [[D Pekka] ei]]] malla{V}]

11.
	>>>	Trying candidate parse [[T [nukku [[D Pekka] ei]]] malla{V}] (2.)
		Reconstructing...
			Reconstructing head movement for [[T [nukku [[D Pekka] ei]]] malla{V}].
				Extracted head "virtaa" from malla and created [[T [nukku [[D Pekka] ei]]] [malla virtaa]]
			Dropping floaters...
				malla failed to tail.
				= [[T [nukku [[D Pekka] ei]]] [malla virtaa]]
			Dropping A-/A-bar movement.
				Moving "T nukku D Pekka ei " into memory buffer from SPEC of "malla".
				Memory buffer: [[T [V [[D N] Neg/fin]]]]
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
				Extraposition will be tried on [[T [nukku [[D Pekka] ei]]] [malla virtaa]].
			= [[T [nukku [[D Pekka] ei]]] [malla virtaa]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

T: [T]
nukku: [V, T]
D: [D, V, T]
Pekka: [N, D, V, T]
ei: [Neg/fin, V, T]
malla: [ADV]
virtaa: [V, ADV]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D Pekka] ei] malla]
			Reconstructing head movement for [[D Pekka] ei].
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at ei
				= [[D Pekka] ei]
			Dropping A-/A-bar movement.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
				Extraposition will be tried on [[D Pekka] ei].
			=[T{V} [[[D Pekka] ei] malla]]

12.

		Consume "virtaa"

		[T{V} [[[D Pekka] ei] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[T{V} [[[D Pekka] ei] malla{V}]]

13.
	>>>	Trying candidate parse [T{V} [[[D Pekka] ei] malla{V}]] (3.)
		Reconstructing...
			Reconstructing head movement for [T{V} [[[D Pekka] ei] malla{V}]].
				Extracted head "nukku" and reconstructed it = [T [nukku [[[D Pekka] ei] malla{V}]]]
				Extracted head "virtaa" from malla and created [T [nukku [[[D Pekka] ei] [malla virtaa]]]]
			Dropping floaters...
				<malla virtaa> was made an adjunct.
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at ei
				= [T [nukku [[[D Pekka] ei] <malla virtaa>]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
				Extraposition will be tried on [T [nukku [[[D Pekka] ei] <malla virtaa>]]].
			= [T [nukku [[[D Pekka] ei] <malla virtaa>]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

T: [T]
nukku: [V, T]
D: [D, V, T]
Pekka: [N, D, V, T]
ei: [Neg/fin, V, T]
malla: [ADV, V, T]
virtaa: [V, ADV, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 54
['nukkunut#foc', 'Pekka', 'ei', 'virtaamalla']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'nukkunut']
			=C

2.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		C + T
			Filtering out impossible merge sites...
			Sink "T" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T]
			=C{T}

3.

		Consume "nukku"

		C{T} + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into C{T} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T}*nukku]
			=C{T,V}

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=C{T,V}

5.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		C{T,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T,V} D]
			C{T,V} cannot be opened.
			=[C{T,V} D]

6.

		Consume "Pekka"

		[C{T,V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T,V} D{N}]

7.

		Consume "ei"

		[C{T,V} D{N}] + ei
			Filtering out impossible merge sites...
				Reject [[C [<D Pekka> [T [<D Pekka> [nukku <D Pekka>]]]]] ei] due to bad left branch.
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[C{T,V} [[D Pekka] ei]]

8.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[C{T,V} [[D Pekka] ei]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
				Avoid [[D Pekka] ei] as left branch because it constitutes illicit structure.
ei {'ADV'}{'T'}
[(-196, [[D N] Neg/fin]), (0, [C/fin [[D N] Neg/fin]]), (0, Neg/fin)]
		Ranking completed:
			1. [ei; malla]
			2. [[C{T,V} [[D Pekka] ei]]; malla]
			3. [[[D Pekka] ei]; malla]
		Exploring solution number (1) =[ei malla]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[C{T,V} [[D Pekka] [ei malla]]]

9.

		Consume "virtaa"

		[C{T,V} [[D Pekka] [ei malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[C{T,V} [[D Pekka] [ei malla{V}]]]

10.
	>>>	Trying candidate parse [C{T,V} [[D Pekka] [ei malla{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{T,V} [[D Pekka] [ei malla{V}]]].
				Extracted head "T{V}" and reconstructed it = [C [[D Pekka] [ei [T{V} malla{V}]]]]
				Extracted head "nukku" and reconstructed it = [C [[D Pekka] [ei [T [nukku malla{V}]]]]]
				Extracted head "virtaa" from malla and created [C [[D Pekka] [ei [T [nukku [malla virtaa]]]]]]
			Dropping floaters...
				[D Pekka] is in an EPP SPEC position.
				Start reconstruction at [[D Pekka] [ei [T [nukku [malla virtaa]]]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<D Pekka>:1 [ei [<DP>:1 [T [nukku [malla virtaa]]]]]]]
				<malla virtaa> was made an adjunct.
				= [C [<D Pekka> [ei [<D Pekka> [T [nukku <malla virtaa>]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			= [C [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 [nukku <malla virtaa>]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 10/103 operations) <------------------------------------
		Solution:
		[C [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]]]]
		Grammar: [C [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 [nukku <malla virtaa>]]]]]]]
		Spellout C/finP = [C/fin [DP:1 [Neg/fin [__:1 [T [__:1 [V ADVP]]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

C: [C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
ei: [Neg/fin, C/fin]
(D): [D, Neg/fin, C/fin]
(N): [N, D, Neg/fin, C/fin]
T: [T, Neg/fin, C/fin]
(D): [D, T, Neg/fin, C/fin]
(N): [N, D, T, Neg/fin, C/fin]
nukku: [V, T, Neg/fin, C/fin]
malla: [ADV, V, T, Neg/fin, C/fin]
virtaa: [V, ADV, V, T, Neg/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 55
['nukkunut', 'Pekka', 'virtaamalla', 'ei']


			=None

1.
		Next word contains multiple morphemes ['$T', 'nukku-']
			=T

2.

		Consume "nukku"

		T + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=T{V}

3.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=T{V}

4.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		T{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[T{V} D]

5.

		Consume "Pekka"

		[T{V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T{V} D{N}]

6.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[T{V} D{N}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				Avoid [T [nukku [D Pekka]]] as left branch because it constitutes illicit structure.
D{N} {'ADV'}{'N', '*'}
Pekka {'ADV'}{'R', 'uR', 'R/D'}
				Avoid [Pekka malla] due to complement selection.
			D was opened.
				Prioritize D{N} because all solutions were negative.
[(-99, [T D]), (102, D)]
		Ranking completed:
			1. [D{N}; malla]
			2. [[T{V} D{N}]; malla]
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[T{V} [[D Pekka] malla]]

7.

		Consume "virtaa"

		[T{V} [[D Pekka] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[T{V} [[D Pekka] malla{V}]]

8.

		Consume "ei"

		[T{V} [[D Pekka] malla{V}]] + ei
			Filtering out impossible merge sites...
				Reject [[T [nukku [[D Pekka] <malla virtaa>]]] ei] due to bad left branch.
				Reject [[[D Pekka] [malla virtaa]] ei] due to bad left branch.
		Exploring solution number (1) =[malla{V} ei]
			malla was opened.
			=[T{V} [[D Pekka] [[malla virtaa] ei]]]

9.
	>>>	Trying candidate parse [T{V} [[D Pekka] [[malla virtaa] ei]]] (1.)
		Reconstructing...
			Reconstructing head movement for [T{V} [[D Pekka] [[malla virtaa] ei]]].
				Extracted head "nukku" and reconstructed it = [T [nukku [[D Pekka] [[malla virtaa] ei]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [[malla virtaa] ei]
				[malla virtaa] is in an EPP SPEC position.
				Start reconstruction at ei
				= [T [nukku [[D Pekka] [[malla virtaa] ei]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [T [nukku [[D Pekka] [[malla virtaa] ei]]]].
			= [T [nukku [[D Pekka] [[malla virtaa] ei]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']

T: [T]
nukku: [V, T]
D: [D, V, T]
Pekka: [N, D, V, T]
malla: [ADV, V, T]
virtaa: [V, ADV, V, T]
ei: [Neg/fin, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T{V} D{N}] malla]
			Reconstructing head movement for [T{V} D{N}].
				Extracted head "nukku" and reconstructed it = [T [nukku D{N}]]
				Extracted head "Pekka" from D and created [T [nukku [D Pekka]]]
			Dropping floaters...
				D failed to tail.
				= [T [nukku [D Pekka]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
			=[[T [nukku [D Pekka]]] malla]

10.

		Consume "virtaa"

		[[T [nukku [D Pekka]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[T [nukku [D Pekka]]] malla{V}]

11.

		Consume "ei"

		[[T [nukku [D Pekka]]] malla{V}] + ei
			Filtering out impossible merge sites...
				Reject [[[T [nukku [D Pekka]]] [malla virtaa]] ei] due to bad left branch.
		Exploring solution number (1) =[malla{V} ei]
			malla was opened.
			=[[T [nukku [D Pekka]]] [[malla virtaa] ei]]

12.
	>>>	Trying candidate parse [[T [nukku [D Pekka]]] [[malla virtaa] ei]] (2.)
		Reconstructing...
			Reconstructing head movement for [[T [nukku [D Pekka]]] [[malla virtaa] ei]].
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at ei
				= [[T [nukku [D Pekka]]] [[malla virtaa] ei]]
			Dropping A-/A-bar movement.
				Moving "T nukku D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[T [V [D N]]]]
				Dropping [T [V [D N]]](=T nukku D Pekka ) from memory buffer into Comp of {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}.
				Result [[T [nukku [D Pekka]]]:1 [[malla virtaa] [ei (TP):1]]]
				Remaining items in memory buffer: []
				An EPP-head "(V)" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [[T [nukku [D Pekka]]]:1 [[malla virtaa] [ei (TP):1]]].
			= [[T [nukku [D Pekka]]] [[malla virtaa] [ei [T [nukku [D Pekka]]]]]]
		Checking LF-interface conditions.
				An EPP-head "(V)" lacks specifier D that it requires.
				(D) failed internal tail test.
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']

T: [T]
nukku: [V, T]
D: [D, V, T]
Pekka: [N, D, V, T]
malla: [ADV]
virtaa: [V, ADV]
ei: [Neg/fin]
(T): [T, Neg/fin]
(V): [V, T, Neg/fin]
(D): [D, V, T, Neg/fin]
(N): [N, D, V, T, Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 56
['nukkunut#foc', 'Pekka', 'virtaamalla', 'ei']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'nukkunut']
			=C

2.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		C + T
			Filtering out impossible merge sites...
			Sink "T" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T]
			=C{T}

3.

		Consume "nukku"

		C{T} + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into C{T} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T}*nukku]
			=C{T,V}

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=C{T,V}

5.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		C{T,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T,V} D]
			C{T,V} cannot be opened.
			=[C{T,V} D]

6.

		Consume "Pekka"

		[C{T,V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T,V} D{N}]

7.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[C{T,V} D{N}] + malla
			Filtering out impossible merge sites...
				Reject [[C [<D Pekka> [T [<D Pekka> [nukku <D Pekka>]]]]] malla] due to bad left branch.
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[C{T,V} [[D Pekka] malla]]

8.

		Consume "virtaa"

		[C{T,V} [[D Pekka] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[C{T,V} [[D Pekka] malla{V}]]

9.

		Consume "ei"

		[C{T,V} [[D Pekka] malla{V}]] + ei
			Filtering out impossible merge sites...
				Reject [[C [[D Pekka] [T [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]]] ei] due to bad left branch.
				Reject [[[D Pekka] [malla virtaa]] ei] due to bad left branch.
		Exploring solution number (1) =[malla{V} ei]
			malla was opened.
			=[C{T,V} [[D Pekka] [[malla virtaa] ei]]]

10.
	>>>	Trying candidate parse [C{T,V} [[D Pekka] [[malla virtaa] ei]]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{T,V} [[D Pekka] [[malla virtaa] ei]]].
				Extracted head "T{V}" and reconstructed it = [C [[D Pekka] [[malla virtaa] [ei T{V}]]]]
				Extracted head "nukku" from T and created [C [[D Pekka] [[malla virtaa] [ei [T nukku]]]]]
			Dropping floaters...
				[D Pekka] is in an EPP SPEC position.
				Start reconstruction at [[D Pekka] [[malla virtaa] [ei [T nukku]]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<D Pekka>:1 [[malla virtaa] [ei [<DP>:1 [T nukku]]]]]]
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [ei [<DP>:1 [T nukku]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [C [<D Pekka>:1 [<malla virtaa>:2 [ei [<DP>:1 [T [nukku <ADVP>:2]]]]]]]
				= [C [<D Pekka> [<malla virtaa> [ei [<D Pekka> [T [nukku <malla virtaa>]]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at ei but its category is unknown!
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [C [<D Pekka>:1 [? [<malla virtaa>:2 [ei [<DP>:1 [T [<DP>:1 [nukku <ADVP>:2]]]]]]]]].
			= [C [<D Pekka> [? [<malla virtaa> [ei [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

C: [C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
?: [?, C/fin]
malla: [ADV, ?, C/fin]
virtaa: [V, ADV, ?, C/fin]
ei: [Neg/fin, ?, C/fin]
(D): [D, Neg/fin, ?, C/fin]
(N): [N, D, Neg/fin, ?, C/fin]
T: [T, Neg/fin, ?, C/fin]
(D): [D, T, Neg/fin, ?, C/fin]
(N): [N, D, T, Neg/fin, ?, C/fin]
nukku: [V, T, Neg/fin, ?, C/fin]
(ADV): [ADV, V, T, Neg/fin, ?, C/fin]
(V): [V, ADV, V, T, Neg/fin, ?, C/fin]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut#foc".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 57
['nukkunut', 'ei', 'Pekka', 'virtaamalla']


			=None

1.
		Next word contains multiple morphemes ['$T', 'nukku-']
			=T

2.

		Consume "nukku"

		T + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=T{V}

3.

		Consume "ei"

		T{V} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T{V} ei]
			T{V} cannot be opened.
			=[T{V} ei]

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[T{V} ei]

5.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[T{V} ei] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TP as SPEC for D due to unselective SPEC feature.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [T [nukku ei]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
ei {'D'}{'T'}
				Avoid ei because it could break words.
[(-198, [T Neg/fin]), (-196, Neg/fin)]
		Ranking completed:
			1. [ei; D]
			2. [[T{V} ei]; D]
		Exploring solution number (1) =[ei D]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[T{V} [ei D]]

6.

		Consume "Pekka"

		[T{V} [ei D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T{V} [ei D{N}]]

7.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[T{V} [ei D{N}]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [T [nukku [ei [D Pekka]]]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC, malla.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [ei [D Pekka]] as left branch because it constitutes illicit structure.
D{N} {'ADV'}{'N', '*'}
Pekka {'ADV'}{'R', 'uR', 'R/D'}
				Avoid [Pekka malla] due to complement selection.
			D was opened.
				Prioritize D{N} because all solutions were negative.
[(-196, [Neg/fin D]), (-99, [T [Neg/fin D]]), (103, D)]
		Ranking completed:
			1. [D{N}; malla]
			2. [[T{V} [ei D{N}]]; malla]
			3. [[ei D{N}]; malla]
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[T{V} [ei [[D Pekka] malla]]]

8.

		Consume "virtaa"

		[T{V} [ei [[D Pekka] malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[T{V} [ei [[D Pekka] malla{V}]]]

9.
	>>>	Trying candidate parse [T{V} [ei [[D Pekka] malla{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [T{V} [ei [[D Pekka] malla{V}]]].
				Extracted head "nukku" and reconstructed it = [T [nukku [ei [[D Pekka] malla{V}]]]]
				Extracted head "virtaa" from malla and created [T [nukku [ei [[D Pekka] [malla virtaa]]]]]
			Dropping floaters...
				<malla virtaa> was made an adjunct.
				= [T [nukku [ei [[D Pekka] <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [T [nukku [ei [[D Pekka] <malla virtaa>]]]].
			= [T [nukku [ei [[D Pekka] <malla virtaa>]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

T: [T]
nukku: [V, T]
ei: [Neg/fin, V, T]
D: [D, Neg/fin, V, T]
Pekka: [N, D, Neg/fin, V, T]
malla: [ADV, Neg/fin, V, T]
virtaa: [V, ADV, Neg/fin, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T{V} [ei D{N}]] malla]
			Reconstructing head movement for [T{V} [ei D{N}]].
				Extracted head "nukku" and reconstructed it = [T [nukku [ei D{N}]]]
				Extracted head "Pekka" from D and created [T [nukku [ei [D Pekka]]]]
			Dropping floaters...
				= [T [nukku [ei [D Pekka]]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [T [nukku [ei [D Pekka]]]].
			=[[T [nukku [ei [D Pekka]]]] malla]

10.

		Consume "virtaa"

		[[T [nukku [ei [D Pekka]]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[T [nukku [ei [D Pekka]]]] malla{V}]

11.
	>>>	Trying candidate parse [[T [nukku [ei [D Pekka]]]] malla{V}] (2.)
		Reconstructing...
			Reconstructing head movement for [[T [nukku [ei [D Pekka]]]] malla{V}].
				Extracted head "virtaa" from malla and created [[T [nukku [ei [D Pekka]]]] [malla virtaa]]
			Dropping floaters...
				malla failed to tail.
				= [[T [nukku [ei [D Pekka]]]] [malla virtaa]]
			Dropping A-/A-bar movement.
				Moving "T nukku ei D Pekka " into memory buffer from SPEC of "malla".
				Memory buffer: [[T [V [Neg/fin [D N]]]]]
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [[T [nukku [ei [D Pekka]]]] [malla virtaa]].
			= [[T [nukku [ei [D Pekka]]]] [malla virtaa]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

T: [T]
nukku: [V, T]
ei: [Neg/fin, V, T]
D: [D, Neg/fin, V, T]
Pekka: [N, D, Neg/fin, V, T]
malla: [ADV]
virtaa: [V, ADV]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[ei D{N}] malla]
			Reconstructing head movement for [ei D{N}].
				Extracted head "Pekka" from D and created [ei [D Pekka]]
			Dropping floaters...
				= [ei [D Pekka]]
			Dropping A-/A-bar movement.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [ei [D Pekka]].
			=[T{V} [[ei [D Pekka]] malla]]

12.

		Consume "virtaa"

		[T{V} [[ei [D Pekka]] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[T{V} [[ei [D Pekka]] malla{V}]]

13.
	>>>	Trying candidate parse [T{V} [[ei [D Pekka]] malla{V}]] (3.)
		Reconstructing...
			Reconstructing head movement for [T{V} [[ei [D Pekka]] malla{V}]].
				Extracted head "nukku" and reconstructed it = [T [nukku [[ei [D Pekka]] malla{V}]]]
				Extracted head "virtaa" from malla and created [T [nukku [[ei [D Pekka]] [malla virtaa]]]]
			Dropping floaters...
				<malla virtaa> was made an adjunct.
				= [T [nukku [[ei [D Pekka]] <malla virtaa>]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [T [nukku [[ei [D Pekka]] <malla virtaa>]]].
			= [T [nukku [[ei [D Pekka]] <malla virtaa>]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

T: [T]
nukku: [V, T]
ei: [Neg/fin, V, T]
D: [D, Neg/fin, V, T]
Pekka: [N, D, Neg/fin, V, T]
malla: [ADV, V, T]
virtaa: [V, ADV, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T{V} ei] D]
			Reconstructing head movement for [T{V} ei].
				Extracted head "nukku" and reconstructed it = [T [nukku ei]]
			Dropping floaters...
				= [T [nukku ei]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [T [nukku ei]].
			=[[T [nukku ei]] D]

14.

		Consume "Pekka"

		[[T [nukku ei]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[T [nukku ei]] D{N}]

15.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[T [nukku ei]] D{N}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [[T [nukku ei]] <D Pekka>] as left branch because it constitutes illicit structure.
D{N} {'ADV'}{'N', '*'}
Pekka {'ADV'}{'R', 'uR', 'R/D'}
				Avoid [Pekka malla] due to complement selection.
			D was opened.
				Prioritize D{N} because all solutions were negative.
[(-99, [[T [V Neg/fin]] D]), (102, D)]
		Ranking completed:
			1. [D{N}; malla]
			2. [[[T [nukku ei]] D{N}]; malla]
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[T [nukku ei]] [[D Pekka] malla]]

16.

		Consume "virtaa"

		[[T [nukku ei]] [[D Pekka] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[T [nukku ei]] [[D Pekka] malla{V}]]

17.
	>>>	Trying candidate parse [[T [nukku ei]] [[D Pekka] malla{V}]] (4.)
		Reconstructing...
			Reconstructing head movement for [[T [nukku ei]] [[D Pekka] malla{V}]].
				Extracted head "virtaa" from malla and created [[T [nukku ei]] [[D Pekka] [malla virtaa]]]
			Dropping floaters...
				malla failed to tail.
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [[D Pekka] [malla virtaa]]
				= [[T [nukku ei]] [[D Pekka] [malla virtaa]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "malla".
				Moving "T nukku ei " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Memory buffer: [[D N], [T [V Neg/fin]]]
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
				[D Pekka]" has no thematic role
				Extraposition will be tried on [[T [nukku ei]] [? [[D Pekka] [malla virtaa]]]].
			= [[T [nukku ei]] [? [[D Pekka] [malla virtaa]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
				[D Pekka]" has no thematic role
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

T: [T]
nukku: [V, T]
ei: [Neg/fin, V, T]
?: [?]
D: [D, ?]
Pekka: [N, D, ?]
malla: [ADV, ?]
virtaa: [V, ADV, ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[T [nukku ei]] D{N}] malla]
			Reconstructing head movement for [[T [nukku ei]] D{N}].
				Extracted head "Pekka" from D and created [[T [nukku ei]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at <D Pekka>
				= [[T [nukku ei]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [[T [nukku ei]] <D Pekka>].
			=[[[T [nukku ei]] <D Pekka>] malla]

18.

		Consume "virtaa"

		[[[T [nukku ei]] <D Pekka>] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[T [nukku ei]] <D Pekka>] malla{V}]

19.
	>>>	Trying candidate parse [[[T [nukku ei]] <D Pekka>] malla{V}] (5.)
		Reconstructing...
			Reconstructing head movement for [[[T [nukku ei]] <D Pekka>] malla{V}].
				Extracted head "virtaa" from malla and created [[[T [nukku ei]] <D Pekka>] [malla virtaa]]
			Dropping floaters...
				malla failed to tail.
				= [[[T [nukku ei]] <D Pekka>] [malla virtaa]]
			Dropping A-/A-bar movement.
				Moving "T nukku ei D Pekka " into memory buffer from SPEC of "malla".
				Memory buffer: [[[T [V Neg/fin]] [D N]]]
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [[[T [nukku ei]] <D Pekka>] [malla virtaa]].
			= [[[T [nukku ei]] <D Pekka>] [malla virtaa]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

T: [T]
nukku: [V, T]
ei: [Neg/fin, V, T]
D: [D]
Pekka: [N, D]
malla: [ADV]
virtaa: [V, ADV]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 58
['nukkunut#foc', 'ei', 'Pekka', 'virtaamalla']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'nukkunut']
			=C

2.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		C + T
			Filtering out impossible merge sites...
			Sink "T" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T]
			=C{T}

3.

		Consume "nukku"

		C{T} + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into C{T} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T}*nukku]
			=C{T,V}

4.

		Consume "ei"

		C{T,V} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T,V} ei]
			C{T,V} cannot be opened.
			=[C{T,V} ei]

5.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[C{T,V} ei]

6.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[C{T,V} ei] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [C [ei [T nukku]]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
ei {'D'}{'T'}
				Avoid ei because it could break words.
[(-198, [C/fin Neg/fin]), (-196, Neg/fin)]
		Ranking completed:
			1. [ei; D]
			2. [[C{T,V} ei]; D]
		Exploring solution number (1) =[ei D]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[C{T,V} [ei D]]

7.

		Consume "Pekka"

		[C{T,V} [ei D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T,V} [ei D{N}]]

8.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[C{T,V} [ei D{N}]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [ei [D Pekka]] as left branch because it constitutes illicit structure.
D{N} {'ADV'}{'N', '*'}
Pekka {'ADV'}{'R', 'uR', 'R/D'}
				Avoid [Pekka malla] due to complement selection.
[(-196, [Neg/fin D]), (-97, D), (0, [C/fin [Neg/fin D]])]
		Ranking completed:
			1. [[C{T,V} [ei D{N}]]; malla]
			2. [D{N}; malla]
			3. [[ei D{N}]; malla]
		Exploring solution number (1) =[[C{T,V} [ei D{N}]] malla]
			Reconstructing head movement for [C{T,V} [ei D{N}]].
				Extracted head "T{V}" and reconstructed it = [C [ei [T{V} D{N}]]]
				Extracted head "nukku" and reconstructed it = [C [ei [T [nukku D{N}]]]]
				Extracted head "Pekka" from D and created [C [ei [T [nukku [D Pekka]]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at [ei [T [nukku <D Pekka>]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<DP>:1 [ei [T [nukku <D Pekka>:1]]]]]
				= [C [<D Pekka> [ei [T [nukku <D Pekka>]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of T
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			=[[C [<DP>:1 [ei [<DP>:1 [T [<DP>:1 [nukku <D Pekka>:1]]]]]]] malla]

9.

		Consume "virtaa"

		[[C [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <D Pekka>]]]]]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[C [<DP>:1 [ei [<DP>:1 [T [<DP>:1 [nukku <D Pekka>:1]]]]]]] malla{V}]

10.
	>>>	Trying candidate parse [[C [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <D Pekka>]]]]]]] malla{V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[C [<DP>:1 [ei [<DP>:1 [T [<DP>:1 [nukku <D Pekka>:1]]]]]]] malla{V}].
				Extracted head "virtaa" from malla and created [[C [<DP>:1 [ei [<DP>:1 [T [<DP>:1 [nukku <D Pekka>:1]]]]]]] [malla virtaa]]
			Dropping floaters...
				malla failed to tail.
				= [[C [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <D Pekka>]]]]]]] [malla virtaa]]
			Dropping A-/A-bar movement.
				Moving "C __ei __T __nukku D Pekka " into memory buffer from SPEC of "malla".
				Memory buffer: [[C/fin [[D N] [Neg/fin [[D N] [T [[D N] [V [D N]]]]]]]]]
			= [[C [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <D Pekka>]]]]]]] [malla virtaa]]
		Checking LF-interface conditions.
			malla<[ADV]> failed to tail features [CAT:V]
malla
			Final tail-head check failed.
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

C: [C/fin]
(D): [D, C/fin]
(N): [N, D, C/fin]
ei: [Neg/fin, C/fin]
(D): [D, Neg/fin, C/fin]
(N): [N, D, Neg/fin, C/fin]
T: [T, Neg/fin, C/fin]
(D): [D, T, Neg/fin, C/fin]
(N): [N, D, T, Neg/fin, C/fin]
nukku: [V, T, Neg/fin, C/fin]
D: [D, V, T, Neg/fin, C/fin]
Pekka: [N, D, V, T, Neg/fin, C/fin]
malla: [ADV]
virtaa: [V, ADV]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} malla]
			D was opened.
			=[C{T,V} [ei [[D Pekka] malla]]]

11.

		Consume "virtaa"

		[C{T,V} [ei [[D Pekka] malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[C{T,V} [ei [[D Pekka] malla{V}]]]

12.
	>>>	Trying candidate parse [C{T,V} [ei [[D Pekka] malla{V}]]] (2.)
		Reconstructing...
			Reconstructing head movement for [C{T,V} [ei [[D Pekka] malla{V}]]].
				Extracted head "T{V}" and reconstructed it = [C [ei [T{V} [[D Pekka] malla{V}]]]]
				Extracted head "nukku" and reconstructed it = [C [ei [T [nukku [[D Pekka] malla{V}]]]]]
				Extracted head "virtaa" from malla and created [C [ei [T [nukku [[D Pekka] [malla virtaa]]]]]]
			Dropping floaters...
				<malla virtaa> was made an adjunct.
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [ei [T [nukku [[D Pekka] <malla virtaa>]]]]
				[D Pekka] cannot be made an adjunct because its sister is an adjunct.
				Floater [D Pekka] dropped: [C [(DP):1 [ei [T [nukku [[D Pekka]:1 <malla virtaa>]]]]]]
				= [C [[D Pekka] [ei [T [nukku [[D Pekka] <malla virtaa>]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent (DP):1 from memory buffer into Spec of T
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent (DP):1 from memory buffer into Spec of nukku
			= [C [[D Pekka] [ei [[D Pekka] [T [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [(DP):1 [ei [(DP):1 [T [(DP):1 [nukku [[D Pekka]:1 <malla virtaa>]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 12/167 operations) <------------------------------------
		Solution:
		[C [[D Pekka] [ei [[D Pekka] [T [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]]]]]
		Grammar: [C [(DP):1 [ei [(DP):1 [T [(DP):1 [nukku [[D Pekka]:1 <malla virtaa>]]]]]]]]
		Spellout C/finP = [C/fin [__:1 [Neg/fin [__:1 [T [__:1 [V [[D N]:1 ADVP]]]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

C: [C/fin]
(D): [D, C/fin]
(N): [N, D, C/fin]
ei: [Neg/fin, C/fin]
(D): [D, Neg/fin, C/fin]
(N): [N, D, Neg/fin, C/fin]
T: [T, Neg/fin, C/fin]
(D): [D, T, Neg/fin, C/fin]
(N): [N, D, T, Neg/fin, C/fin]
nukku: [V, T, Neg/fin, C/fin]
D: [D, V, T, Neg/fin, C/fin]
Pekka: [N, D, V, T, Neg/fin, C/fin]
malla: [ADV, V, T, Neg/fin, C/fin]
virtaa: [V, ADV, V, T, Neg/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 59
['nukkunut', 'ei', 'virtaamalla', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$T', 'nukku-']
			=T

2.

		Consume "nukku"

		T + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=T{V}

3.

		Consume "ei"

		T{V} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T{V} ei]
			T{V} cannot be opened.
			=[T{V} ei]

4.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[T{V} ei] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [T [nukku ei]] as left branch because it constitutes illicit structure.
ei {'ADV'}{'T'}
[(-99, [T Neg/fin]), (0, Neg/fin)]
		Ranking completed:
			1. [ei; malla]
			2. [[T{V} ei]; malla]
		Exploring solution number (1) =[ei malla]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[T{V} [ei malla]]

5.

		Consume "virtaa"

		[T{V} [ei malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[T{V} [ei malla{V}]]

6.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[T{V} [ei malla{V}]]

7.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[T{V} [ei malla{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TP as SPEC for D due to unselective SPEC feature.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [T [nukku [ei <malla virtaa>]]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [ei [malla virtaa]] as left branch because it constitutes illicit structure.
				Avoid ADVP as SPEC for D due to unselective SPEC feature.
				Avoid [malla{V} D] due to local agreement failure.
malla{V} {'D'}{'*'}
virtaa {'D'}{'P'}
				Avoid [virtaa D] due to complement selection.
			malla was opened.
				Prioritize malla{V} because all solutions were negative.
[(-198, [T [Neg/fin ADV]]), (-196, [Neg/fin ADV]), (-91, ADV)]
		Ranking completed:
			1. [malla{V}; D]
			2. [[ei malla{V}]; D]
			3. [[T{V} [ei malla{V}]]; D]
		Exploring solution number (1) =[malla{V} D]
			malla was opened.
			=[T{V} [ei [[malla virtaa] D]]]

8.

		Consume "Pekka"

		[T{V} [ei [[malla virtaa] D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T{V} [ei [[malla virtaa] D{N}]]]

9.
	>>>	Trying candidate parse [T{V} [ei [[malla virtaa] D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [T{V} [ei [[malla virtaa] D{N}]]].
				Extracted head "nukku" and reconstructed it = [T [nukku [ei [[malla virtaa] D{N}]]]]
				Extracted head "Pekka" from D and created [T [nukku [ei [[malla virtaa] [D Pekka]]]]]
			Dropping floaters...
				= [T [nukku [ei [[malla virtaa] [D Pekka]]]]]
			Dropping A-/A-bar movement.
				Moving "malla virtaa " into memory buffer from SPEC of "D".
				Memory buffer: [[ADV V]]
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				D (D) has a specifier [malla virtaa] but is marked for -EPP behavior.
				Extraposition will be tried on [T [nukku [ei [[malla virtaa] [D Pekka]]]]].
				<D Pekka> was made adjunct by an extraposition rule.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
			= [T [nukku [ei [[malla virtaa] <D Pekka>]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T: [T]
nukku: [V, T]
ei: [Neg/fin, V, T]
malla: [ADV, Neg/fin, V, T]
virtaa: [V, ADV, Neg/fin, V, T]
D: [D, Neg/fin, V, T]
Pekka: [N, D, Neg/fin, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[ei malla{V}] D]
			Reconstructing head movement for [ei malla{V}].
				Extracted head "virtaa" from malla and created [ei [malla virtaa]]
			Dropping floaters...
				malla failed to tail.
				= [ei [malla virtaa]]
			Dropping A-/A-bar movement.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [ei [malla virtaa]].
			=[T{V} [[ei [malla virtaa]] D]]

10.

		Consume "Pekka"

		[T{V} [[ei [malla virtaa]] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T{V} [[ei [malla virtaa]] D{N}]]

11.
	>>>	Trying candidate parse [T{V} [[ei [malla virtaa]] D{N}]] (2.)
		Reconstructing...
			Reconstructing head movement for [T{V} [[ei [malla virtaa]] D{N}]].
				Extracted head "nukku" and reconstructed it = [T [nukku [[ei [malla virtaa]] D{N}]]]
				Extracted head "Pekka" from D and created [T [nukku [[ei [malla virtaa]] [D Pekka]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at <D Pekka>
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at <D Pekka>
				<malla virtaa> was made an adjunct.
				= [T [nukku [[ei <malla virtaa>] <D Pekka>]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				D failed internal tail test.
				Extraposition will be tried on [T [nukku [[ei <malla virtaa>] <D Pekka>]]].
			= [T [nukku [[ei <malla virtaa>] <D Pekka>]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				D failed internal tail test.
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T: [T]
nukku: [V, T]
ei: [Neg/fin, V, T]
malla: [ADV, Neg/fin, V, T]
virtaa: [V, ADV, Neg/fin, V, T]
D: [D, V, T]
Pekka: [N, D, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[T{V} [ei malla{V}]] D]
			Reconstructing head movement for [T{V} [ei malla{V}]].
				Extracted head "nukku" and reconstructed it = [T [nukku [ei malla{V}]]]
				Extracted head "virtaa" from malla and created [T [nukku [ei [malla virtaa]]]]
			Dropping floaters...
				<malla virtaa> was made an adjunct.
				= [T [nukku [ei <malla virtaa>]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [T [nukku [ei <malla virtaa>]]].
			=[[T [nukku [ei <malla virtaa>]]] D]

12.

		Consume "Pekka"

		[[T [nukku [ei <malla virtaa>]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[T [nukku [ei <malla virtaa>]]] D{N}]

13.
	>>>	Trying candidate parse [[T [nukku [ei <malla virtaa>]]] D{N}] (3.)
		Reconstructing...
			Reconstructing head movement for [[T [nukku [ei <malla virtaa>]]] D{N}].
				Extracted head "Pekka" from D and created [[T [nukku [ei <malla virtaa>]]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at <D Pekka>
				= [[T [nukku [ei <malla virtaa>]]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [[T [nukku [ei <malla virtaa>]]] <D Pekka>].
			= [[T [nukku [ei <malla virtaa>]]] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T: [T]
nukku: [V, T]
ei: [Neg/fin, V, T]
malla: [ADV, Neg/fin, V, T]
virtaa: [V, ADV, Neg/fin, V, T]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T{V} ei] malla]
			Reconstructing head movement for [T{V} ei].
				Extracted head "nukku" and reconstructed it = [T [nukku ei]]
			Dropping floaters...
				= [T [nukku ei]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [T [nukku ei]].
			=[[T [nukku ei]] malla]

14.

		Consume "virtaa"

		[[T [nukku ei]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[T [nukku ei]] malla{V}]

15.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[T [nukku ei]] malla{V}]

16.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[T [nukku ei]] malla{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid ADVP as SPEC for D due to unselective SPEC feature.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [[T [nukku ei]] [malla virtaa]] as left branch because it constitutes illicit structure.
				Avoid ADVP as SPEC for D due to unselective SPEC feature.
				Avoid [malla{V} D] due to local agreement failure.
malla{V} {'D'}{'*'}
virtaa {'D'}{'P'}
				Avoid [virtaa D] due to complement selection.
			malla was opened.
				Prioritize malla{V} because all solutions were negative.
[(-198, [[T [V Neg/fin]] ADV]), (-94, ADV)]
		Ranking completed:
			1. [malla{V}; D]
			2. [[[T [nukku ei]] malla{V}]; D]
		Exploring solution number (1) =[malla{V} D]
			malla was opened.
			=[[T [nukku ei]] [[malla virtaa] D]]

17.

		Consume "Pekka"

		[[T [nukku ei]] [[malla virtaa] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[T [nukku ei]] [[malla virtaa] D{N}]]

18.
	>>>	Trying candidate parse [[T [nukku ei]] [[malla virtaa] D{N}]] (4.)
		Reconstructing...
			Reconstructing head movement for [[T [nukku ei]] [[malla virtaa] D{N}]].
				Extracted head "Pekka" from D and created [[T [nukku ei]] [[malla virtaa] [D Pekka]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at [[malla virtaa] <D Pekka>]
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[malla virtaa] <D Pekka>]
				= [[T [nukku ei]] [[malla virtaa] <D Pekka>]]
			Dropping A-/A-bar movement.
				Moving "T nukku ei " into memory buffer from SPEC of "malla".
				Memory buffer: [[T [V Neg/fin]]]
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [[T [nukku ei]] [[malla virtaa] <D Pekka>]].
			= [[T [nukku ei]] [[malla virtaa] <D Pekka>]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T: [T]
nukku: [V, T]
ei: [Neg/fin, V, T]
malla: [ADV]
virtaa: [V, ADV]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[T [nukku ei]] malla{V}] D]
			Reconstructing head movement for [[T [nukku ei]] malla{V}].
				Extracted head "virtaa" from malla and created [[T [nukku ei]] [malla virtaa]]
			Dropping floaters...
				malla failed to tail.
				= [[T [nukku ei]] [malla virtaa]]
			Dropping A-/A-bar movement.
				Moving "T nukku ei " into memory buffer from SPEC of "malla".
				Memory buffer: [[T [V Neg/fin]]]
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [[T [nukku ei]] [malla virtaa]].
			=[[[T [nukku ei]] [malla virtaa]] D]

19.

		Consume "Pekka"

		[[[T [nukku ei]] [malla virtaa]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[[T [nukku ei]] [malla virtaa]] D{N}]

20.
	>>>	Trying candidate parse [[[T [nukku ei]] [malla virtaa]] D{N}] (5.)
		Reconstructing...
			Reconstructing head movement for [[[T [nukku ei]] [malla virtaa]] D{N}].
				Extracted head "Pekka" from D and created [[[T [nukku ei]] [malla virtaa]] [D Pekka]]
			Dropping floaters...
				[[T [nukku ei]] [malla virtaa]] failed to tail [CAT:V]
				Start reconstruction at [D Pekka]
				= [[[T [nukku ei]] [malla virtaa]] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "T nukku ei malla virtaa " into memory buffer from SPEC of "D".
				Memory buffer: [[[T [V Neg/fin]] [ADV V]]]
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				D (D) has a specifier [[T [nukku ei]] [malla virtaa]] but is marked for -EPP behavior.
				Extraposition will be tried on [[[T [nukku ei]] [malla virtaa]] [D Pekka]].
				<D Pekka> was made adjunct by an extraposition rule.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
			= [[[T [nukku ei]] [malla virtaa]] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T: [T]
nukku: [V, T]
ei: [Neg/fin, V, T]
malla: [ADV]
virtaa: [V, ADV]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 60
['nukkunut#foc', 'ei', 'virtaamalla', 'Pekka']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'nukkunut']
			=C

2.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		C + T
			Filtering out impossible merge sites...
			Sink "T" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T]
			=C{T}

3.

		Consume "nukku"

		C{T} + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into C{T} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T}*nukku]
			=C{T,V}

4.

		Consume "ei"

		C{T,V} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T,V} ei]
			C{T,V} cannot be opened.
			=[C{T,V} ei]

5.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[C{T,V} ei] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [C [ei [T nukku]]] as left branch because it constitutes illicit structure.
ei {'ADV'}{'T'}
[(-99, [C/fin Neg/fin]), (0, Neg/fin)]
		Ranking completed:
			1. [ei; malla]
			2. [[C{T,V} ei]; malla]
		Exploring solution number (1) =[ei malla]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[C{T,V} [ei malla]]

6.

		Consume "virtaa"

		[C{T,V} [ei malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[C{T,V} [ei malla{V}]]

7.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[C{T,V} [ei malla{V}]]

8.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[C{T,V} [ei malla{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [C [ei [T [nukku <malla virtaa>]]]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				Avoid [[ei malla{V}], D] because the operation breaks up an existing selectional dependency.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [ei [malla virtaa]] as left branch because it constitutes illicit structure.
				Avoid ADVP as SPEC for D due to unselective SPEC feature.
				Avoid [malla{V} D] due to local agreement failure.
malla{V} {'D'}{'*'}
virtaa {'D'}{'P'}
				Avoid [virtaa D] due to complement selection.
			malla was opened.
				Prioritize malla{V} because all solutions were negative.
[(-294, [Neg/fin ADV]), (-198, [C/fin [Neg/fin ADV]]), (-91, ADV)]
		Ranking completed:
			1. [malla{V}; D]
			2. [[C{T,V} [ei malla{V}]]; D]
			3. [[ei malla{V}]; D]
		Exploring solution number (1) =[malla{V} D]
			malla was opened.
			=[C{T,V} [ei [[malla virtaa] D]]]

9.

		Consume "Pekka"

		[C{T,V} [ei [[malla virtaa] D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T,V} [ei [[malla virtaa] D{N}]]]

10.
	>>>	Trying candidate parse [C{T,V} [ei [[malla virtaa] D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{T,V} [ei [[malla virtaa] D{N}]]].
				Extracted head "T{V}" and reconstructed it = [C [ei [T{V} [[malla virtaa] D{N}]]]]
				Extracted head "nukku" and reconstructed it = [C [ei [T [nukku [[malla virtaa] D{N}]]]]]
				Extracted head "Pekka" from D and created [C [ei [T [nukku [[malla virtaa] [D Pekka]]]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at [ei [T [nukku [[malla virtaa] <D Pekka>]]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<DP>:1 [ei [T [nukku [[malla virtaa] <D Pekka>:1]]]]]]
				= [C [<D Pekka> [ei [T [nukku [[malla virtaa] <D Pekka>]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of T
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			= [C [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku [[malla virtaa] <D Pekka>]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<DP>:1 [ei [<DP>:1 [T [<DP>:1 [nukku [[malla virtaa] <D Pekka>:1]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 10/125 operations) <------------------------------------
		Solution:
		[C [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku [[malla virtaa] <D Pekka>]]]]]]]]
		Grammar: [C [<DP>:1 [ei [<DP>:1 [T [<DP>:1 [nukku [[malla virtaa] <D Pekka>:1]]]]]]]]
		Spellout C/finP = [C/fin [__:1 [Neg/fin [__:1 [T [__:1 [V [[ADV V] DP:1]]]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C: [C/fin]
(D): [D, C/fin]
(N): [N, D, C/fin]
ei: [Neg/fin, C/fin]
(D): [D, Neg/fin, C/fin]
(N): [N, D, Neg/fin, C/fin]
T: [T, Neg/fin, C/fin]
(D): [D, T, Neg/fin, C/fin]
(N): [N, D, T, Neg/fin, C/fin]
nukku: [V, T, Neg/fin, C/fin]
malla: [ADV, V, T, Neg/fin, C/fin]
virtaa: [V, ADV, V, T, Neg/fin, C/fin]
D: [D, V, T, Neg/fin, C/fin]
Pekka: [N, D, V, T, Neg/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 61
['nukkunut', 'virtaamalla', 'Pekka', 'ei']


			=None

1.
		Next word contains multiple morphemes ['$T', 'nukku-']
			=T

2.

		Consume "nukku"

		T + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=T{V}

3.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		T{V} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T{V} malla]
			T{V} cannot be opened.
			=[T{V} malla]

4.

		Consume "virtaa"

		[T{V} malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[T{V} malla{V}]

5.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[T{V} malla{V}]

6.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[T{V} malla{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TP as SPEC for D due to unselective SPEC feature.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [T [nukku <malla virtaa>]] as left branch because it constitutes illicit structure.
				Avoid ADVP as SPEC for D due to unselective SPEC feature.
				Avoid [malla{V} D] due to local agreement failure.
malla{V} {'D'}{'*'}
virtaa {'D'}{'P'}
				Avoid [virtaa D] due to complement selection.
				Avoid malla{V} because it could break words.
			malla was opened.
				Prioritize malla{V} because all solutions were negative.
[(-198, [T ADV]), (-192, ADV)]
		Ranking completed:
			1. [malla{V}; D]
			2. [[T{V} malla{V}]; D]
		Exploring solution number (1) =[malla{V} D]
			malla was opened.
			=[T{V} [[malla virtaa] D]]

7.

		Consume "Pekka"

		[T{V} [[malla virtaa] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T{V} [[malla virtaa] D{N}]]

8.

		Consume "ei"

		[T{V} [[malla virtaa] D{N}]] + ei
			Filtering out impossible merge sites...
				Reject [[T [nukku [[malla virtaa] [D Pekka]]]] ei] due to bad left branch.
				Reject [[[ADV V] D] ei] as Spec because it breaks words.
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[T{V} [[malla virtaa] [[D Pekka] ei]]]

9.
	>>>	Trying candidate parse [T{V} [[malla virtaa] [[D Pekka] ei]]] (1.)
		Reconstructing...
			Reconstructing head movement for [T{V} [[malla virtaa] [[D Pekka] ei]]].
				Extracted head "nukku" and reconstructed it = [T [nukku [[malla virtaa] [[D Pekka] ei]]]]
			Dropping floaters...
				[malla virtaa] is in an EPP SPEC position.
				Start reconstruction at [[D Pekka] ei]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at ei
				= [T [nukku [[malla virtaa] [[D Pekka] ei]]]]
			Dropping A-/A-bar movement.
				Moving "malla virtaa " into memory buffer from SPEC of "ei".
				Memory buffer: [[ADV V]]
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
				Extraposition will be tried on [T [nukku [[malla virtaa] [[D Pekka] ei]]]].
			= [T [nukku [[malla virtaa] [[D Pekka] ei]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']

T: [T]
nukku: [V, T]
malla: [ADV, V, T]
virtaa: [V, ADV, V, T]
D: [D, V, T]
Pekka: [N, D, V, T]
ei: [Neg/fin, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T{V} malla{V}] D]
			Reconstructing head movement for [T{V} malla{V}].
				Extracted head "nukku" and reconstructed it = [T [nukku malla{V}]]
				Extracted head "virtaa" from malla and created [T [nukku [malla virtaa]]]
			Dropping floaters...
				<malla virtaa> was made an adjunct.
				= [T [nukku <malla virtaa>]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
			=[[T [nukku <malla virtaa>]] D]

10.

		Consume "Pekka"

		[[T [nukku <malla virtaa>]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[T [nukku <malla virtaa>]] D{N}]

11.

		Consume "ei"

		[[T [nukku <malla virtaa>]] D{N}] + ei
			Filtering out impossible merge sites...
				Reject [[[T [nukku <malla virtaa>]] <D Pekka>] ei] due to bad left branch.
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[T [nukku <malla virtaa>]] [[D Pekka] ei]]

12.
	>>>	Trying candidate parse [[T [nukku <malla virtaa>]] [[D Pekka] ei]] (2.)
		Reconstructing...
			Reconstructing head movement for [[T [nukku <malla virtaa>]] [[D Pekka] ei]].
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at ei
				= [[T [nukku <malla virtaa>]] [[D Pekka] ei]]
			Dropping A-/A-bar movement.
				Moving "T nukku malla virtaa " into memory buffer from SPEC of "ei".
				Memory buffer: [[T [V [ADV V]]]]
				Dropping [T [V [ADV V]]](=T nukku malla virtaa ) from memory buffer into Comp of {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}.
				Result [[T [nukku <malla virtaa>]]:1 [[D Pekka] [ei (TP):1]]]
				Remaining items in memory buffer: []
				[D Pekka]" has no thematic role
				An EPP-head "(V)" lacks specifier D that it requires.
				Extraposition will be tried on [[T [nukku <malla virtaa>]]:1 [[D Pekka] [ei (TP):1]]].
			= [[T [nukku <malla virtaa>]] [[D Pekka] [ei [T [nukku <malla virtaa>]]]]]
		Checking LF-interface conditions.
				[D Pekka]" has no thematic role
				An EPP-head "(V)" lacks specifier D that it requires.
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG', 'null']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

T: [T]
nukku: [V, T]
malla: [ADV, V, T]
virtaa: [V, ADV, V, T]
D: [D]
Pekka: [N, D]
ei: [Neg/fin]
(T): [T, Neg/fin]
(V): [V, T, Neg/fin]
(ADV): [ADV, V, T, Neg/fin]
(V): [V, ADV, V, T, Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 62
['nukkunut#foc', 'virtaamalla', 'Pekka', 'ei']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'nukkunut']
			=C

2.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		C + T
			Filtering out impossible merge sites...
			Sink "T" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T]
			=C{T}

3.

		Consume "nukku"

		C{T} + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into C{T} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T}*nukku]
			=C{T,V}

4.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		C{T,V} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T,V} malla]
			C{T,V} cannot be opened.
			=[C{T,V} malla]

5.

		Consume "virtaa"

		[C{T,V} malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[C{T,V} malla{V}]

6.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[C{T,V} malla{V}]

7.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[C{T,V} malla{V}] + D
			Filtering out impossible merge sites...
				Reject [[C [T [nukku <malla virtaa>]]] D] due to bad left branch.
		Exploring solution number (1) =[malla{V} D]
			malla was opened.
			=[C{T,V} [[malla virtaa] D]]

8.

		Consume "Pekka"

		[C{T,V} [[malla virtaa] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T,V} [[malla virtaa] D{N}]]

9.

		Consume "ei"

		[C{T,V} [[malla virtaa] D{N}]] + ei
			Filtering out impossible merge sites...
				Reject [[C [<D Pekka> [T [<D Pekka> [nukku [[malla virtaa] <D Pekka>]]]]]] ei] due to bad left branch.
				Reject [[[ADV V] D] ei] as Spec because it breaks words.
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[C{T,V} [[malla virtaa] [[D Pekka] ei]]]

10.
	>>>	Trying candidate parse [C{T,V} [[malla virtaa] [[D Pekka] ei]]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{T,V} [[malla virtaa] [[D Pekka] ei]]].
				Extracted head "T{V}" and reconstructed it = [C [[malla virtaa] [[D Pekka] [ei T{V}]]]]
				Extracted head "nukku" from T and created [C [[malla virtaa] [[D Pekka] [ei [T nukku]]]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[malla virtaa] [[D Pekka] [ei [T nukku]]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [C [<malla virtaa>:1 [[D Pekka] [ei [T [nukku <ADVP>:1]]]]]]
				[D Pekka] is in an EPP SPEC position.
				Start reconstruction at [ei [T [nukku <ADVP>:1]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<malla virtaa>:1 [<D Pekka>:2 [ei [<DP>:2 [T [nukku <ADVP>:1]]]]]]]
				= [C [<malla virtaa> [<D Pekka> [ei [<D Pekka> [T [nukku <malla virtaa>]]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at ei but its category is unknown!
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:2 from memory buffer into Spec of nukku
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [C [<malla virtaa>:1 [? [<D Pekka>:2 [ei [<DP>:2 [T [<DP>:2 [nukku <ADVP>:1]]]]]]]]].
			= [C [<malla virtaa> [? [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

C: [C/fin]
malla: [ADV, C/fin]
virtaa: [V, ADV, C/fin]
?: [?, C/fin]
D: [D, ?, C/fin]
Pekka: [N, D, ?, C/fin]
ei: [Neg/fin, ?, C/fin]
(D): [D, Neg/fin, ?, C/fin]
(N): [N, D, Neg/fin, ?, C/fin]
T: [T, Neg/fin, ?, C/fin]
(D): [D, T, Neg/fin, ?, C/fin]
(N): [N, D, T, Neg/fin, ?, C/fin]
nukku: [V, T, Neg/fin, ?, C/fin]
(ADV): [ADV, V, T, Neg/fin, ?, C/fin]
(V): [V, ADV, V, T, Neg/fin, ?, C/fin]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut#foc".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 63
['nukkunut', 'virtaamalla', 'ei', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$T', 'nukku-']
			=T

2.

		Consume "nukku"

		T + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=T{V}

3.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		T{V} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T{V} malla]
			T{V} cannot be opened.
			=[T{V} malla]

4.

		Consume "virtaa"

		[T{V} malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[T{V} malla{V}]

5.

		Consume "ei"

		[T{V} malla{V}] + ei
			Filtering out impossible merge sites...
				Reject [[T [nukku <malla virtaa>]] ei] due to bad left branch.
		Exploring solution number (1) =[malla{V} ei]
			malla was opened.
			=[T{V} [[malla virtaa] ei]]

6.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[T{V} [[malla virtaa] ei]]

7.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[T{V} [[malla virtaa] ei]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TP as SPEC for D due to unselective SPEC feature.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Avoid [T [nukku [[malla virtaa] ei]]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				ei (ei) is missing a mandatory complement T
				Avoid [[malla virtaa] ei] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
ei {'D'}{'T'}
[(-198, [T [[ADV V] Neg/fin]]), (-196, [[ADV V] Neg/fin]), (-97, Neg/fin)]
		Ranking completed:
			1. [ei; D]
			2. [[[malla virtaa] ei]; D]
			3. [[T{V} [[malla virtaa] ei]]; D]
		Exploring solution number (1) =[ei D]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[T{V} [[malla virtaa] [ei D]]]

8.

		Consume "Pekka"

		[T{V} [[malla virtaa] [ei D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T{V} [[malla virtaa] [ei D{N}]]]

9.
	>>>	Trying candidate parse [T{V} [[malla virtaa] [ei D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [T{V} [[malla virtaa] [ei D{N}]]].
				Extracted head "nukku" and reconstructed it = [T [nukku [[malla virtaa] [ei D{N}]]]]
				Extracted head "Pekka" from D and created [T [nukku [[malla virtaa] [ei [D Pekka]]]]]
			Dropping floaters...
				[malla virtaa] is in an EPP SPEC position.
				Start reconstruction at [ei [D Pekka]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [T [nukku [<malla virtaa>:1 [ei [[D Pekka] <ADVP>:1]]]]]
				= [T [nukku [<malla virtaa> [ei [[D Pekka] <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [T [nukku [<malla virtaa>:1 [ei [[D Pekka] <ADVP>:1]]]]].
			= [T [nukku [<malla virtaa> [ei [[D Pekka] <malla virtaa>]]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

T: [T]
nukku: [V, T]
malla: [ADV, V, T]
virtaa: [V, ADV, V, T]
ei: [Neg/fin, V, T]
D: [D, Neg/fin, V, T]
Pekka: [N, D, Neg/fin, V, T]
(ADV): [ADV, Neg/fin, V, T]
(V): [V, ADV, Neg/fin, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[malla virtaa] ei] D]
			Reconstructing head movement for [[malla virtaa] ei].
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at ei
				= [[malla virtaa] ei]
			Dropping A-/A-bar movement.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [[malla virtaa] ei].
			=[T{V} [[[malla virtaa] ei] D]]

10.

		Consume "Pekka"

		[T{V} [[[malla virtaa] ei] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T{V} [[[malla virtaa] ei] D{N}]]

11.
	>>>	Trying candidate parse [T{V} [[[malla virtaa] ei] D{N}]] (2.)
		Reconstructing...
			Reconstructing head movement for [T{V} [[[malla virtaa] ei] D{N}]].
				Extracted head "nukku" and reconstructed it = [T [nukku [[[malla virtaa] ei] D{N}]]]
				Extracted head "Pekka" from D and created [T [nukku [[[malla virtaa] ei] [D Pekka]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at <D Pekka>
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at <D Pekka>
				[malla virtaa] is in an EPP SPEC position.
				Start reconstruction at ei
				= [T [nukku [[[malla virtaa] ei] <D Pekka>]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				D failed internal tail test.
				Extraposition will be tried on [T [nukku [[[malla virtaa] ei] <D Pekka>]]].
			= [T [nukku [[[malla virtaa] ei] <D Pekka>]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				D failed internal tail test.
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T: [T]
nukku: [V, T]
malla: [ADV, V, T]
virtaa: [V, ADV, V, T]
ei: [Neg/fin, V, T]
D: [D, V, T]
Pekka: [N, D, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[T{V} [[malla virtaa] ei]] D]
			Reconstructing head movement for [T{V} [[malla virtaa] ei]].
				Extracted head "nukku" and reconstructed it = [T [nukku [[malla virtaa] ei]]]
			Dropping floaters...
				[malla virtaa] is in an EPP SPEC position.
				Start reconstruction at ei
				= [T [nukku [[malla virtaa] ei]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [T [nukku [[malla virtaa] ei]]].
			=[[T [nukku [[malla virtaa] ei]]] D]

12.

		Consume "Pekka"

		[[T [nukku [[malla virtaa] ei]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[T [nukku [[malla virtaa] ei]]] D{N}]

13.
	>>>	Trying candidate parse [[T [nukku [[malla virtaa] ei]]] D{N}] (3.)
		Reconstructing...
			Reconstructing head movement for [[T [nukku [[malla virtaa] ei]]] D{N}].
				Extracted head "Pekka" from D and created [[T [nukku [[malla virtaa] ei]]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at <D Pekka>
				[malla virtaa] is in an EPP SPEC position.
				Start reconstruction at ei
				= [[T [nukku [[malla virtaa] ei]]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [[T [nukku [[malla virtaa] ei]]] <D Pekka>].
			= [[T [nukku [[malla virtaa] ei]]] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T: [T]
nukku: [V, T]
malla: [ADV, V, T]
virtaa: [V, ADV, V, T]
ei: [Neg/fin, V, T]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 64
['nukkunut#foc', 'virtaamalla', 'ei', 'Pekka']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'nukkunut']
			=C

2.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		C + T
			Filtering out impossible merge sites...
			Sink "T" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T]
			=C{T}

3.

		Consume "nukku"

		C{T} + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into C{T} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T}*nukku]
			=C{T,V}

4.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		C{T,V} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T,V} malla]
			C{T,V} cannot be opened.
			=[C{T,V} malla]

5.

		Consume "virtaa"

		[C{T,V} malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[C{T,V} malla{V}]

6.

		Consume "ei"

		[C{T,V} malla{V}] + ei
			Filtering out impossible merge sites...
				Reject [[C [T [nukku <malla virtaa>]]] ei] due to bad left branch.
		Exploring solution number (1) =[malla{V} ei]
			malla was opened.
			=[C{T,V} [[malla virtaa] ei]]

7.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[C{T,V} [[malla virtaa] ei]]

8.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[C{T,V} [[malla virtaa] ei]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [C [<malla virtaa> [ei [T [nukku <malla virtaa>]]]]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				Avoid [[[malla virtaa] ei], D] because the operation breaks up an existing selectional dependency.
				ei (ei) is missing a mandatory complement T
				Avoid [[malla virtaa] ei] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
ei {'D'}{'T'}
[(-294, [[ADV V] Neg/fin]), (-198, [C/fin [[ADV V] Neg/fin]]), (-97, Neg/fin)]
		Ranking completed:
			1. [ei; D]
			2. [[C{T,V} [[malla virtaa] ei]]; D]
			3. [[[malla virtaa] ei]; D]
		Exploring solution number (1) =[ei D]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[C{T,V} [[malla virtaa] [ei D]]]

9.

		Consume "Pekka"

		[C{T,V} [[malla virtaa] [ei D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T,V} [[malla virtaa] [ei D{N}]]]

10.
	>>>	Trying candidate parse [C{T,V} [[malla virtaa] [ei D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{T,V} [[malla virtaa] [ei D{N}]]].
				Extracted head "T{V}" and reconstructed it = [C [[malla virtaa] [ei [T{V} D{N}]]]]
				Extracted head "nukku" and reconstructed it = [C [[malla virtaa] [ei [T [nukku D{N}]]]]]
				Extracted head "Pekka" from D and created [C [[malla virtaa] [ei [T [nukku [D Pekka]]]]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[malla virtaa] [ei [T [nukku [D Pekka]]]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [C [<malla virtaa>:1 [ei [T [nukku [[D Pekka] <ADVP>:1]]]]]]
				D failed to tail.
				[D Pekka] cannot be made an adjunct because its sister is an adjunct.
				Start reconstruction at [T [nukku [[D Pekka] <ADVP>:1]]]
				[D Pekka] cannot be made an adjunct because its sister is an adjunct.
				Floater [D Pekka] dropped: [C [<malla virtaa>:1 [ei [(DP):2 [T [nukku [[D Pekka]:2 <ADVP>:1]]]]]]]
				= [C [<malla virtaa> [ei [[D Pekka] [T [nukku [[D Pekka] <malla virtaa>]]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent (DP):2 from memory buffer into Spec of nukku
			= [C [<malla virtaa> [ei [[D Pekka] [T [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<malla virtaa>:1 [ei [(DP):2 [T [(DP):2 [nukku [[D Pekka]:2 <ADVP>:1]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 10/111 operations) <------------------------------------
		Solution:
		[C [<malla virtaa> [ei [[D Pekka] [T [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]]]]]
		Grammar: [C [<malla virtaa>:1 [ei [(DP):2 [T [(DP):2 [nukku [[D Pekka]:2 <ADVP>:1]]]]]]]]
		Spellout C/finP = [C/fin [ADVP:1 [Neg/fin [__:2 [T [__:2 [V [[D N]:2 __:1]]]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

C: [C/fin]
malla: [ADV, C/fin]
virtaa: [V, ADV, C/fin]
ei: [Neg/fin, C/fin]
(D): [D, Neg/fin, C/fin]
(N): [N, D, Neg/fin, C/fin]
T: [T, Neg/fin, C/fin]
(D): [D, T, Neg/fin, C/fin]
(N): [N, D, T, Neg/fin, C/fin]
nukku: [V, T, Neg/fin, C/fin]
D: [D, V, T, Neg/fin, C/fin]
Pekka: [N, D, V, T, Neg/fin, C/fin]
(ADV): [ADV, V, T, Neg/fin, C/fin]
(V): [V, ADV, V, T, Neg/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 65
['virtaamalla', 'Pekka', 'ei', 'nukkunut']


			=None

1.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']
			=malla

2.

		Consume "virtaa"

		malla + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=malla{V}

3.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=malla{V}

4.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		malla{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[malla{V} D]
			malla was opened.
			=[[malla virtaa] D]

5.

		Consume "Pekka"

		[[malla virtaa] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[malla virtaa] D{N}]

6.

		Consume "ei"

		[[malla virtaa] D{N}] + ei
			Filtering out impossible merge sites...
			Ranking remaining sites...
D{N} {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}{'N', '*'}
Pekka {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}{'R', 'uR', 'R/D'}
[(0, [[ADV V] D]), (0, D)]
		Ranking completed:
			1. [D{N}; ei]
			2. [[[malla virtaa] D{N}]; ei]
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[malla virtaa] [[D Pekka] ei]]

7.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[malla virtaa] [[D Pekka] ei]] + T
			Filtering out impossible merge sites...
				Reject [[[malla virtaa] [[D Pekka] ei]] T] due to bad left branch.
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[malla virtaa] [[D Pekka] [ei T]]]

8.

		Consume "nukku"

		[[malla virtaa] [[D Pekka] [ei T]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[malla virtaa] [[D Pekka] [ei T{V}]]]

9.
	>>>	Trying candidate parse [[malla virtaa] [[D Pekka] [ei T{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[malla virtaa] [[D Pekka] [ei T{V}]]].
				Extracted head "nukku" from T and created [[malla virtaa] [[D Pekka] [ei [T nukku]]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[D Pekka] [ei [T nukku]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<malla virtaa>:1 [[D Pekka] [ei [T [nukku <ADVP>:1]]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [ei [T [nukku <ADVP>:1]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<malla virtaa>:1 [<D Pekka>:2 [ei [<DP>:2 [T [nukku <ADVP>:1]]]]]]
				= [<malla virtaa> [<D Pekka> [ei [<D Pekka> [T [nukku <malla virtaa>]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at ei but its category is unknown!
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:2 from memory buffer into Spec of nukku
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<malla virtaa>:1 [? [<D Pekka>:2 [ei [<DP>:2 [T [<DP>:2 [nukku <ADVP>:1]]]]]]]].
			= [<malla virtaa> [? [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla: [ADV]
virtaa: [V, ADV]
?: [?]
D: [D, ?]
Pekka: [N, D, ?]
ei: [Neg/fin, ?]
(D): [D, Neg/fin, ?]
(N): [N, D, Neg/fin, ?]
T: [T, Neg/fin, ?]
(D): [D, T, Neg/fin, ?]
(N): [N, D, T, Neg/fin, ?]
nukku: [V, T, Neg/fin, ?]
(ADV): [ADV, V, T, Neg/fin, ?]
(V): [V, ADV, V, T, Neg/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[malla virtaa] D{N}] ei]
			Reconstructing head movement for [[malla virtaa] D{N}].
				Extracted head "Pekka" from D and created [[malla virtaa] [D Pekka]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [D Pekka]
				= [[malla virtaa] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "malla virtaa " into memory buffer from SPEC of "D".
				Memory buffer: [[ADV V]]
				D (D) has a specifier [malla virtaa] but is marked for -EPP behavior.
				Extraposition will be tried on [[malla virtaa] [D Pekka]].
				<D Pekka> was made adjunct by an extraposition rule.
			=[[[malla virtaa] <D Pekka>] ei]

10.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[[malla virtaa] <D Pekka>] ei] + T
			Filtering out impossible merge sites...
				Reject [[[[malla virtaa] <D Pekka>] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[[malla virtaa] <D Pekka>] [ei T]]

11.

		Consume "nukku"

		[[[malla virtaa] <D Pekka>] [ei T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[[malla virtaa] <D Pekka>] [ei T{V}]]

12.
	>>>	Trying candidate parse [[[malla virtaa] <D Pekka>] [ei T{V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [[[malla virtaa] <D Pekka>] [ei T{V}]].
				Extracted head "nukku" from T and created [[[malla virtaa] <D Pekka>] [ei [T nukku]]]
			Dropping floaters...
				[[malla virtaa] <D Pekka>] failed to tail [CAT:V]
				Start reconstruction at [ei [T nukku]]
				<[malla virtaa] <D Pekka>> was made an adjunct.
				Floater <[malla virtaa] <D Pekka>> dropped: [<[malla virtaa] <D Pekka>>:1 [ei [T [nukku <ADVP>:1]]]]
				= [<[malla virtaa] <D Pekka>> [ei [T [nukku <[malla virtaa] <D Pekka>>]]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [<[malla virtaa] <D Pekka>>:1 [ei [T [nukku <ADVP>:1]]]].
			= [<[malla virtaa] <D Pekka>> [ei [T [nukku <[malla virtaa] <D Pekka>>]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				(D) failed internal tail test.
			LF-interface condition(s) violated
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']

malla: [ADV]
virtaa: [V, ADV]
D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [T, Neg/fin]
nukku: [V, T, Neg/fin]
(ADV): [ADV, V, T, Neg/fin]
(V): [V, ADV, V, T, Neg/fin]
(D): [D, V, T, Neg/fin]
(N): [N, D, V, T, Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 66
['virtaamalla#foc', 'Pekka', 'ei', 'nukkunut']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'virtaamalla']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "virtaamalla"

			=None

2.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Adding inflectional features {'ABAR:FOC', 'LANG:FI', '-'} to malla
		= ['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
			=malla

3.

		Consume "virtaa"

		malla + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=malla{V}

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=malla{V}

5.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		malla{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[malla{V} D]
			malla was opened.
			=[[malla virtaa] D]

6.

		Consume "Pekka"

		[[malla virtaa] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[malla virtaa] D{N}]

7.

		Consume "ei"

		[[malla virtaa] D{N}] + ei
			Filtering out impossible merge sites...
			Ranking remaining sites...
D{N} {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}{'N', '*'}
Pekka {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}{'R', 'uR', 'R/D'}
[(0, [[ADV V] D]), (0, D)]
		Ranking completed:
			1. [D{N}; ei]
			2. [[[malla virtaa] D{N}]; ei]
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[malla virtaa] [[D Pekka] ei]]

8.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[malla virtaa] [[D Pekka] ei]] + T
			Filtering out impossible merge sites...
				Reject [[[malla virtaa] [[D Pekka] ei]] T] due to bad left branch.
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[malla virtaa] [[D Pekka] [ei T]]]

9.

		Consume "nukku"

		[[malla virtaa] [[D Pekka] [ei T]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[malla virtaa] [[D Pekka] [ei T{V}]]]

10.
	>>>	Trying candidate parse [[malla virtaa] [[D Pekka] [ei T{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[malla virtaa] [[D Pekka] [ei T{V}]]].
				Extracted head "nukku" from T and created [[malla virtaa] [[D Pekka] [ei [T nukku]]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[D Pekka] [ei [T nukku]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<malla virtaa>:1 [[D Pekka] [ei [T [nukku <ADVP>:1]]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [ei [T [nukku <ADVP>:1]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<malla virtaa>:1 [<D Pekka>:2 [ei [<DP>:2 [T [nukku <ADVP>:1]]]]]]
				= [<malla virtaa> [<D Pekka> [ei [<D Pekka> [T [nukku <malla virtaa>]]]]]]
			Dropping A-/A-bar movement.
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at ei
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:2 from memory buffer into Spec of nukku
			= [<malla virtaa> [uFOC [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<malla virtaa>:1 [uFOC [<D Pekka>:2 [ei [<DP>:2 [T [<DP>:2 [nukku <ADVP>:1]]]]]]]] into LF...
				(ADV)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 10/101 operations) <------------------------------------
		Solution:
		[<malla virtaa> [uFOC [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]]]]]
		Grammar: [<malla virtaa>:1 [uFOC [<D Pekka>:2 [ei [<DP>:2 [T [<DP>:2 [nukku <ADVP>:1]]]]]]]]
		Spellout P = [ADVP:1 [ [DP:2 [Neg/fin [__:2 [T [__:2 [V __:1]]]]]]]]
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla: [ADV]
virtaa: [V, ADV]
uFOC: []
D: [D, ]
Pekka: [N, D, ]
ei: [Neg/fin, ]
(D): [D, Neg/fin, ]
(N): [N, D, Neg/fin, ]
T: [T, Neg/fin, ]
(D): [D, T, Neg/fin, ]
(N): [N, D, T, Neg/fin, ]
nukku: [V, T, Neg/fin, ]
(ADV): [ADV, V, T, Neg/fin, ]
(V): [V, ADV, V, T, Neg/fin, ]

			Checking if the sentence is ambiguous...


\========================================================================
# 67
['virtaamalla', 'Pekka', 'nukkunut', 'ei']


			=None

1.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']
			=malla

2.

		Consume "virtaa"

		malla + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=malla{V}

3.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=malla{V}

4.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		malla{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[malla{V} D]
			malla was opened.
			=[[malla virtaa] D]

5.

		Consume "Pekka"

		[[malla virtaa] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[malla virtaa] D{N}]

6.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[malla virtaa] D{N}] + T
			Filtering out impossible merge sites...
			Ranking remaining sites...
D{N} {'T'}{'N', '*'}
Pekka {'T'}{'R', 'uR', 'R/D'}
[(0, [[ADV V] D]), (0, D)]
		Ranking completed:
			1. [D{N}; T]
			2. [[[malla virtaa] D{N}]; T]
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[malla virtaa] [[D Pekka] T]]

7.

		Consume "nukku"

		[[malla virtaa] [[D Pekka] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[malla virtaa] [[D Pekka] T{V}]]

8.

		Consume "ei"

		[[malla virtaa] [[D Pekka] T{V}]] + ei
			Filtering out impossible merge sites...
				Reject [[<malla virtaa> [? [[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]]]] ei] due to bad left branch.
				Reject [[[D Pekka] [T nukku]] ei] due to bad left branch.
		Exploring solution number (1) =[T{V} ei]
			T{V} cannot be opened.
			=[[malla virtaa] [[D Pekka] [T{V} ei]]]

9.
	>>>	Trying candidate parse [[malla virtaa] [[D Pekka] [T{V} ei]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[malla virtaa] [[D Pekka] [T{V} ei]]].
				Extracted head "nukku" and reconstructed it = [[malla virtaa] [[D Pekka] [T [nukku ei]]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[D Pekka] [T [nukku ei]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<malla virtaa>:1 [[D Pekka] [T [nukku [ei <ADVP>:1]]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [[D Pekka] [T [nukku [ei <ADVP>:1]]]]
				= [<malla virtaa> [[D Pekka] [T [nukku [ei <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				New head was spawned due to multiple specifiers at T but its category is unknown!
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of ei
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [<malla virtaa>:1 [? [[D Pekka]:2 [T [nukku [(DP):2 [ei <ADVP>:1]]]]]]].
			= [<malla virtaa> [? [[D Pekka] [T [nukku [[D Pekka] [ei <malla virtaa>]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla: [ADV]
virtaa: [V, ADV]
?: [?]
D: [D, ?]
Pekka: [N, D, ?]
T: [T, ?]
nukku: [V, T, ?]
(D): [D, V, T, ?]
(N): [N, D, V, T, ?]
ei: [Neg/fin, V, T, ?]
(ADV): [ADV, Neg/fin, V, T, ?]
(V): [V, ADV, Neg/fin, V, T, ?]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[malla virtaa] D{N}] T]
			Reconstructing head movement for [[malla virtaa] D{N}].
				Extracted head "Pekka" from D and created [[malla virtaa] [D Pekka]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [D Pekka]
				= [[malla virtaa] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "malla virtaa " into memory buffer from SPEC of "D".
				Memory buffer: [[ADV V]]
				D (D) has a specifier [malla virtaa] but is marked for -EPP behavior.
				Extraposition will be tried on [[malla virtaa] [D Pekka]].
				<D Pekka> was made adjunct by an extraposition rule.
			=[[[malla virtaa] <D Pekka>] T]

10.

		Consume "nukku"

		[[[malla virtaa] <D Pekka>] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[[malla virtaa] <D Pekka>] T{V}]

11.

		Consume "ei"

		[[[malla virtaa] <D Pekka>] T{V}] + ei
			Filtering out impossible merge sites...
				Reject [[<[malla virtaa] <D Pekka>> [T [nukku <[malla virtaa] <D Pekka>>]]] ei] due to bad left branch.
		Exploring solution number (1) =[T{V} ei]
			T{V} cannot be opened.
			=[[[malla virtaa] <D Pekka>] [T{V} ei]]

12.
	>>>	Trying candidate parse [[[malla virtaa] <D Pekka>] [T{V} ei]] (2.)
		Reconstructing...
			Reconstructing head movement for [[[malla virtaa] <D Pekka>] [T{V} ei]].
				Extracted head "nukku" and reconstructed it = [[[malla virtaa] <D Pekka>] [T [nukku ei]]]
			Dropping floaters...
				[[malla virtaa] <D Pekka>] failed to tail [CAT:V]
				Start reconstruction at [T [nukku ei]]
				<[malla virtaa] <D Pekka>> was made an adjunct.
				Floater <[malla virtaa] <D Pekka>> dropped: [<[malla virtaa] <D Pekka>>:1 [T [nukku [ei <ADVP>:1]]]]
				= [<[malla virtaa] <D Pekka>> [T [nukku [ei <[malla virtaa] <D Pekka>>]]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [<[malla virtaa] <D Pekka>>:1 [T [nukku [ei <ADVP>:1]]]].
			= [<[malla virtaa] <D Pekka>> [T [nukku [ei <[malla virtaa] <D Pekka>>]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']

malla: [ADV]
virtaa: [V, ADV]
D: [D]
Pekka: [N, D]
T: [T]
nukku: [V, T]
ei: [Neg/fin, V, T]
(ADV): [ADV, Neg/fin, V, T]
(V): [V, ADV, Neg/fin, V, T]
(D): [D, Neg/fin, V, T]
(N): [N, D, Neg/fin, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 68
['virtaamalla#foc', 'Pekka', 'nukkunut', 'ei']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'virtaamalla']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "virtaamalla"

			=None

2.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Adding inflectional features {'ABAR:FOC', 'LANG:FI', '-'} to malla
		= ['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
			=malla

3.

		Consume "virtaa"

		malla + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=malla{V}

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=malla{V}

5.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		malla{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[malla{V} D]
			malla was opened.
			=[[malla virtaa] D]

6.

		Consume "Pekka"

		[[malla virtaa] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[malla virtaa] D{N}]

7.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[malla virtaa] D{N}] + T
			Filtering out impossible merge sites...
			Ranking remaining sites...
D{N} {'T'}{'N', '*'}
Pekka {'T'}{'R', 'uR', 'R/D'}
[(0, [[ADV V] D]), (0, D)]
		Ranking completed:
			1. [D{N}; T]
			2. [[[malla virtaa] D{N}]; T]
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[malla virtaa] [[D Pekka] T]]

8.

		Consume "nukku"

		[[malla virtaa] [[D Pekka] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[malla virtaa] [[D Pekka] T{V}]]

9.

		Consume "ei"

		[[malla virtaa] [[D Pekka] T{V}]] + ei
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [T nukku]] ei] due to bad left branch.
			Ranking remaining sites...
T{V} {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}{'D', 'v', '*', 'V'}
nukku {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}{'P'}
[(0, [[ADV V] [[D N] T]]), (0, T)]
		Ranking completed:
			1. [T{V}; ei]
			2. [[[malla virtaa] [[D Pekka] T{V}]]; ei]
		Exploring solution number (1) =[T{V} ei]
			T{V} cannot be opened.
			=[[malla virtaa] [[D Pekka] [T{V} ei]]]

10.
	>>>	Trying candidate parse [[malla virtaa] [[D Pekka] [T{V} ei]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[malla virtaa] [[D Pekka] [T{V} ei]]].
				Extracted head "nukku" and reconstructed it = [[malla virtaa] [[D Pekka] [T [nukku ei]]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[D Pekka] [T [nukku ei]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<malla virtaa>:1 [[D Pekka] [T [nukku [ei <ADVP>:1]]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [[D Pekka] [T [nukku [ei <ADVP>:1]]]]
				= [<malla virtaa> [[D Pekka] [T [nukku [ei <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of ei
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [<malla virtaa>:1 [uFOC [[D Pekka]:2 [T [nukku [(DP):2 [ei <ADVP>:1]]]]]]].
			= [<malla virtaa> [uFOC [[D Pekka] [T [nukku [[D Pekka] [ei <malla virtaa>]]]]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla: [ADV]
virtaa: [V, ADV]
uFOC: []
D: [D, ]
Pekka: [N, D, ]
T: [T, ]
nukku: [V, T, ]
(D): [D, V, T, ]
(N): [N, D, V, T, ]
ei: [Neg/fin, V, T, ]
(ADV): [ADV, Neg/fin, V, T, ]
(V): [V, ADV, Neg/fin, V, T, ]


		Trying to find other solutions...
		Exploring solution number (2) =[[[malla virtaa] [[D Pekka] T{V}]] ei]
			Reconstructing head movement for [[malla virtaa] [[D Pekka] T{V}]].
				Extracted head "nukku" from T and created [[malla virtaa] [[D Pekka] [T nukku]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[D Pekka] [T nukku]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<malla virtaa>:1 [[D Pekka] [T [nukku <ADVP>:1]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [[D Pekka] [T [nukku <ADVP>:1]]]
				= [<malla virtaa> [[D Pekka] [T [nukku <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of nukku
			=[[<malla virtaa>:1 [uFOC [[D Pekka]:2 [T [(DP):2 [nukku <ADVP>:1]]]]]] ei]

11.
	>>>	Trying candidate parse [[<malla virtaa> [uFOC [[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]]]] ei] (2.)
		Reconstructing...
			Reconstructing head movement for [[<malla virtaa>:1 [uFOC [[D Pekka]:2 [T [(DP):2 [nukku <ADVP>:1]]]]]] ei].
			Dropping floaters...
				= [[<malla virtaa> [uFOC [[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]]]] ei]
			Dropping A-/A-bar movement.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [[<malla virtaa>:1 [uFOC [[D Pekka]:2 [T [(DP):2 [nukku <ADVP>:1]]]]]] ei].
			= [[<malla virtaa> [uFOC [[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]]]] ei]
		Checking LF-interface conditions.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']

malla: [ADV]
virtaa: [V, ADV]
uFOC: []
D: [D, ]
Pekka: [N, D, ]
T: [T, ]
(D): [D, T, ]
(N): [N, D, T, ]
nukku: [V, T, ]
(ADV): [ADV, V, T, ]
(V): [V, ADV, V, T, ]
ei: [Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[malla virtaa] D{N}] T]
			Reconstructing head movement for [[malla virtaa] D{N}].
				Extracted head "Pekka" from D and created [[malla virtaa] [D Pekka]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [D Pekka]
				= [[malla virtaa] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "malla virtaa " into memory buffer from SPEC of "D".
				Criterial features {'FOC'} copied to {'D'}
				Tail features [A/HEAD][CAT:FIN] were detected at D, this must head an adjunct floater.
				<D Pekka> was made an adjunct.
				Memory buffer: [[ADV V]]
			=[[[malla virtaa] <D Pekka>] T]

12.

		Consume "nukku"

		[[[malla virtaa] <D Pekka>] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[[malla virtaa] <D Pekka>] T{V}]

13.

		Consume "ei"

		[[[malla virtaa] <D Pekka>] T{V}] + ei
			Filtering out impossible merge sites...
				Reject [[<[malla virtaa] <D Pekka>> [T [nukku <[malla virtaa] <D Pekka>>]]] ei] due to bad left branch.
		Exploring solution number (1) =[T{V} ei]
			T{V} cannot be opened.
			=[[[malla virtaa] <D Pekka>] [T{V} ei]]

14.
	>>>	Trying candidate parse [[[malla virtaa] <D Pekka>] [T{V} ei]] (3.)
		Reconstructing...
			Reconstructing head movement for [[[malla virtaa] <D Pekka>] [T{V} ei]].
				Extracted head "nukku" and reconstructed it = [[[malla virtaa] <D Pekka>] [T [nukku ei]]]
			Dropping floaters...
				[[malla virtaa] <D Pekka>] failed to tail [CAT:V]
				Start reconstruction at [T [nukku ei]]
				<[malla virtaa] <D Pekka>> was made an adjunct.
				Floater <[malla virtaa] <D Pekka>> dropped: [<[malla virtaa] <D Pekka>>:1 [T [nukku [ei <ADVP>:1]]]]
				= [<[malla virtaa] <D Pekka>> [T [nukku [ei <[malla virtaa] <D Pekka>>]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'T'}
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [<[malla virtaa] <D Pekka>>:1 [T [nukku [ei <ADVP>:1]]]].
			= [<[malla virtaa] <D Pekka>> [T [nukku [ei <[malla virtaa] <D Pekka>>]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']

malla: [ADV]
virtaa: [V, ADV]
D: [D]
Pekka: [N, D]
T: [T]
nukku: [V, T]
ei: [Neg/fin, V, T]
(ADV): [ADV, Neg/fin, V, T]
(V): [V, ADV, Neg/fin, V, T]
(D): [D, Neg/fin, V, T]
(N): [N, D, Neg/fin, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla#foc".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 69
['virtaamalla', 'ei', 'Pekka', 'nukkunut']


			=None

1.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']
			=malla

2.

		Consume "virtaa"

		malla + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=malla{V}

3.

		Consume "ei"

		malla{V} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[malla{V} ei]
			malla was opened.
			=[[malla virtaa] ei]

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[malla virtaa] ei]

5.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[malla virtaa] ei] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				ei (ei) is missing a mandatory complement T
				Avoid [[malla virtaa] ei] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
ei {'D'}{'T'}
[(-198, [[ADV V] Neg/fin]), (-98, Neg/fin)]
		Ranking completed:
			1. [ei; D]
			2. [[[malla virtaa] ei]; D]
		Exploring solution number (1) =[ei D]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[malla virtaa] [ei D]]

6.

		Consume "Pekka"

		[[malla virtaa] [ei D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[malla virtaa] [ei D{N}]]

7.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[malla virtaa] [ei D{N}]] + T
			Filtering out impossible merge sites...
				Reject [[[malla virtaa] [ei [D Pekka]]] T] due to bad left branch.
				Reject [[ei [D Pekka]] T] due to bad left branch.
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[malla virtaa] [ei [[D Pekka] T]]]

8.

		Consume "nukku"

		[[malla virtaa] [ei [[D Pekka] T]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[malla virtaa] [ei [[D Pekka] T{V}]]]

9.
	>>>	Trying candidate parse [[malla virtaa] [ei [[D Pekka] T{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[malla virtaa] [ei [[D Pekka] T{V}]]].
				Extracted head "nukku" from T and created [[malla virtaa] [ei [[D Pekka] [T nukku]]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [ei [[D Pekka] [T nukku]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<malla virtaa>:1 [ei [[D Pekka] [T [nukku <ADVP>:1]]]]]
				= [<malla virtaa> [ei [[D Pekka] [T [nukku <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of nukku
			= [<malla virtaa> [ei [[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<malla virtaa>:1 [ei [[D Pekka]:2 [T [(DP):2 [nukku <ADVP>:1]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 9/91 operations) <------------------------------------
		Solution:
		[<malla virtaa> [ei [[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]]]]
		Grammar: [<malla virtaa>:1 [ei [[D Pekka]:2 [T [(DP):2 [nukku <ADVP>:1]]]]]]
		Spellout Neg/finP = [ADVP:1 [Neg/fin [DP:2 [T [__:2 [V __:1]]]]]]
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla: [ADV]
virtaa: [V, ADV]
ei: [Neg/fin]
D: [D, Neg/fin]
Pekka: [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
nukku: [V, T, Neg/fin]
(ADV): [ADV, V, T, Neg/fin]
(V): [V, ADV, V, T, Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 70
['virtaamalla#foc', 'ei', 'Pekka', 'nukkunut']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'virtaamalla']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "virtaamalla"

			=None

2.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Adding inflectional features {'ABAR:FOC', 'LANG:FI', '-'} to malla
		= ['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
			=malla

3.

		Consume "virtaa"

		malla + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=malla{V}

4.

		Consume "ei"

		malla{V} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[malla{V} ei]
			malla was opened.
			=[[malla virtaa] ei]

5.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[malla virtaa] ei]

6.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[malla virtaa] ei] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				ei (ei) is missing a mandatory complement T
				Avoid [[malla virtaa] ei] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
ei {'D'}{'T'}
[(-198, [[ADV V] Neg/fin]), (-98, Neg/fin)]
		Ranking completed:
			1. [ei; D]
			2. [[[malla virtaa] ei]; D]
		Exploring solution number (1) =[ei D]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[malla virtaa] [ei D]]

7.

		Consume "Pekka"

		[[malla virtaa] [ei D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[malla virtaa] [ei D{N}]]

8.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[malla virtaa] [ei D{N}]] + T
			Filtering out impossible merge sites...
				Reject [[[malla virtaa] [ei [D Pekka]]] T] due to bad left branch.
				Reject [[ei [D Pekka]] T] due to bad left branch.
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[malla virtaa] [ei [[D Pekka] T]]]

9.

		Consume "nukku"

		[[malla virtaa] [ei [[D Pekka] T]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[malla virtaa] [ei [[D Pekka] T{V}]]]

10.
	>>>	Trying candidate parse [[malla virtaa] [ei [[D Pekka] T{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[malla virtaa] [ei [[D Pekka] T{V}]]].
				Extracted head "nukku" from T and created [[malla virtaa] [ei [[D Pekka] [T nukku]]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [ei [[D Pekka] [T nukku]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<malla virtaa>:1 [ei [[D Pekka] [T [nukku <ADVP>:1]]]]]
				= [<malla virtaa> [ei [[D Pekka] [T [nukku <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of nukku
			= [<malla virtaa> [ei [[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<malla virtaa>:1 [ei [[D Pekka]:2 [T [(DP):2 [nukku <ADVP>:1]]]]]] into LF...
				(ADV)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 10/100 operations) <------------------------------------
		Solution:
		[<malla virtaa> [ei [[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]]]]
		Grammar: [<malla virtaa>:1 [ei [[D Pekka]:2 [T [(DP):2 [nukku <ADVP>:1]]]]]]
		Spellout Neg/finP = [ADVP:1 [Neg/fin [DP:2 [T [__:2 [V __:1]]]]]]
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iFOC/uFOC', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iFOC/uFOC', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla: [ADV]
virtaa: [V, ADV]
ei: [Neg/fin]
D: [D, Neg/fin]
Pekka: [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
nukku: [V, T, Neg/fin]
(ADV): [ADV, V, T, Neg/fin]
(V): [V, ADV, V, T, Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 71
['virtaamalla', 'ei', 'nukkunut', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']
			=malla

2.

		Consume "virtaa"

		malla + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=malla{V}

3.

		Consume "ei"

		malla{V} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[malla{V} ei]
			malla was opened.
			=[[malla virtaa] ei]

4.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[malla virtaa] ei] + T
			Filtering out impossible merge sites...
				Reject [[[malla virtaa] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[malla virtaa] [ei T]]

5.

		Consume "nukku"

		[[malla virtaa] [ei T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[malla virtaa] [ei T{V}]]

6.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[malla virtaa] [ei T{V}]]

7.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[malla virtaa] [ei T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [<malla virtaa> [ei [T [nukku <malla virtaa>]]]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [ei [T nukku]] as left branch because it constitutes illicit structure.
				Avoid TP as SPEC for D due to unselective SPEC feature.
T{V} {'D'}{'D', 'v', '*', 'V'}
				Prioritize [T{V} D] due to complement selection.
nukku {'D'}{'P'}
[(-198, [[ADV V] [Neg/fin T]]), (-196, [Neg/fin T]), (6, T)]
		Ranking completed:
			1. [T{V}; D]
			2. [[ei T{V}]; D]
			3. [[[malla virtaa] [ei T{V}]]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[malla virtaa] [ei [T{V} D]]]

8.

		Consume "Pekka"

		[[malla virtaa] [ei [T{V} D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[malla virtaa] [ei [T{V} D{N}]]]

9.
	>>>	Trying candidate parse [[malla virtaa] [ei [T{V} D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[malla virtaa] [ei [T{V} D{N}]]].
				Extracted head "nukku" and reconstructed it = [[malla virtaa] [ei [T [nukku D{N}]]]]
				Extracted head "Pekka" from D and created [[malla virtaa] [ei [T [nukku [D Pekka]]]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [ei [T [nukku [D Pekka]]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<malla virtaa>:1 [ei [T [nukku [[D Pekka] <ADVP>:1]]]]]
				D failed to tail.
				[D Pekka] cannot be made an adjunct because its sister is an adjunct.
				Start reconstruction at [T [nukku [[D Pekka] <ADVP>:1]]]
				[D Pekka] cannot be made an adjunct because its sister is an adjunct.
				Floater [D Pekka] dropped: [<malla virtaa>:1 [ei [(DP):2 [T [nukku [[D Pekka]:2 <ADVP>:1]]]]]]
				= [<malla virtaa> [ei [[D Pekka] [T [nukku [[D Pekka] <malla virtaa>]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent (DP):2 from memory buffer into Spec of nukku
			= [<malla virtaa> [ei [[D Pekka] [T [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<malla virtaa>:1 [ei [(DP):2 [T [(DP):2 [nukku [[D Pekka]:2 <ADVP>:1]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 9/103 operations) <------------------------------------
		Solution:
		[<malla virtaa> [ei [[D Pekka] [T [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]]]]
		Grammar: [<malla virtaa>:1 [ei [(DP):2 [T [(DP):2 [nukku [[D Pekka]:2 <ADVP>:1]]]]]]]
		Spellout Neg/finP = [ADVP:1 [Neg/fin [__:2 [T [__:2 [V [[D N]:2 __:1]]]]]]]
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla: [ADV]
virtaa: [V, ADV]
ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
nukku: [V, T, Neg/fin]
D: [D, V, T, Neg/fin]
Pekka: [N, D, V, T, Neg/fin]
(ADV): [ADV, V, T, Neg/fin]
(V): [V, ADV, V, T, Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 72
['virtaamalla#foc', 'ei', 'nukkunut', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'virtaamalla']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "virtaamalla"

			=None

2.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Adding inflectional features {'ABAR:FOC', 'LANG:FI', '-'} to malla
		= ['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
			=malla

3.

		Consume "virtaa"

		malla + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=malla{V}

4.

		Consume "ei"

		malla{V} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[malla{V} ei]
			malla was opened.
			=[[malla virtaa] ei]

5.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[malla virtaa] ei] + T
			Filtering out impossible merge sites...
				Reject [[[malla virtaa] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[malla virtaa] [ei T]]

6.

		Consume "nukku"

		[[malla virtaa] [ei T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[malla virtaa] [ei T{V}]]

7.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[malla virtaa] [ei T{V}]]

8.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[malla virtaa] [ei T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [<malla virtaa> [ei [T [nukku <malla virtaa>]]]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [ei [T nukku]] as left branch because it constitutes illicit structure.
				Avoid TP as SPEC for D due to unselective SPEC feature.
T{V} {'D'}{'D', 'v', '*', 'V'}
				Prioritize [T{V} D] due to complement selection.
nukku {'D'}{'P'}
[(-198, [[ADV V] [Neg/fin T]]), (-196, [Neg/fin T]), (6, T)]
		Ranking completed:
			1. [T{V}; D]
			2. [[ei T{V}]; D]
			3. [[[malla virtaa] [ei T{V}]]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[malla virtaa] [ei [T{V} D]]]

9.

		Consume "Pekka"

		[[malla virtaa] [ei [T{V} D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[malla virtaa] [ei [T{V} D{N}]]]

10.
	>>>	Trying candidate parse [[malla virtaa] [ei [T{V} D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[malla virtaa] [ei [T{V} D{N}]]].
				Extracted head "nukku" and reconstructed it = [[malla virtaa] [ei [T [nukku D{N}]]]]
				Extracted head "Pekka" from D and created [[malla virtaa] [ei [T [nukku [D Pekka]]]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [ei [T [nukku [D Pekka]]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<malla virtaa>:1 [ei [T [nukku [[D Pekka] <ADVP>:1]]]]]
				D failed to tail.
				[D Pekka] cannot be made an adjunct because its sister is an adjunct.
				Start reconstruction at [T [nukku [[D Pekka] <ADVP>:1]]]
				[D Pekka] cannot be made an adjunct because its sister is an adjunct.
				Floater [D Pekka] dropped: [<malla virtaa>:1 [ei [(DP):2 [T [nukku [[D Pekka]:2 <ADVP>:1]]]]]]
				= [<malla virtaa> [ei [[D Pekka] [T [nukku [[D Pekka] <malla virtaa>]]]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent (DP):2 from memory buffer into Spec of nukku
			= [<malla virtaa> [ei [[D Pekka] [T [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<malla virtaa>:1 [ei [(DP):2 [T [(DP):2 [nukku [[D Pekka]:2 <ADVP>:1]]]]]]] into LF...
				(ADV)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 10/112 operations) <------------------------------------
		Solution:
		[<malla virtaa> [ei [[D Pekka] [T [[D Pekka] [nukku [[D Pekka] <malla virtaa>]]]]]]]
		Grammar: [<malla virtaa>:1 [ei [(DP):2 [T [(DP):2 [nukku [[D Pekka]:2 <ADVP>:1]]]]]]]
		Spellout Neg/finP = [ADVP:1 [Neg/fin [__:2 [T [__:2 [V [[D N]:2 __:1]]]]]]]
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iFOC/uFOC', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iFOC/uFOC', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla: [ADV]
virtaa: [V, ADV]
ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
nukku: [V, T, Neg/fin]
D: [D, V, T, Neg/fin]
Pekka: [N, D, V, T, Neg/fin]
(ADV): [ADV, V, T, Neg/fin]
(V): [V, ADV, V, T, Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 73
['virtaamalla', 'nukkunut', 'Pekka', 'ei']


			=None

1.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']
			=malla

2.

		Consume "virtaa"

		malla + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=malla{V}

3.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		malla{V} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[malla{V} T]
			malla was opened.
			=[[malla virtaa] T]

4.

		Consume "nukku"

		[[malla virtaa] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[malla virtaa] T{V}]

5.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[malla virtaa] T{V}]

6.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[malla virtaa] T{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TP as SPEC for D due to unselective SPEC feature.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [<malla virtaa> [T [nukku <malla virtaa>]]] as left branch because it constitutes illicit structure.
				Avoid TP as SPEC for D due to unselective SPEC feature.
T{V} {'D'}{'D', 'v', '*', 'V'}
				Prioritize [T{V} D] due to complement selection.
nukku {'D'}{'P'}
[(-198, [[ADV V] T]), (4, T)]
		Ranking completed:
			1. [T{V}; D]
			2. [[[malla virtaa] T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[malla virtaa] [T{V} D]]

7.

		Consume "Pekka"

		[[malla virtaa] [T{V} D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[malla virtaa] [T{V} D{N}]]

8.

		Consume "ei"

		[[malla virtaa] [T{V} D{N}]] + ei
			Filtering out impossible merge sites...
				Reject [[<malla virtaa> [T [nukku [[D Pekka] <malla virtaa>]]]] ei] due to bad left branch.
				Reject [[T [nukku [D Pekka]]] ei] due to bad left branch.
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[malla virtaa] [T{V} [[D Pekka] ei]]]

9.
	>>>	Trying candidate parse [[malla virtaa] [T{V} [[D Pekka] ei]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[malla virtaa] [T{V} [[D Pekka] ei]]].
				Extracted head "nukku" and reconstructed it = [[malla virtaa] [T [nukku [[D Pekka] ei]]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [T [nukku [[D Pekka] ei]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<malla virtaa>:1 [T [nukku [[[D Pekka] ei] <ADVP>:1]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at ei
				= [<malla virtaa> [T [nukku [[[D Pekka] ei] <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
				Extraposition will be tried on [<malla virtaa>:1 [T [nukku [[[D Pekka] ei] <ADVP>:1]]]].
			= [<malla virtaa> [T [nukku [[[D Pekka] ei] <malla virtaa>]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
			LF-interface condition(s) violated
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla: [ADV]
virtaa: [V, ADV]
T: [T]
nukku: [V, T]
D: [D, V, T]
Pekka: [N, D, V, T]
ei: [Neg/fin, V, T]
(ADV): [ADV, V, T]
(V): [V, ADV, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[malla virtaa] T{V}] D]
			Reconstructing head movement for [[malla virtaa] T{V}].
				Extracted head "nukku" from T and created [[malla virtaa] [T nukku]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [T nukku]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<malla virtaa>:1 [T [nukku <ADVP>:1]]]
				= [<malla virtaa> [T [nukku <malla virtaa>]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
			=[[<malla virtaa>:1 [T [nukku <ADVP>:1]]] D]

10.

		Consume "Pekka"

		[[<malla virtaa> [T [nukku <malla virtaa>]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[<malla virtaa>:1 [T [nukku <ADVP>:1]]] D{N}]

11.

		Consume "ei"

		[[<malla virtaa> [T [nukku <malla virtaa>]]] D{N}] + ei
			Filtering out impossible merge sites...
				Reject [[[<malla virtaa> [T [nukku <malla virtaa>]]] <D Pekka>] ei] due to bad left branch.
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[<malla virtaa>:1 [T [nukku <ADVP>:1]]] [[D Pekka] ei]]

12.
	>>>	Trying candidate parse [[<malla virtaa> [T [nukku <malla virtaa>]]] [[D Pekka] ei]] (2.)
		Reconstructing...
			Reconstructing head movement for [[<malla virtaa>:1 [T [nukku <ADVP>:1]]] [[D Pekka] ei]].
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at ei
				= [[<malla virtaa> [T [nukku <malla virtaa>]]] [[D Pekka] ei]]
			Dropping A-/A-bar movement.
				Moving "malla virtaa T nukku __" into memory buffer from SPEC of "ei".
				Memory buffer: [[[ADV V] [T [V [ADV V]]]]]
				Dropping [[ADV V] [T [V [ADV V]]]](=malla virtaa T nukku __) from memory buffer into Comp of {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}.
				Result [[<malla virtaa>:1 [T [nukku <ADVP>:1]]]:1 [[D Pekka] [ei (TP):1]]]
				Remaining items in memory buffer: []
				[D Pekka]" has no thematic role
				An EPP-head "(V)" lacks specifier D that it requires.
				Extraposition will be tried on [[<malla virtaa>:1 [T [nukku <ADVP>:1]]]:1 [[D Pekka] [ei (TP):1]]].
			= [[<malla virtaa> [T [nukku <malla virtaa>]]] [[D Pekka] [ei [<malla virtaa> [T [nukku <malla virtaa>]]]]]]
		Checking LF-interface conditions.
				[D Pekka]" has no thematic role
				An EPP-head "(V)" lacks specifier D that it requires.
			LF-interface condition(s) violated
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG', 'null']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla: [ADV]
virtaa: [V, ADV]
T: [T]
nukku: [V, T]
(ADV): [ADV, V, T]
(V): [V, ADV, V, T]
D: [D]
Pekka: [N, D]
ei: [Neg/fin]
(ADV): [ADV, Neg/fin]
(V): [V, ADV, Neg/fin]
(T): [T, Neg/fin]
(V): [V, T, Neg/fin]
(ADV): [ADV, V, T, Neg/fin]
(V): [V, ADV, V, T, Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 74
['virtaamalla#foc', 'nukkunut', 'Pekka', 'ei']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'virtaamalla']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "virtaamalla"

			=None

2.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Adding inflectional features {'ABAR:FOC', 'LANG:FI', '-'} to malla
		= ['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
			=malla

3.

		Consume "virtaa"

		malla + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=malla{V}

4.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		malla{V} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[malla{V} T]
			malla was opened.
			=[[malla virtaa] T]

5.

		Consume "nukku"

		[[malla virtaa] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[malla virtaa] T{V}]

6.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[malla virtaa] T{V}]

7.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[malla virtaa] T{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TP as SPEC for D due to unselective SPEC feature.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [<malla virtaa> [T [nukku <malla virtaa>]]] as left branch because it constitutes illicit structure.
				Avoid TP as SPEC for D due to unselective SPEC feature.
T{V} {'D'}{'D', 'v', '*', 'V'}
				Prioritize [T{V} D] due to complement selection.
nukku {'D'}{'P'}
[(-198, [[ADV V] T]), (4, T)]
		Ranking completed:
			1. [T{V}; D]
			2. [[[malla virtaa] T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[malla virtaa] [T{V} D]]

8.

		Consume "Pekka"

		[[malla virtaa] [T{V} D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[malla virtaa] [T{V} D{N}]]

9.

		Consume "ei"

		[[malla virtaa] [T{V} D{N}]] + ei
			Filtering out impossible merge sites...
				Reject [[<malla virtaa> [T [nukku [[D Pekka] <malla virtaa>]]]] ei] due to bad left branch.
				Reject [[T [nukku [D Pekka]]] ei] due to bad left branch.
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[malla virtaa] [T{V} [[D Pekka] ei]]]

10.
	>>>	Trying candidate parse [[malla virtaa] [T{V} [[D Pekka] ei]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[malla virtaa] [T{V} [[D Pekka] ei]]].
				Extracted head "nukku" and reconstructed it = [[malla virtaa] [T [nukku [[D Pekka] ei]]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [T [nukku [[D Pekka] ei]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<malla virtaa>:1 [T [nukku [[[D Pekka] ei] <ADVP>:1]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at ei
				= [<malla virtaa> [T [nukku [[[D Pekka] ei] <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'T'}
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
				Extraposition will be tried on [<malla virtaa>:1 [T [nukku [[[D Pekka] ei] <ADVP>:1]]]].
			= [<malla virtaa> [T [nukku [[[D Pekka] ei] <malla virtaa>]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
			LF-interface condition(s) violated
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla: [ADV]
virtaa: [V, ADV]
T: [T]
nukku: [V, T]
D: [D, V, T]
Pekka: [N, D, V, T]
ei: [Neg/fin, V, T]
(ADV): [ADV, V, T]
(V): [V, ADV, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[malla virtaa] T{V}] D]
			Reconstructing head movement for [[malla virtaa] T{V}].
				Extracted head "nukku" from T and created [[malla virtaa] [T nukku]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [T nukku]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<malla virtaa>:1 [T [nukku <ADVP>:1]]]
				= [<malla virtaa> [T [nukku <malla virtaa>]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'T'}
				An EPP-head "nukku" lacks specifier D that it requires.
			=[[<malla virtaa>:1 [T [nukku <ADVP>:1]]] D]

11.

		Consume "Pekka"

		[[<malla virtaa> [T [nukku <malla virtaa>]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[<malla virtaa>:1 [T [nukku <ADVP>:1]]] D{N}]

12.

		Consume "ei"

		[[<malla virtaa> [T [nukku <malla virtaa>]]] D{N}] + ei
			Filtering out impossible merge sites...
				Reject [[[<malla virtaa> [T [nukku <malla virtaa>]]] <D Pekka>] ei] due to bad left branch.
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[<malla virtaa>:1 [T [nukku <ADVP>:1]]] [[D Pekka] ei]]

13.
	>>>	Trying candidate parse [[<malla virtaa> [T [nukku <malla virtaa>]]] [[D Pekka] ei]] (2.)
		Reconstructing...
			Reconstructing head movement for [[<malla virtaa>:1 [T [nukku <ADVP>:1]]] [[D Pekka] ei]].
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at ei
				= [[<malla virtaa> [T [nukku <malla virtaa>]]] [[D Pekka] ei]]
			Dropping A-/A-bar movement.
				Moving "malla virtaa T nukku __" into memory buffer from SPEC of "ei".
				Memory buffer: [[[ADV V] [T [V [ADV V]]]]]
				Dropping [[ADV V] [T [V [ADV V]]]](=malla virtaa T nukku __) from memory buffer into Comp of {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}.
				Result [[<malla virtaa>:1 [T [nukku <ADVP>:1]]]:1 [[D Pekka] [ei (TP):1]]]
				Remaining items in memory buffer: []
				[D Pekka]" has no thematic role
				An EPP-head "(V)" lacks specifier D that it requires.
				Extraposition will be tried on [[<malla virtaa>:1 [T [nukku <ADVP>:1]]]:1 [[D Pekka] [ei (TP):1]]].
			= [[<malla virtaa> [T [nukku <malla virtaa>]]] [[D Pekka] [ei [<malla virtaa> [T [nukku <malla virtaa>]]]]]]
		Checking LF-interface conditions.
				[D Pekka]" has no thematic role
				An EPP-head "(V)" lacks specifier D that it requires.
			LF-interface condition(s) violated
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG', 'null']
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla: [ADV]
virtaa: [V, ADV]
T: [T]
nukku: [V, T]
(ADV): [ADV, V, T]
(V): [V, ADV, V, T]
D: [D]
Pekka: [N, D]
ei: [Neg/fin]
(ADV): [ADV, Neg/fin]
(V): [V, ADV, Neg/fin]
(T): [T, Neg/fin]
(V): [V, T, Neg/fin]
(ADV): [ADV, V, T, Neg/fin]
(V): [V, ADV, V, T, Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla#foc".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 75
['virtaamalla', 'nukkunut', 'ei', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']
			=malla

2.

		Consume "virtaa"

		malla + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=malla{V}

3.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		malla{V} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[malla{V} T]
			malla was opened.
			=[[malla virtaa] T]

4.

		Consume "nukku"

		[[malla virtaa] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[malla virtaa] T{V}]

5.

		Consume "ei"

		[[malla virtaa] T{V}] + ei
			Filtering out impossible merge sites...
				Reject [[<malla virtaa> [T [nukku <malla virtaa>]]] ei] due to bad left branch.
		Exploring solution number (1) =[T{V} ei]
			T{V} cannot be opened.
			=[[malla virtaa] [T{V} ei]]

6.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[malla virtaa] [T{V} ei]]

7.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[malla virtaa] [T{V} ei]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TP as SPEC for D due to unselective SPEC feature.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [<malla virtaa> [T [nukku [ei <malla virtaa>]]]] as left branch because it constitutes illicit structure.
				Avoid TP as SPEC for D due to unselective SPEC feature.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [T [nukku ei]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
ei {'D'}{'T'}
				Avoid ei because it could break words.
[(-198, [[ADV V] [T Neg/fin]]), (-196, [T Neg/fin]), (-194, Neg/fin)]
		Ranking completed:
			1. [ei; D]
			2. [[T{V} ei]; D]
			3. [[[malla virtaa] [T{V} ei]]; D]
		Exploring solution number (1) =[ei D]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[malla virtaa] [T{V} [ei D]]]

8.

		Consume "Pekka"

		[[malla virtaa] [T{V} [ei D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[malla virtaa] [T{V} [ei D{N}]]]

9.
	>>>	Trying candidate parse [[malla virtaa] [T{V} [ei D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[malla virtaa] [T{V} [ei D{N}]]].
				Extracted head "nukku" and reconstructed it = [[malla virtaa] [T [nukku [ei D{N}]]]]
				Extracted head "Pekka" from D and created [[malla virtaa] [T [nukku [ei [D Pekka]]]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [T [nukku [ei [D Pekka]]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<malla virtaa>:1 [T [nukku [[ei [D Pekka]] <ADVP>:1]]]]
				= [<malla virtaa> [T [nukku [[ei [D Pekka]] <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [<malla virtaa>:1 [T [nukku [[ei [D Pekka]] <ADVP>:1]]]].
			= [<malla virtaa> [T [nukku [[ei [D Pekka]] <malla virtaa>]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla: [ADV]
virtaa: [V, ADV]
T: [T]
nukku: [V, T]
ei: [Neg/fin, V, T]
D: [D, Neg/fin, V, T]
Pekka: [N, D, Neg/fin, V, T]
(ADV): [ADV, V, T]
(V): [V, ADV, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T{V} ei] D]
			Reconstructing head movement for [T{V} ei].
				Extracted head "nukku" and reconstructed it = [T [nukku ei]]
			Dropping floaters...
				= [T [nukku ei]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [T [nukku ei]].
			=[[malla virtaa] [[T [nukku ei]] D]]

10.

		Consume "Pekka"

		[[malla virtaa] [[T [nukku ei]] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[malla virtaa] [[T [nukku ei]] D{N}]]

11.
	>>>	Trying candidate parse [[malla virtaa] [[T [nukku ei]] D{N}]] (2.)
		Reconstructing...
			Reconstructing head movement for [[malla virtaa] [[T [nukku ei]] D{N}]].
				Extracted head "Pekka" from D and created [[malla virtaa] [[T [nukku ei]] [D Pekka]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[T [nukku ei]] [D Pekka]]
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at [[T [nukku ei]] <D Pekka>]
				= [[malla virtaa] [[T [nukku ei]] <D Pekka>]]
			Dropping A-/A-bar movement.
				Moving "malla virtaa " into memory buffer from SPEC of "T".
				Memory buffer: [[ADV V]]
				Dropping constituent [malla virtaa]:1 from memory buffer into Spec of nukku
				Moving "____" into memory buffer from SPEC of "ei".
				Memory buffer: [[ADV V]]
				An EPP-head "nukku" has wrong specifier, needs D
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [[malla virtaa]:1 [[T [(ADVP):1 [nukku ei]]] <D Pekka>]].
			= [[malla virtaa] [[T [[malla virtaa] [nukku ei]]] <D Pekka>]]
		Checking LF-interface conditions.
				An EPP-head "nukku" has wrong specifier, needs D
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

malla: [ADV]
virtaa: [V, ADV]
T: [T]
(ADV): [ADV, T]
(V): [V, ADV, T]
nukku: [V, T]
ei: [Neg/fin, V, T]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[malla virtaa] [T{V} ei]] D]
			Reconstructing head movement for [[malla virtaa] [T{V} ei]].
				Extracted head "nukku" and reconstructed it = [[malla virtaa] [T [nukku ei]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [T [nukku ei]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<malla virtaa>:1 [T [nukku [ei <ADVP>:1]]]]
				= [<malla virtaa> [T [nukku [ei <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [<malla virtaa>:1 [T [nukku [ei <ADVP>:1]]]].
			=[[<malla virtaa>:1 [T [nukku [ei <ADVP>:1]]]] D]

12.

		Consume "Pekka"

		[[<malla virtaa> [T [nukku [ei <malla virtaa>]]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[<malla virtaa>:1 [T [nukku [ei <ADVP>:1]]]] D{N}]

13.
	>>>	Trying candidate parse [[<malla virtaa> [T [nukku [ei <malla virtaa>]]]] D{N}] (3.)
		Reconstructing...
			Reconstructing head movement for [[<malla virtaa>:1 [T [nukku [ei <ADVP>:1]]]] D{N}].
				Extracted head "Pekka" from D and created [[<malla virtaa>:1 [T [nukku [ei <ADVP>:1]]]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at <D Pekka>
				= [[<malla virtaa> [T [nukku [ei <malla virtaa>]]]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [[<malla virtaa>:1 [T [nukku [ei <ADVP>:1]]]] <D Pekka>].
			= [[<malla virtaa> [T [nukku [ei <malla virtaa>]]]] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

malla: [ADV]
virtaa: [V, ADV]
T: [T]
nukku: [V, T]
ei: [Neg/fin, V, T]
(ADV): [ADV, Neg/fin, V, T]
(V): [V, ADV, Neg/fin, V, T]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 76
['virtaamalla#foc', 'nukkunut', 'ei', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'virtaamalla']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "virtaamalla"

			=None

2.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Adding inflectional features {'ABAR:FOC', 'LANG:FI', '-'} to malla
		= ['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
			=malla

3.

		Consume "virtaa"

		malla + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=malla{V}

4.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		malla{V} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[malla{V} T]
			malla was opened.
			=[[malla virtaa] T]

5.

		Consume "nukku"

		[[malla virtaa] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[malla virtaa] T{V}]

6.

		Consume "ei"

		[[malla virtaa] T{V}] + ei
			Filtering out impossible merge sites...
				Reject [[<malla virtaa> [T [nukku <malla virtaa>]]] ei] due to bad left branch.
		Exploring solution number (1) =[T{V} ei]
			T{V} cannot be opened.
			=[[malla virtaa] [T{V} ei]]

7.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[malla virtaa] [T{V} ei]]

8.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[malla virtaa] [T{V} ei]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TP as SPEC for D due to unselective SPEC feature.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [<malla virtaa> [T [nukku [ei <malla virtaa>]]]] as left branch because it constitutes illicit structure.
				Avoid TP as SPEC for D due to unselective SPEC feature.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [T [nukku ei]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
ei {'D'}{'T'}
				Avoid ei because it could break words.
[(-198, [[ADV V] [T Neg/fin]]), (-196, [T Neg/fin]), (-194, Neg/fin)]
		Ranking completed:
			1. [ei; D]
			2. [[T{V} ei]; D]
			3. [[[malla virtaa] [T{V} ei]]; D]
		Exploring solution number (1) =[ei D]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[malla virtaa] [T{V} [ei D]]]

9.

		Consume "Pekka"

		[[malla virtaa] [T{V} [ei D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[malla virtaa] [T{V} [ei D{N}]]]

10.
	>>>	Trying candidate parse [[malla virtaa] [T{V} [ei D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[malla virtaa] [T{V} [ei D{N}]]].
				Extracted head "nukku" and reconstructed it = [[malla virtaa] [T [nukku [ei D{N}]]]]
				Extracted head "Pekka" from D and created [[malla virtaa] [T [nukku [ei [D Pekka]]]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [T [nukku [ei [D Pekka]]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<malla virtaa>:1 [T [nukku [[ei [D Pekka]] <ADVP>:1]]]]
				= [<malla virtaa> [T [nukku [[ei [D Pekka]] <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'T'}
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [<malla virtaa>:1 [T [nukku [[ei [D Pekka]] <ADVP>:1]]]].
			= [<malla virtaa> [T [nukku [[ei [D Pekka]] <malla virtaa>]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla: [ADV]
virtaa: [V, ADV]
T: [T]
nukku: [V, T]
ei: [Neg/fin, V, T]
D: [D, Neg/fin, V, T]
Pekka: [N, D, Neg/fin, V, T]
(ADV): [ADV, V, T]
(V): [V, ADV, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T{V} ei] D]
			Reconstructing head movement for [T{V} ei].
				Extracted head "nukku" and reconstructed it = [T [nukku ei]]
			Dropping floaters...
				= [T [nukku ei]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [T [nukku ei]].
			=[[malla virtaa] [[T [nukku ei]] D]]

11.

		Consume "Pekka"

		[[malla virtaa] [[T [nukku ei]] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[malla virtaa] [[T [nukku ei]] D{N}]]

12.
	>>>	Trying candidate parse [[malla virtaa] [[T [nukku ei]] D{N}]] (2.)
		Reconstructing...
			Reconstructing head movement for [[malla virtaa] [[T [nukku ei]] D{N}]].
				Extracted head "Pekka" from D and created [[malla virtaa] [[T [nukku ei]] [D Pekka]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[T [nukku ei]] [D Pekka]]
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at [[T [nukku ei]] <D Pekka>]
				= [[malla virtaa] [[T [nukku ei]] <D Pekka>]]
			Dropping A-/A-bar movement.
				Moving "malla virtaa " into memory buffer from SPEC of "T".
				Criterial features {'FOC'} copied to {'T'}
				Memory buffer: [[ADV V]]
				Dropping constituent [malla virtaa]:1 from memory buffer into Spec of nukku
				Moving "____" into memory buffer from SPEC of "ei".
				Criterial features {'FOC'} copied to {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}
				Memory buffer: [[ADV V]]
				An EPP-head "nukku" has wrong specifier, needs D
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [[malla virtaa]:1 [[T [(ADVP):1 [nukku ei]]] <D Pekka>]].
			= [[malla virtaa] [[T [[malla virtaa] [nukku ei]]] <D Pekka>]]
		Checking LF-interface conditions.
				An EPP-head "nukku" has wrong specifier, needs D
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iFOC/uFOC', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

malla: [ADV]
virtaa: [V, ADV]
T: [T]
(ADV): [ADV, T]
(V): [V, ADV, T]
nukku: [V, T]
ei: [Neg/fin, V, T]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[malla virtaa] [T{V} ei]] D]
			Reconstructing head movement for [[malla virtaa] [T{V} ei]].
				Extracted head "nukku" and reconstructed it = [[malla virtaa] [T [nukku ei]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [T [nukku ei]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<malla virtaa>:1 [T [nukku [ei <ADVP>:1]]]]
				= [<malla virtaa> [T [nukku [ei <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'T'}
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [<malla virtaa>:1 [T [nukku [ei <ADVP>:1]]]].
			=[[<malla virtaa>:1 [T [nukku [ei <ADVP>:1]]]] D]

13.

		Consume "Pekka"

		[[<malla virtaa> [T [nukku [ei <malla virtaa>]]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[<malla virtaa>:1 [T [nukku [ei <ADVP>:1]]]] D{N}]

14.
	>>>	Trying candidate parse [[<malla virtaa> [T [nukku [ei <malla virtaa>]]]] D{N}] (3.)
		Reconstructing...
			Reconstructing head movement for [[<malla virtaa>:1 [T [nukku [ei <ADVP>:1]]]] D{N}].
				Extracted head "Pekka" from D and created [[<malla virtaa>:1 [T [nukku [ei <ADVP>:1]]]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at <D Pekka>
				= [[<malla virtaa> [T [nukku [ei <malla virtaa>]]]] <D Pekka>]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'T', 'T/uFOC', 'uFOC'}
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [[<malla virtaa>:1 [T [nukku [ei <ADVP>:1]]]] <D Pekka>].
			= [[<malla virtaa> [T [nukku [ei <malla virtaa>]]]] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/T/uFOC/uFOC', 'CAT:T/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'ABAR:FOC', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

malla: [ADV]
virtaa: [V, ADV]
T: [T]
nukku: [V, T]
ei: [Neg/fin, V, T]
(ADV): [ADV, Neg/fin, V, T]
(V): [V, ADV, Neg/fin, V, T]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla#foc".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 77
['kuka', 'nukkui']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'CAT:WH', '-', 'ABAR:WH', 'LANG:FI', '-COMP:C/fin', '-COMP:ADV'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "kuka"

		D + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=D{N}

5.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D kuka] T/fin]

6.

		Consume "nukku"

		[[D kuka] T/fin] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=[[D kuka] T/fin{V}]

7.
	>>>	Trying candidate parse [[D kuka] T/fin{V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kuka] T/fin{V}].
				Extracted head "nukku" from T/fin and created [[D kuka] [T/fin nukku]]
			Dropping floaters...
				[D kuka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [T/fin nukku]
				<D kuka> was made an adjunct.
				Floater <D kuka> dropped: [<D kuka>:1 [T/fin [<DP>:1 nukku]]]
				= [<D kuka> [T/fin [<D kuka> nukku]]]
			Dropping A-/A-bar movement.
				Criterial features {'WH'} copied to {'FIN/T/fin', 'T/fin', 'FIN'}
			= [<D kuka> [T/fin [<D kuka> nukku]]]
		Checking LF-interface conditions.
			Trying to transfer [<D kuka>:1 [T/fin [<DP>:1 nukku]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 7/54 operations) <------------------------------------
		Solution:
		[<D kuka> [T/fin [<D kuka> nukku]]]
		Grammar: [<D kuka>:1 [T/fin [<DP>:1 nukku]]]
		Spellout T/finiWHP = [DP:1 [T/finiWH [__:1 V]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iWH/uWH', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iWH/uWH', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
kuka: [N, D]
T/fin: [T/finiWH]
(D): [D, T/finiWH]
(N): [N, D, T/finiWH]
nukku: [V, T/finiWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 78
['kuka#foc', 'nukkui']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'kuka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "kuka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$wh"

			=None

3.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

4.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'CAT:WH', '-', 'ABAR:FOC', 'ABAR:WH', 'LANG:FI', '-COMP:C/fin', '-COMP:ADV'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

5.

		Consume "kuka"

		D + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=D{N}

6.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D kuka] T/fin]

7.

		Consume "nukku"

		[[D kuka] T/fin] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=[[D kuka] T/fin{V}]

8.
	>>>	Trying candidate parse [[D kuka] T/fin{V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kuka] T/fin{V}].
				Extracted head "nukku" from T/fin and created [[D kuka] [T/fin nukku]]
			Dropping floaters...
				[D kuka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [T/fin nukku]
				<D kuka> was made an adjunct.
				Floater <D kuka> dropped: [<D kuka>:1 [T/fin [<DP>:1 nukku]]]
				= [<D kuka> [T/fin [<D kuka> nukku]]]
			Dropping A-/A-bar movement.
				Criterial features {'WH', 'FOC'} copied to {'FIN/T/fin', 'T/fin', 'FIN'}
			= [<D kuka> [T/fin [<D kuka> nukku]]]
		Checking LF-interface conditions.
			Trying to transfer [<D kuka>:1 [T/fin [<DP>:1 nukku]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 8/60 operations) <------------------------------------
		Solution:
		[<D kuka> [T/fin [<D kuka> nukku]]]
		Grammar: [<D kuka>:1 [T/fin [<DP>:1 nukku]]]
		Spellout T/finiWHP = [DP:1 [T/finiWH [__:1 V]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/FIN/T/fin/T/fin/iWH/uWH/FIN/T/fin/T/fin/iFOC/iWH/uFOC/uWH', 'CAT:FIN/FIN/T/fin/T/fin/iWH/uWH', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:iWH', 'CAT:uFOC', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/FIN/T/fin/T/fin/iWH/uWH/FIN/T/fin/T/fin/iFOC/iWH/uFOC/uWH', 'CAT:FIN/FIN/T/fin/T/fin/iWH/uWH', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:iWH', 'CAT:uFOC', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
kuka: [N, D]
T/fin: [T/finiWH]
(D): [D, T/finiWH]
(N): [N, D, T/finiWH]
nukku: [V, T/finiWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 79
['nukkui', 'kuka']


			=None

1.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']
			=T/fin

2.

		Consume "nukku"

		T/fin + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=T/fin{V}

3.
		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$wh"

			=T/fin{V}

4.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=T/fin{V}

5.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'CAT:WH', '-', 'ABAR:WH', 'LANG:FI', '-COMP:C/fin', '-COMP:ADV'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} D]
			T/fin{V} cannot be opened.
			=[T/fin{V} D]

6.

		Consume "kuka"

		[T/fin{V} D] + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=[T/fin{V} D{N}]

7.
	>>>	Trying candidate parse [T/fin{V} D{N}] (1.)
		Reconstructing...
			Reconstructing head movement for [T/fin{V} D{N}].
				Extracted head "nukku" and reconstructed it = [T/fin [nukku D{N}]]
				Extracted head "kuka" from D and created [T/fin [nukku [D kuka]]]
			Dropping floaters...
				D failed to tail.
				<D kuka> was made an adjunct.
				Start reconstruction at [nukku <D kuka>]
				= [T/fin [nukku <D kuka>]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				Extraposition will be tried on [T/fin [nukku <D kuka>]].
			= [T/fin [nukku <D kuka>]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']

T/fin: [T/fin]
nukku: [V, T/fin]
D: [D, V, T/fin]
kuka: [N, D, V, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "kuka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$wh".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kuka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkui".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 80
['nukkui#foc', 'kuka']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'nukkui']
			=C

2.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		C + T/fin
			Filtering out impossible merge sites...
			Sink "T/fin" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T/fin]
			=C{T/fin}

3.

		Consume "nukku"

		C{T/fin} + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into C{T/fin} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin}*nukku]
			=C{T/fin,V}

4.
		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$wh"

			=C{T/fin,V}

5.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=C{T/fin,V}

6.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'CAT:WH', '-', 'ABAR:WH', 'LANG:FI', '-COMP:C/fin', '-COMP:ADV'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		C{T/fin,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T/fin,V} D]
			C{T/fin,V} cannot be opened.
			=[C{T/fin,V} D]

7.

		Consume "kuka"

		[C{T/fin,V} D] + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=[C{T/fin,V} D{N}]

8.
	>>>	Trying candidate parse [C{T/fin,V} D{N}] (1.)
		Reconstructing...
			Reconstructing head movement for [C{T/fin,V} D{N}].
				Head reconstruction failed for T/fin{V}, merged locally as a last resort.
				Extracted head "T/fin{V}" and reconstructed it = [C [T/fin{V} D{N}]]
				Extracted head "nukku" and reconstructed it = [C [T/fin [nukku D{N}]]]
				Extracted head "kuka" from D and created [C [T/fin [nukku [D kuka]]]]
			Dropping floaters...
				D failed to tail.
				<D kuka> was made an adjunct.
				Start reconstruction at [T/fin [nukku <D kuka>]]
				<D kuka> was made an adjunct.
				Floater <D kuka> dropped: [C [<DP>:1 [T/fin [nukku <D kuka>:1]]]]
				= [C [<D kuka> [T/fin [nukku <D kuka>]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T/fin".
				Criterial features {'WH'} copied to {'FIN/T/fin', 'T/fin', 'FIN'}
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			= [C [<D kuka> [T/fin [<D kuka> [nukku <D kuka>]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<DP>:1 [T/fin [<DP>:1 [nukku <D kuka>:1]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 8/70 operations) <------------------------------------
		Solution:
		[C [<D kuka> [T/fin [<D kuka> [nukku <D kuka>]]]]]
		Grammar: [C [<DP>:1 [T/fin [<DP>:1 [nukku <D kuka>:1]]]]]
		Spellout C/finP = [C/fin [__:1 [T/finiWH [__:1 [V DP:1]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iWH/uWH', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iWH/uWH', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']

C: [C/fin]
(D): [D, C/fin]
(N): [N, D, C/fin]
T/fin: [T/finiWH, C/fin]
(D): [D, T/finiWH, C/fin]
(N): [N, D, T/finiWH, C/fin]
nukku: [V, T/finiWH, C/fin]
D: [D, V, T/finiWH, C/fin]
kuka: [N, D, V, T/finiWH, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 81
['kuka', 'ei', 'nukkunut']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'CAT:WH', '-', 'ABAR:WH', 'LANG:FI', '-COMP:C/fin', '-COMP:ADV'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "kuka"

		D + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=D{N}

5.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D kuka] ei]

6.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D kuka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D kuka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D kuka] [ei T]]

7.

		Consume "nukku"

		[[D kuka] [ei T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D kuka] [ei T{V}]]

8.
	>>>	Trying candidate parse [[D kuka] [ei T{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kuka] [ei T{V}]].
				Extracted head "nukku" from T and created [[D kuka] [ei [T nukku]]]
			Dropping floaters...
				[D kuka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [ei [T nukku]]
				<D kuka> was made an adjunct.
				Floater <D kuka> dropped: [<D kuka>:1 [ei [<DP>:1 [T nukku]]]]
				= [<D kuka> [ei [<D kuka> [T nukku]]]]
			Dropping A-/A-bar movement.
				Criterial features {'WH'} copied to {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}
				Moving "____" into memory buffer from SPEC of "T".
				Criterial features {'WH'} copied to {'T'}
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			= [<D kuka> [ei [<D kuka> [T [<D kuka> nukku]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D kuka>:1 [ei [<DP>:1 [T [<DP>:1 nukku]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 8/72 operations) <------------------------------------
		Solution:
		[<D kuka> [ei [<D kuka> [T [<D kuka> nukku]]]]]
		Grammar: [<D kuka>:1 [ei [<DP>:1 [T [<DP>:1 nukku]]]]]
		Spellout Neg/finiWHP = [DP:1 [Neg/finiWH [__:1 [T [__:1 V]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
ei:['!COMP:*', '!COMP:T', '!SPEC:*', '!SPEC:uWH', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iWH/uWH', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
ei:['!COMP:*', '!COMP:T', '!SPEC:*', '!SPEC:uWH', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iWH/uWH', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
kuka: [N, D]
ei: [Neg/finiWH]
(D): [D, Neg/finiWH]
(N): [N, D, Neg/finiWH]
T: [T, Neg/finiWH]
(D): [D, T, Neg/finiWH]
(N): [N, D, T, Neg/finiWH]
nukku: [V, T, Neg/finiWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 82
['kuka#foc', 'ei', 'nukkunut']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'kuka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "kuka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$wh"

			=None

3.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

4.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'CAT:WH', '-', 'ABAR:FOC', 'ABAR:WH', 'LANG:FI', '-COMP:C/fin', '-COMP:ADV'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

5.

		Consume "kuka"

		D + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=D{N}

6.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D kuka] ei]

7.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D kuka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D kuka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D kuka] [ei T]]

8.

		Consume "nukku"

		[[D kuka] [ei T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D kuka] [ei T{V}]]

9.
	>>>	Trying candidate parse [[D kuka] [ei T{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kuka] [ei T{V}]].
				Extracted head "nukku" from T and created [[D kuka] [ei [T nukku]]]
			Dropping floaters...
				[D kuka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [ei [T nukku]]
				<D kuka> was made an adjunct.
				Floater <D kuka> dropped: [<D kuka>:1 [ei [<DP>:1 [T nukku]]]]
				= [<D kuka> [ei [<D kuka> [T nukku]]]]
			Dropping A-/A-bar movement.
				Criterial features {'WH', 'FOC'} copied to {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}
				Moving "____" into memory buffer from SPEC of "T".
				Criterial features {'WH', 'FOC'} copied to {'T'}
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			= [<D kuka> [ei [<D kuka> [T [<D kuka> nukku]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D kuka>:1 [ei [<DP>:1 [T [<DP>:1 nukku]]]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 9/78 operations) <------------------------------------
		Solution:
		[<D kuka> [ei [<D kuka> [T [<D kuka> nukku]]]]]
		Grammar: [<D kuka>:1 [ei [<DP>:1 [T [<DP>:1 nukku]]]]]
		Spellout Neg/finiWHP = [DP:1 [Neg/finiWH [__:1 [T [__:1 V]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
ei:['!COMP:*', '!COMP:T', '!SPEC:*', '!SPEC:uWH', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iWH/uWH/FIN/NEG/Neg/fin/NEG/Neg/fin/iFOC/iWH/uFOC/uWH', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iWH/uWH', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:iFOC', 'CAT:iWH', 'CAT:uFOC', 'CAT:uWH', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/T/uWH/uFOC/uWH', 'CAT:T/uWH', 'CAT:uFOC', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
ei:['!COMP:*', '!COMP:T', '!SPEC:*', '!SPEC:uWH', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iWH/uWH/FIN/NEG/Neg/fin/NEG/Neg/fin/iFOC/iWH/uFOC/uWH', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iWH/uWH', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:iFOC', 'CAT:iWH', 'CAT:uFOC', 'CAT:uWH', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/T/uWH/uFOC/uWH', 'CAT:T/uWH', 'CAT:uFOC', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
kuka: [N, D]
ei: [Neg/finiWH]
(D): [D, Neg/finiWH]
(N): [N, D, Neg/finiWH]
T: [T, Neg/finiWH]
(D): [D, T, Neg/finiWH]
(N): [N, D, T, Neg/finiWH]
nukku: [V, T, Neg/finiWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 83
['kuka', 'nukkunut', 'ei']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'CAT:WH', '-', 'ABAR:WH', 'LANG:FI', '-COMP:C/fin', '-COMP:ADV'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "kuka"

		D + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=D{N}

5.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D kuka] T]

6.

		Consume "nukku"

		[[D kuka] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D kuka] T{V}]

7.

		Consume "ei"

		[[D kuka] T{V}] + ei
			Filtering out impossible merge sites...
				Reject [[[D kuka] [T nukku]] ei] due to bad left branch.
		Exploring solution number (1) =[T{V} ei]
			T{V} cannot be opened.
			=[[D kuka] [T{V} ei]]

8.
	>>>	Trying candidate parse [[D kuka] [T{V} ei]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kuka] [T{V} ei]].
				Extracted head "nukku" and reconstructed it = [[D kuka] [T [nukku ei]]]
			Dropping floaters...
				[D kuka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [T [nukku ei]]
				= [[D kuka] [T [nukku ei]]]
			Dropping A-/A-bar movement.
				Moving "D kuka " into memory buffer from SPEC of "T".
				Criterial features {'WH'} copied to {'T'}
				Memory buffer: [[D N]]
				Dropping constituent [D kuka]:1 from memory buffer into Spec of ei
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [[D kuka]:1 [T [nukku [(DP):1 ei]]]].
			= [[D kuka] [T [nukku [[D kuka] ei]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']

D: [D]
kuka: [N, D]
T: [T]
nukku: [V, T]
(D): [D, V, T]
(N): [N, D, V, T]
ei: [Neg/fin, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kuka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$wh".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kuka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 84
['kuka#foc', 'nukkunut', 'ei']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'kuka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "kuka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$wh"

			=None

3.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

4.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'CAT:WH', '-', 'ABAR:FOC', 'ABAR:WH', 'LANG:FI', '-COMP:C/fin', '-COMP:ADV'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

5.

		Consume "kuka"

		D + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=D{N}

6.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D kuka] T]

7.

		Consume "nukku"

		[[D kuka] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D kuka] T{V}]

8.

		Consume "ei"

		[[D kuka] T{V}] + ei
			Filtering out impossible merge sites...
				Reject [[[D kuka] [T nukku]] ei] due to bad left branch.
		Exploring solution number (1) =[T{V} ei]
			T{V} cannot be opened.
			=[[D kuka] [T{V} ei]]

9.
	>>>	Trying candidate parse [[D kuka] [T{V} ei]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kuka] [T{V} ei]].
				Extracted head "nukku" and reconstructed it = [[D kuka] [T [nukku ei]]]
			Dropping floaters...
				[D kuka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [T [nukku ei]]
				= [[D kuka] [T [nukku ei]]]
			Dropping A-/A-bar movement.
				Moving "D kuka " into memory buffer from SPEC of "T".
				Criterial features {'WH', 'FOC'} copied to {'T'}
				Memory buffer: [[D N]]
				Dropping constituent [D kuka]:1 from memory buffer into Spec of ei
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [[D kuka]:1 [T [nukku [(DP):1 ei]]]].
			= [[D kuka] [T [nukku [[D kuka] ei]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/T/uWH/uFOC/uWH', 'CAT:T/uWH', 'CAT:uFOC', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']

D: [D]
kuka: [N, D]
T: [T]
nukku: [V, T]
(D): [D, V, T]
(N): [N, D, V, T]
ei: [Neg/fin, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kuka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$wh".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kuka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kuka#foc".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 85
['ei', 'kuka', 'nukkunut']


			=None

1.
			=ei

2.
		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$wh"

			=ei

3.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=ei

4.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'CAT:WH', '-', 'ABAR:WH', 'LANG:FI', '-COMP:C/fin', '-COMP:ADV'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		ei + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[ei D]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[ei D]

5.

		Consume "kuka"

		[ei D] + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=[ei D{N}]

6.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[ei D{N}] + T
			Filtering out impossible merge sites...
				Reject [[ei [D kuka]] T] due to bad left branch.
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[ei [[D kuka] T]]

7.

		Consume "nukku"

		[ei [[D kuka] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[ei [[D kuka] T{V}]]

8.
	>>>	Trying candidate parse [ei [[D kuka] T{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [ei [[D kuka] T{V}]].
				Extracted head "nukku" from T and created [ei [[D kuka] [T nukku]]]
			Dropping floaters...
				= [ei [[D kuka] [T nukku]]]
			Dropping A-/A-bar movement.
				Moving "D kuka " into memory buffer from SPEC of "T".
				Criterial features {'WH'} copied to {'T'}
				Memory buffer: [[D N]]
				Dropping constituent [D kuka]:1 from memory buffer into Spec of nukku
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [ei [[D kuka]:1 [T [(DP):1 nukku]]]].
			= [ei [[D kuka] [T [[D kuka] nukku]]]]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

ei: [Neg/fin]
D: [D, Neg/fin]
kuka: [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
nukku: [V, T, Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kuka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$wh".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kuka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 86
['ei#foc', 'kuka', 'nukkunut']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'ei']
			=C

2.

		Consume "ei"

		C + ei
			Filtering out impossible merge sites...
			Sink "ei" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*ei]
			=C{Neg/fin}

3.
		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$wh"

			=C{Neg/fin}

4.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=C{Neg/fin}

5.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'CAT:WH', '-', 'ABAR:WH', 'LANG:FI', '-COMP:C/fin', '-COMP:ADV'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		C{Neg/fin} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{Neg/fin} D]
			C{Neg/fin} cannot be opened.
			=[C{Neg/fin} D]

6.

		Consume "kuka"

		[C{Neg/fin} D] + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=[C{Neg/fin} D{N}]

7.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[C{Neg/fin} D{N}] + T
			Filtering out impossible merge sites...
				Reject [[C [ei [D kuka]]] T] due to bad left branch.
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[C{Neg/fin} [[D kuka] T]]

8.

		Consume "nukku"

		[C{Neg/fin} [[D kuka] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[C{Neg/fin} [[D kuka] T{V}]]

9.
	>>>	Trying candidate parse [C{Neg/fin} [[D kuka] T{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{Neg/fin} [[D kuka] T{V}]].
				Extracted head "ei" and reconstructed it = [C [[D kuka] [ei T{V}]]]
				Extracted head "nukku" from T and created [C [[D kuka] [ei [T nukku]]]]
			Dropping floaters...
				[D kuka] is in an EPP SPEC position.
				Start reconstruction at [[D kuka] [ei [T nukku]]]
				<D kuka> was made an adjunct.
				Floater <D kuka> dropped: [C [<D kuka>:1 [ei [<DP>:1 [T nukku]]]]]
				= [C [<D kuka> [ei [<D kuka> [T nukku]]]]]
			Dropping A-/A-bar movement.
				Criterial features {'WH'} copied to {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}
				Moving "____" into memory buffer from SPEC of "T".
				Criterial features {'WH'} copied to {'T'}
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			= [C [<D kuka> [ei [<D kuka> [T [<D kuka> nukku]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<D kuka>:1 [ei [<DP>:1 [T [<DP>:1 nukku]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 9/76 operations) <------------------------------------
		Solution:
		[C [<D kuka> [ei [<D kuka> [T [<D kuka> nukku]]]]]]
		Grammar: [C [<D kuka>:1 [ei [<DP>:1 [T [<DP>:1 nukku]]]]]]
		Spellout C/finP = [C/fin [DP:1 [Neg/finiWH [__:1 [T [__:1 V]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
ei:['!COMP:*', '!COMP:T', '!SPEC:*', '!SPEC:uWH', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iWH/uWH', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
ei:['!COMP:*', '!COMP:T', '!SPEC:*', '!SPEC:uWH', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iWH/uWH', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

C: [C/fin]
D: [D, C/fin]
kuka: [N, D, C/fin]
ei: [Neg/finiWH, C/fin]
(D): [D, Neg/finiWH, C/fin]
(N): [N, D, Neg/finiWH, C/fin]
T: [T, Neg/finiWH, C/fin]
(D): [D, T, Neg/finiWH, C/fin]
(N): [N, D, T, Neg/finiWH, C/fin]
nukku: [V, T, Neg/finiWH, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 87
['ei', 'nukkunut', 'kuka']


			=None

1.
			=ei

2.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		ei + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[ei T]

3.

		Consume "nukku"

		[ei T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[ei T{V}]

4.
		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$wh"

			=[ei T{V}]

5.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=[ei T{V}]

6.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'CAT:WH', '-', 'ABAR:WH', 'LANG:FI', '-COMP:C/fin', '-COMP:ADV'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[ei T{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [ei [T nukku]] as left branch because it constitutes illicit structure.
				Avoid TP as SPEC for D due to unselective SPEC feature.
T{V} {'D/WH', 'WH', 'D'}{'D', 'v', '*', 'V'}
				Prioritize [T{V} D] due to complement selection.
nukku {'D/WH', 'WH', 'D'}{'P'}
[(-198, [Neg/fin T]), (4, T)]
		Ranking completed:
			1. [T{V}; D]
			2. [[ei T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[ei [T{V} D]]

7.

		Consume "kuka"

		[ei [T{V} D]] + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=[ei [T{V} D{N}]]

8.
	>>>	Trying candidate parse [ei [T{V} D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [ei [T{V} D{N}]].
				Extracted head "nukku" and reconstructed it = [ei [T [nukku D{N}]]]
				Extracted head "kuka" from D and created [ei [T [nukku [D kuka]]]]
			Dropping floaters...
				D failed to tail.
				<D kuka> was made an adjunct.
				Start reconstruction at [T [nukku <D kuka>]]
				<D kuka> was made an adjunct.
				Floater <D kuka> dropped: [ei [<DP>:1 [T [nukku <D kuka>:1]]]]
				= [ei [<D kuka> [T [nukku <D kuka>]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Criterial features {'WH'} copied to {'T'}
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [ei [<DP>:1 [T [<DP>:1 [nukku <D kuka>:1]]]]].
			= [ei [<D kuka> [T [<D kuka> [nukku <D kuka>]]]]]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']

ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
nukku: [V, T, Neg/fin]
D: [D, V, T, Neg/fin]
kuka: [N, D, V, T, Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "kuka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[ei T{V}] D]
			Reconstructing head movement for [ei T{V}].
				Extracted head "nukku" from T and created [ei [T nukku]]
			Dropping floaters...
				= [ei [T nukku]]
			Dropping A-/A-bar movement.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [ei [T nukku]].
			=[[ei [T nukku]] D]

9.

		Consume "kuka"

		[[ei [T nukku]] D] + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=[[ei [T nukku]] D{N}]

10.
	>>>	Trying candidate parse [[ei [T nukku]] D{N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[ei [T nukku]] D{N}].
				Extracted head "kuka" from D and created [[ei [T nukku]] [D kuka]]
			Dropping floaters...
				D failed to tail.
				<D kuka> was made an adjunct.
				Start reconstruction at <D kuka>
				= [[ei [T nukku]] <D kuka>]
			Dropping A-/A-bar movement.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [[ei [T nukku]] <D kuka>].
			= [[ei [T nukku]] <D kuka>]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']

ei: [Neg/fin]
T: [T, Neg/fin]
nukku: [V, T, Neg/fin]
D: [D]
kuka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "kuka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$wh".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kuka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 88
['ei#foc', 'nukkunut', 'kuka']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'ei']
			=C

2.

		Consume "ei"

		C + ei
			Filtering out impossible merge sites...
			Sink "ei" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*ei]
			=C{Neg/fin}

3.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		C{Neg/fin} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{Neg/fin} T]
			C{Neg/fin} cannot be opened.
			=[C{Neg/fin} T]

4.

		Consume "nukku"

		[C{Neg/fin} T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[C{Neg/fin} T{V}]

5.
		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$wh"

			=[C{Neg/fin} T{V}]

6.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=[C{Neg/fin} T{V}]

7.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'CAT:WH', '-', 'ABAR:WH', 'LANG:FI', '-COMP:C/fin', '-COMP:ADV'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[C{Neg/fin} T{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [C [ei [T nukku]]] as left branch because it constitutes illicit structure.
				Avoid TP as SPEC for D due to unselective SPEC feature.
T{V} {'D/WH', 'WH', 'D'}{'D', 'v', '*', 'V'}
				Prioritize [T{V} D] due to complement selection.
nukku {'D/WH', 'WH', 'D'}{'P'}
				Avoid T{V} because it could break words.
[(-198, [C/fin T]), (-94, T)]
		Ranking completed:
			1. [T{V}; D]
			2. [[C{Neg/fin} T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[C{Neg/fin} [T{V} D]]

8.

		Consume "kuka"

		[C{Neg/fin} [T{V} D]] + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=[C{Neg/fin} [T{V} D{N}]]

9.
	>>>	Trying candidate parse [C{Neg/fin} [T{V} D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{Neg/fin} [T{V} D{N}]].
				Head reconstruction failed for ei, merged locally as a last resort.
				Extracted head "ei" and reconstructed it = [C [ei [T{V} D{N}]]]
				Extracted head "nukku" and reconstructed it = [C [ei [T [nukku D{N}]]]]
				Extracted head "kuka" from D and created [C [ei [T [nukku [D kuka]]]]]
			Dropping floaters...
				D failed to tail.
				<D kuka> was made an adjunct.
				Start reconstruction at [ei [T [nukku <D kuka>]]]
				<D kuka> was made an adjunct.
				Floater <D kuka> dropped: [C [<DP>:1 [ei [T [nukku <D kuka>:1]]]]]
				= [C [<D kuka> [ei [T [nukku <D kuka>]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "ei".
				Criterial features {'WH'} copied to {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of T
				Moving "____" into memory buffer from SPEC of "T".
				Criterial features {'WH'} copied to {'T'}
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			= [C [<D kuka> [ei [<D kuka> [T [<D kuka> [nukku <D kuka>]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<DP>:1 [ei [<DP>:1 [T [<DP>:1 [nukku <D kuka>:1]]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 9/95 operations) <------------------------------------
		Solution:
		[C [<D kuka> [ei [<D kuka> [T [<D kuka> [nukku <D kuka>]]]]]]]
		Grammar: [C [<DP>:1 [ei [<DP>:1 [T [<DP>:1 [nukku <D kuka>:1]]]]]]]
		Spellout C/finP = [C/fin [__:1 [Neg/finiWH [__:1 [T [__:1 [V DP:1]]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
ei:['!COMP:*', '!COMP:T', '!SPEC:*', '!SPEC:uWH', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iWH/uWH', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
ei:['!COMP:*', '!COMP:T', '!SPEC:*', '!SPEC:uWH', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iWH/uWH', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']

C: [C/fin]
(D): [D, C/fin]
(N): [N, D, C/fin]
ei: [Neg/finiWH, C/fin]
(D): [D, Neg/finiWH, C/fin]
(N): [N, D, Neg/finiWH, C/fin]
T: [T, Neg/finiWH, C/fin]
(D): [D, T, Neg/finiWH, C/fin]
(N): [N, D, T, Neg/finiWH, C/fin]
nukku: [V, T, Neg/finiWH, C/fin]
D: [D, V, T, Neg/finiWH, C/fin]
kuka: [N, D, V, T, Neg/finiWH, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 89
['nukkunut', 'kuka', 'ei']


			=None

1.
		Next word contains multiple morphemes ['$T', 'nukku-']
			=T

2.

		Consume "nukku"

		T + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=T{V}

3.
		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$wh"

			=T{V}

4.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=T{V}

5.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'CAT:WH', '-', 'ABAR:WH', 'LANG:FI', '-COMP:C/fin', '-COMP:ADV'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		T{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[T{V} D]

6.

		Consume "kuka"

		[T{V} D] + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=[T{V} D{N}]

7.

		Consume "ei"

		[T{V} D{N}] + ei
			Filtering out impossible merge sites...
				Reject [[T [nukku [D kuka]]] ei] due to bad left branch.
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[T{V} [[D kuka] ei]]

8.
	>>>	Trying candidate parse [T{V} [[D kuka] ei]] (1.)
		Reconstructing...
			Reconstructing head movement for [T{V} [[D kuka] ei]].
				Extracted head "nukku" and reconstructed it = [T [nukku [[D kuka] ei]]]
			Dropping floaters...
				[D kuka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at ei
				= [T [nukku [[D kuka] ei]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				ei (ei) is missing a mandatory complement T
				[D kuka]" has no thematic role
				Extraposition will be tried on [T [nukku [[D kuka] ei]]].
			= [T [nukku [[D kuka] ei]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				ei (ei) is missing a mandatory complement T
				[D kuka]" has no thematic role
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']

T: [T]
nukku: [V, T]
D: [D, V, T]
kuka: [N, D, V, T]
ei: [Neg/fin, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kuka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$wh".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kuka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 90
['nukkunut#foc', 'kuka', 'ei']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'nukkunut']
			=C

2.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		C + T
			Filtering out impossible merge sites...
			Sink "T" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T]
			=C{T}

3.

		Consume "nukku"

		C{T} + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into C{T} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T}*nukku]
			=C{T,V}

4.
		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$wh"

			=C{T,V}

5.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=C{T,V}

6.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'CAT:WH', '-', 'ABAR:WH', 'LANG:FI', '-COMP:C/fin', '-COMP:ADV'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		C{T,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T,V} D]
			C{T,V} cannot be opened.
			=[C{T,V} D]

7.

		Consume "kuka"

		[C{T,V} D] + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=[C{T,V} D{N}]

8.

		Consume "ei"

		[C{T,V} D{N}] + ei
			Filtering out impossible merge sites...
				Reject [[C [<D kuka> [T [<D kuka> [nukku <D kuka>]]]]] ei] due to bad left branch.
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[C{T,V} [[D kuka] ei]]

9.
	>>>	Trying candidate parse [C{T,V} [[D kuka] ei]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{T,V} [[D kuka] ei]].
				Extracted head "T{V}" and reconstructed it = [C [[D kuka] [ei T{V}]]]
				Extracted head "nukku" from T and created [C [[D kuka] [ei [T nukku]]]]
			Dropping floaters...
				[D kuka] is in an EPP SPEC position.
				Start reconstruction at [[D kuka] [ei [T nukku]]]
				<D kuka> was made an adjunct.
				Floater <D kuka> dropped: [C [<D kuka>:1 [ei [<DP>:1 [T nukku]]]]]
				= [C [<D kuka> [ei [<D kuka> [T nukku]]]]]
			Dropping A-/A-bar movement.
				Criterial features {'WH'} copied to {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}
				Moving "____" into memory buffer from SPEC of "T".
				Criterial features {'WH'} copied to {'T'}
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			= [C [<D kuka> [ei [<D kuka> [T [<D kuka> nukku]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<D kuka>:1 [ei [<DP>:1 [T [<DP>:1 nukku]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 9/76 operations) <------------------------------------
		Solution:
		[C [<D kuka> [ei [<D kuka> [T [<D kuka> nukku]]]]]]
		Grammar: [C [<D kuka>:1 [ei [<DP>:1 [T [<DP>:1 nukku]]]]]]
		Spellout C/finP = [C/fin [DP:1 [Neg/finiWH [__:1 [T [__:1 V]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
ei:['!COMP:*', '!COMP:T', '!SPEC:*', '!SPEC:uWH', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iWH/uWH', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
ei:['!COMP:*', '!COMP:T', '!SPEC:*', '!SPEC:uWH', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iWH/uWH', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

C: [C/fin]
D: [D, C/fin]
kuka: [N, D, C/fin]
ei: [Neg/finiWH, C/fin]
(D): [D, Neg/finiWH, C/fin]
(N): [N, D, Neg/finiWH, C/fin]
T: [T, Neg/finiWH, C/fin]
(D): [D, T, Neg/finiWH, C/fin]
(N): [N, D, T, Neg/finiWH, C/fin]
nukku: [V, T, Neg/finiWH, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 91
['nukkunut', 'ei', 'kuka']


			=None

1.
		Next word contains multiple morphemes ['$T', 'nukku-']
			=T

2.

		Consume "nukku"

		T + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=T{V}

3.

		Consume "ei"

		T{V} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T{V} ei]
			T{V} cannot be opened.
			=[T{V} ei]

4.
		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$wh"

			=[T{V} ei]

5.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=[T{V} ei]

6.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'CAT:WH', '-', 'ABAR:WH', 'LANG:FI', '-COMP:C/fin', '-COMP:ADV'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[T{V} ei] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TP as SPEC for D due to unselective SPEC feature.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [T [nukku ei]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
ei {'D/WH', 'WH', 'D'}{'T'}
				Avoid ei because it could break words.
[(-198, [T Neg/fin]), (-196, Neg/fin)]
		Ranking completed:
			1. [ei; D]
			2. [[T{V} ei]; D]
		Exploring solution number (1) =[ei D]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[T{V} [ei D]]

7.

		Consume "kuka"

		[T{V} [ei D]] + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=[T{V} [ei D{N}]]

8.
	>>>	Trying candidate parse [T{V} [ei D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [T{V} [ei D{N}]].
				Extracted head "nukku" and reconstructed it = [T [nukku [ei D{N}]]]
				Extracted head "kuka" from D and created [T [nukku [ei [D kuka]]]]
			Dropping floaters...
				= [T [nukku [ei [D kuka]]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [T [nukku [ei [D kuka]]]].
			= [T [nukku [ei [D kuka]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']

T: [T]
nukku: [V, T]
ei: [Neg/fin, V, T]
D: [D, Neg/fin, V, T]
kuka: [N, D, Neg/fin, V, T]


		Trying to find other solutions...
		I have now explored all solutions for "kuka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T{V} ei] D]
			Reconstructing head movement for [T{V} ei].
				Extracted head "nukku" and reconstructed it = [T [nukku ei]]
			Dropping floaters...
				= [T [nukku ei]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [T [nukku ei]].
			=[[T [nukku ei]] D]

9.

		Consume "kuka"

		[[T [nukku ei]] D] + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=[[T [nukku ei]] D{N}]

10.
	>>>	Trying candidate parse [[T [nukku ei]] D{N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[T [nukku ei]] D{N}].
				Extracted head "kuka" from D and created [[T [nukku ei]] [D kuka]]
			Dropping floaters...
				D failed to tail.
				<D kuka> was made an adjunct.
				Start reconstruction at <D kuka>
				= [[T [nukku ei]] <D kuka>]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [[T [nukku ei]] <D kuka>].
			= [[T [nukku ei]] <D kuka>]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']

T: [T]
nukku: [V, T]
ei: [Neg/fin, V, T]
D: [D]
kuka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "kuka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$wh".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kuka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 92
['nukkunut#foc', 'ei', 'kuka']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'nukkunut']
			=C

2.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		C + T
			Filtering out impossible merge sites...
			Sink "T" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T]
			=C{T}

3.

		Consume "nukku"

		C{T} + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into C{T} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T}*nukku]
			=C{T,V}

4.

		Consume "ei"

		C{T,V} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T,V} ei]
			C{T,V} cannot be opened.
			=[C{T,V} ei]

5.
		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$wh"

			=[C{T,V} ei]

6.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=[C{T,V} ei]

7.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'CAT:WH', '-', 'ABAR:WH', 'LANG:FI', '-COMP:C/fin', '-COMP:ADV'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[C{T,V} ei] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [C [ei [T nukku]]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
ei {'D/WH', 'WH', 'D'}{'T'}
				Avoid ei because it could break words.
[(-198, [C/fin Neg/fin]), (-196, Neg/fin)]
		Ranking completed:
			1. [ei; D]
			2. [[C{T,V} ei]; D]
		Exploring solution number (1) =[ei D]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[C{T,V} [ei D]]

8.

		Consume "kuka"

		[C{T,V} [ei D]] + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=[C{T,V} [ei D{N}]]

9.
	>>>	Trying candidate parse [C{T,V} [ei D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{T,V} [ei D{N}]].
				Extracted head "T{V}" and reconstructed it = [C [ei [T{V} D{N}]]]
				Extracted head "nukku" and reconstructed it = [C [ei [T [nukku D{N}]]]]
				Extracted head "kuka" from D and created [C [ei [T [nukku [D kuka]]]]]
			Dropping floaters...
				D failed to tail.
				<D kuka> was made an adjunct.
				Start reconstruction at [ei [T [nukku <D kuka>]]]
				<D kuka> was made an adjunct.
				Floater <D kuka> dropped: [C [<DP>:1 [ei [T [nukku <D kuka>:1]]]]]
				= [C [<D kuka> [ei [T [nukku <D kuka>]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "ei".
				Criterial features {'WH'} copied to {'NEG', 'FIN', 'FIN/NEG/Neg/fin', 'Neg/fin'}
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of T
				Moving "____" into memory buffer from SPEC of "T".
				Criterial features {'WH'} copied to {'T'}
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			= [C [<D kuka> [ei [<D kuka> [T [<D kuka> [nukku <D kuka>]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<DP>:1 [ei [<DP>:1 [T [<DP>:1 [nukku <D kuka>:1]]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 9/98 operations) <------------------------------------
		Solution:
		[C [<D kuka> [ei [<D kuka> [T [<D kuka> [nukku <D kuka>]]]]]]]
		Grammar: [C [<DP>:1 [ei [<DP>:1 [T [<DP>:1 [nukku <D kuka>:1]]]]]]]
		Spellout C/finP = [C/fin [__:1 [Neg/finiWH [__:1 [T [__:1 [V DP:1]]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
ei:['!COMP:*', '!COMP:T', '!SPEC:*', '!SPEC:uWH', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iWH/uWH', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
ei:['!COMP:*', '!COMP:T', '!SPEC:*', '!SPEC:uWH', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/iWH/uWH', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']

C: [C/fin]
(D): [D, C/fin]
(N): [N, D, C/fin]
ei: [Neg/finiWH, C/fin]
(D): [D, Neg/finiWH, C/fin]
(N): [N, D, Neg/finiWH, C/fin]
T: [T, Neg/finiWH, C/fin]
(D): [D, T, Neg/finiWH, C/fin]
(N): [N, D, T, Neg/finiWH, C/fin]
nukku: [V, T, Neg/finiWH, C/fin]
D: [D, V, T, Neg/finiWH, C/fin]
kuka: [N, D, V, T, Neg/finiWH, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 93
['kuka', 'nukkui', 'virtaamalla']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'CAT:WH', '-', 'ABAR:WH', 'LANG:FI', '-COMP:C/fin', '-COMP:ADV'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "kuka"

		D + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=D{N}

5.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D kuka] T/fin]

6.

		Consume "nukku"

		[[D kuka] T/fin] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=[[D kuka] T/fin{V}]

7.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D kuka] T/fin{V}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla.
T/fin{V} {'ADV'}{'*', 'v', 'D', 'V'}
nukku {'ADV'}{'P'}
				Avoid T/fin{V} due to tail-head failure.
[(-99, [[D N] T/fin]), (-98, T/fin)]
		Ranking completed:
			1. [T/fin{V}; malla]
			2. [[[D kuka] T/fin{V}]; malla]
		Exploring solution number (1) =[T/fin{V} malla]
			T/fin{V} cannot be opened.
			=[[D kuka] [T/fin{V} malla]]

8.

		Consume "virtaa"

		[[D kuka] [T/fin{V} malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D kuka] [T/fin{V} malla{V}]]

9.
	>>>	Trying candidate parse [[D kuka] [T/fin{V} malla{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kuka] [T/fin{V} malla{V}]].
				Extracted head "nukku" and reconstructed it = [[D kuka] [T/fin [nukku malla{V}]]]
				Extracted head "virtaa" from malla and created [[D kuka] [T/fin [nukku [malla virtaa]]]]
			Dropping floaters...
				[D kuka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [T/fin [nukku [malla virtaa]]]
				<D kuka> was made an adjunct.
				Floater <D kuka> dropped: [<D kuka>:1 [T/fin [<DP>:1 [nukku [malla virtaa]]]]]
				<malla virtaa> was made an adjunct.
				= [<D kuka> [T/fin [<D kuka> [nukku <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				Criterial features {'WH'} copied to {'FIN/T/fin', 'T/fin', 'FIN'}
			= [<D kuka> [T/fin [<D kuka> [nukku <malla virtaa>]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D kuka>:1 [T/fin [<DP>:1 [nukku <malla virtaa>]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 9/80 operations) <------------------------------------
		Solution:
		[<D kuka> [T/fin [<D kuka> [nukku <malla virtaa>]]]]
		Grammar: [<D kuka>:1 [T/fin [<DP>:1 [nukku <malla virtaa>]]]]
		Spellout T/finiWHP = [DP:1 [T/finiWH [__:1 [V ADVP]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iWH/uWH', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iWH/uWH', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
kuka: [N, D]
T/fin: [T/finiWH]
(D): [D, T/finiWH]
(N): [N, D, T/finiWH]
nukku: [V, T/finiWH]
malla: [ADV, V, T/finiWH]
virtaa: [V, ADV, V, T/finiWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 94
['kuka#foc', 'nukkui', 'virtaamalla']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'kuka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "kuka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$wh"

			=None

3.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

4.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'CAT:WH', '-', 'ABAR:FOC', 'ABAR:WH', 'LANG:FI', '-COMP:C/fin', '-COMP:ADV'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

5.

		Consume "kuka"

		D + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=D{N}

6.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D kuka] T/fin]

7.

		Consume "nukku"

		[[D kuka] T/fin] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=[[D kuka] T/fin{V}]

8.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D kuka] T/fin{V}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla.
T/fin{V} {'ADV'}{'*', 'v', 'D', 'V'}
nukku {'ADV'}{'P'}
				Avoid T/fin{V} due to tail-head failure.
[(-99, [[D N] T/fin]), (-98, T/fin)]
		Ranking completed:
			1. [T/fin{V}; malla]
			2. [[[D kuka] T/fin{V}]; malla]
		Exploring solution number (1) =[T/fin{V} malla]
			T/fin{V} cannot be opened.
			=[[D kuka] [T/fin{V} malla]]

9.

		Consume "virtaa"

		[[D kuka] [T/fin{V} malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D kuka] [T/fin{V} malla{V}]]

10.
	>>>	Trying candidate parse [[D kuka] [T/fin{V} malla{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kuka] [T/fin{V} malla{V}]].
				Extracted head "nukku" and reconstructed it = [[D kuka] [T/fin [nukku malla{V}]]]
				Extracted head "virtaa" from malla and created [[D kuka] [T/fin [nukku [malla virtaa]]]]
			Dropping floaters...
				[D kuka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [T/fin [nukku [malla virtaa]]]
				<D kuka> was made an adjunct.
				Floater <D kuka> dropped: [<D kuka>:1 [T/fin [<DP>:1 [nukku [malla virtaa]]]]]
				<malla virtaa> was made an adjunct.
				= [<D kuka> [T/fin [<D kuka> [nukku <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				Criterial features {'WH', 'FOC'} copied to {'FIN/T/fin', 'T/fin', 'FIN'}
			= [<D kuka> [T/fin [<D kuka> [nukku <malla virtaa>]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D kuka>:1 [T/fin [<DP>:1 [nukku <malla virtaa>]]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 10/86 operations) <------------------------------------
		Solution:
		[<D kuka> [T/fin [<D kuka> [nukku <malla virtaa>]]]]
		Grammar: [<D kuka>:1 [T/fin [<DP>:1 [nukku <malla virtaa>]]]]
		Spellout T/finiWHP = [DP:1 [T/finiWH [__:1 [V ADVP]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/FIN/T/fin/T/fin/iWH/uWH/FIN/T/fin/T/fin/iFOC/iWH/uFOC/uWH', 'CAT:FIN/FIN/T/fin/T/fin/iWH/uWH', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:iWH', 'CAT:uFOC', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/FIN/T/fin/T/fin/iWH/uWH/FIN/T/fin/T/fin/iFOC/iWH/uFOC/uWH', 'CAT:FIN/FIN/T/fin/T/fin/iWH/uWH', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:iWH', 'CAT:uFOC', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
kuka: [N, D]
T/fin: [T/finiWH]
(D): [D, T/finiWH]
(N): [N, D, T/finiWH]
nukku: [V, T/finiWH]
malla: [ADV, V, T/finiWH]
virtaa: [V, ADV, V, T/finiWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 95
['kuka', 'virtaamalla', 'nukkui']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'CAT:WH', '-', 'ABAR:WH', 'LANG:FI', '-COMP:C/fin', '-COMP:ADV'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "kuka"

		D + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=D{N}

5.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		D{N} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[D kuka] malla]

6.

		Consume "virtaa"

		[[D kuka] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D kuka] malla{V}]

7.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		[[D kuka] malla{V}] + T/fin
			Filtering out impossible merge sites...
				Reject [<[D kuka] [malla virtaa]> T/fin] due to bad left branch.
		Exploring solution number (1) =[malla{V} T/fin]
			malla was opened.
			=[[D kuka] [[malla virtaa] T/fin]]

8.

		Consume "nukku"

		[[D kuka] [[malla virtaa] T/fin]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=[[D kuka] [[malla virtaa] T/fin{V}]]

9.
	>>>	Trying candidate parse [[D kuka] [[malla virtaa] T/fin{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kuka] [[malla virtaa] T/fin{V}]].
				Extracted head "nukku" from T/fin and created [[D kuka] [[malla virtaa] [T/fin nukku]]]
			Dropping floaters...
				[D kuka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [[malla virtaa] [T/fin nukku]]
				<D kuka> was made an adjunct.
				Floater <D kuka> dropped: [<D kuka>:1 [[malla virtaa] [T/fin [<DP>:1 nukku]]]]
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [T/fin [<DP>:1 nukku]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<D kuka>:1 [<malla virtaa>:2 [T/fin [<DP>:1 [nukku <ADVP>:2]]]]]
				= [<D kuka> [<malla virtaa> [T/fin [<D kuka> [nukku <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				New {'WH'} head was spawned due to the occurrence of multiple specifiers at T/fin
			= [<D kuka> [uWH [<malla virtaa> [T/fin [<D kuka> [nukku <malla virtaa>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D kuka>:1 [uWH [<malla virtaa>:2 [T/fin [<DP>:1 [nukku <ADVP>:2]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 9/74 operations) <------------------------------------
		Solution:
		[<D kuka> [uWH [<malla virtaa> [T/fin [<D kuka> [nukku <malla virtaa>]]]]]]
		Grammar: [<D kuka>:1 [uWH [<malla virtaa>:2 [T/fin [<DP>:1 [nukku <ADVP>:2]]]]]]
		Spellout iWHP = [DP:1 [iWH [ADVP:2 [T/fin [__:1 [V __:2]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D: [D]
kuka: [N, D]
uWH: [iWH]
malla: [ADV, iWH]
virtaa: [V, ADV, iWH]
T/fin: [T/fin, iWH]
(D): [D, T/fin, iWH]
(N): [N, D, T/fin, iWH]
nukku: [V, T/fin, iWH]
(ADV): [ADV, V, T/fin, iWH]
(V): [V, ADV, V, T/fin, iWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 96
['kuka#foc', 'virtaamalla', 'nukkui']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'kuka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "kuka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$wh"

			=None

3.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

4.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'CAT:WH', '-', 'ABAR:FOC', 'ABAR:WH', 'LANG:FI', '-COMP:C/fin', '-COMP:ADV'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

5.

		Consume "kuka"

		D + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=D{N}

6.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		D{N} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[D kuka] malla]

7.

		Consume "virtaa"

		[[D kuka] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D kuka] malla{V}]

8.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		[[D kuka] malla{V}] + T/fin
			Filtering out impossible merge sites...
				Reject [<[D kuka] [malla virtaa]> T/fin] due to bad left branch.
		Exploring solution number (1) =[malla{V} T/fin]
			malla was opened.
			=[[D kuka] [[malla virtaa] T/fin]]

9.

		Consume "nukku"

		[[D kuka] [[malla virtaa] T/fin]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=[[D kuka] [[malla virtaa] T/fin{V}]]

10.
	>>>	Trying candidate parse [[D kuka] [[malla virtaa] T/fin{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kuka] [[malla virtaa] T/fin{V}]].
				Extracted head "nukku" from T/fin and created [[D kuka] [[malla virtaa] [T/fin nukku]]]
			Dropping floaters...
				[D kuka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [[malla virtaa] [T/fin nukku]]
				<D kuka> was made an adjunct.
				Floater <D kuka> dropped: [<D kuka>:1 [[malla virtaa] [T/fin [<DP>:1 nukku]]]]
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [T/fin [<DP>:1 nukku]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<D kuka>:1 [<malla virtaa>:2 [T/fin [<DP>:1 [nukku <ADVP>:2]]]]]
				= [<D kuka> [<malla virtaa> [T/fin [<D kuka> [nukku <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				New {'WH', 'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
			= [<D kuka> [uFOC.uWH [<malla virtaa> [T/fin [<D kuka> [nukku <malla virtaa>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D kuka>:1 [uFOC.uWH [<malla virtaa>:2 [T/fin [<DP>:1 [nukku <ADVP>:2]]]]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 10/80 operations) <------------------------------------
		Solution:
		[<D kuka> [uFOC.uWH [<malla virtaa> [T/fin [<D kuka> [nukku <malla virtaa>]]]]]]
		Grammar: [<D kuka>:1 [uFOC.uWH [<malla virtaa>:2 [T/fin [<DP>:1 [nukku <ADVP>:2]]]]]]
		Spellout iWHP = [DP:1 [iWH [ADVP:2 [T/fin [__:1 [V __:2]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
uFOC.uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iFOC', 'CAT:iFOC/iWH/uFOC/uWH', 'CAT:iWH', 'CAT:uFOC', 'CAT:uWH', 'LANG:FI', 'PF:uFOC', 'PF:uWH', 'SPEC:*']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
uFOC.uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iFOC', 'CAT:iFOC/iWH/uFOC/uWH', 'CAT:iWH', 'CAT:uFOC', 'CAT:uWH', 'LANG:FI', 'PF:uFOC', 'PF:uWH', 'SPEC:*']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D: [D]
kuka: [N, D]
uFOC.uWH: [iWH]
malla: [ADV, iWH]
virtaa: [V, ADV, iWH]
T/fin: [T/fin, iWH]
(D): [D, T/fin, iWH]
(N): [N, D, T/fin, iWH]
nukku: [V, T/fin, iWH]
(ADV): [ADV, V, T/fin, iWH]
(V): [V, ADV, V, T/fin, iWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 97
['nukkui', 'kuka', 'virtaamalla']


			=None

1.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']
			=T/fin

2.

		Consume "nukku"

		T/fin + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=T/fin{V}

3.
		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$wh"

			=T/fin{V}

4.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=T/fin{V}

5.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'CAT:WH', '-', 'ABAR:WH', 'LANG:FI', '-COMP:C/fin', '-COMP:ADV'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} D]
			T/fin{V} cannot be opened.
			=[T/fin{V} D]

6.

		Consume "kuka"

		[T/fin{V} D] + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=[T/fin{V} D{N}]

7.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[T/fin{V} D{N}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				Avoid [T/fin [nukku <D kuka>]] as left branch because it constitutes illicit structure.
D{N} {'ADV'}{'N', '*'}
				Avoid [D{N} malla] due to complement selection.
kuka {'ADV'}{'R', 'uR', 'R/D'}
				Avoid [kuka malla] due to complement selection.
				Avoid D{N} due to tail-head failure.
			D was opened.
				Prioritize D{N} because all solutions were negative.
[(-198, [T/fin D]), (-94, D)]
		Ranking completed:
			1. [D{N}; malla]
			2. [[T/fin{V} D{N}]; malla]
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[T/fin{V} [[D kuka] malla]]

8.

		Consume "virtaa"

		[T/fin{V} [[D kuka] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[T/fin{V} [[D kuka] malla{V}]]

9.
	>>>	Trying candidate parse [T/fin{V} [[D kuka] malla{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [T/fin{V} [[D kuka] malla{V}]].
				Extracted head "nukku" and reconstructed it = [T/fin [nukku [[D kuka] malla{V}]]]
				Extracted head "virtaa" from malla and created [T/fin [nukku [[D kuka] [malla virtaa]]]]
			Dropping floaters...
				<malla virtaa> was made an adjunct.
				[D kuka] failed to tail [A/HEAD][CAT:FIN]
				Start reconstruction at [nukku [[D kuka] <malla virtaa>]]
				[D kuka] cannot be made an adjunct because its sister is an adjunct.
				Floater [D kuka] dropped: [T/fin [(DP):1 [nukku [[D kuka]:1 <malla virtaa>]]]]
				= [T/fin [[D kuka] [nukku [[D kuka] <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [T/fin [(DP):1 [nukku [[D kuka]:1 <malla virtaa>]]]].
			= [T/fin [[D kuka] [nukku [[D kuka] <malla virtaa>]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
nukku: [V, T/fin]
D: [D, V, T/fin]
kuka: [N, D, V, T/fin]
malla: [ADV, V, T/fin]
virtaa: [V, ADV, V, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{V} D{N}] malla]
			Reconstructing head movement for [T/fin{V} D{N}].
				Extracted head "nukku" and reconstructed it = [T/fin [nukku D{N}]]
				Extracted head "kuka" from D and created [T/fin [nukku [D kuka]]]
			Dropping floaters...
				D failed to tail.
				<D kuka> was made an adjunct.
				Start reconstruction at [nukku <D kuka>]
				= [T/fin [nukku <D kuka>]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				Extraposition will be tried on [T/fin [nukku <D kuka>]].
			=[[T/fin [nukku <D kuka>]] malla]

10.

		Consume "virtaa"

		[[T/fin [nukku <D kuka>]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[T/fin [nukku <D kuka>]] malla{V}]

11.
	>>>	Trying candidate parse [[T/fin [nukku <D kuka>]] malla{V}] (2.)
		Reconstructing...
			Reconstructing head movement for [[T/fin [nukku <D kuka>]] malla{V}].
				Extracted head "virtaa" from malla and created [[T/fin [nukku <D kuka>]] [malla virtaa]]
			Dropping floaters...
				malla failed to tail.
				= [[T/fin [nukku <D kuka>]] [malla virtaa]]
			Dropping A-/A-bar movement.
				Moving "T/fin nukku D kuka " into memory buffer from SPEC of "malla".
				Memory buffer: [[T/fin [V [D N]]]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				malla has unaccetable specifier [T/fin [nukku <D kuka>]].
				Extraposition will be tried on [[T/fin [nukku <D kuka>]] [malla virtaa]].
			= [[T/fin [nukku <D kuka>]] [malla virtaa]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				malla has unaccetable specifier [T/fin [nukku <D kuka>]].
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

T/fin: [T/fin]
nukku: [V, T/fin]
D: [D, V, T/fin]
kuka: [N, D, V, T/fin]
malla: [ADV]
virtaa: [V, ADV]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kuka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$wh".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kuka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkui".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 98
['nukkui#foc', 'kuka', 'virtaamalla']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'nukkui']
			=C

2.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		C + T/fin
			Filtering out impossible merge sites...
			Sink "T/fin" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T/fin]
			=C{T/fin}

3.

		Consume "nukku"

		C{T/fin} + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into C{T/fin} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin}*nukku]
			=C{T/fin,V}

4.
		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$wh"

			=C{T/fin,V}

5.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=C{T/fin,V}

6.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'CAT:WH', '-', 'ABAR:WH', 'LANG:FI', '-COMP:C/fin', '-COMP:ADV'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		C{T/fin,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T/fin,V} D]
			C{T/fin,V} cannot be opened.
			=[C{T/fin,V} D]

7.

		Consume "kuka"

		[C{T/fin,V} D] + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=[C{T/fin,V} D{N}]

8.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[C{T/fin,V} D{N}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
D{N} {'ADV'}{'N', '*'}
				Avoid [D{N} malla] due to complement selection.
kuka {'ADV'}{'R', 'uR', 'R/D'}
				Avoid [kuka malla] due to complement selection.
[(-196, D), (0, [C/fin D])]
		Ranking completed:
			1. [[C{T/fin,V} D{N}]; malla]
			2. [D{N}; malla]
		Exploring solution number (1) =[[C{T/fin,V} D{N}] malla]
			Reconstructing head movement for [C{T/fin,V} D{N}].
				Head reconstruction failed for T/fin{V}, merged locally as a last resort.
				Extracted head "T/fin{V}" and reconstructed it = [C [T/fin{V} D{N}]]
				Extracted head "nukku" and reconstructed it = [C [T/fin [nukku D{N}]]]
				Extracted head "kuka" from D and created [C [T/fin [nukku [D kuka]]]]
			Dropping floaters...
				D failed to tail.
				<D kuka> was made an adjunct.
				Start reconstruction at [T/fin [nukku <D kuka>]]
				<D kuka> was made an adjunct.
				Floater <D kuka> dropped: [C [<DP>:1 [T/fin [nukku <D kuka>:1]]]]
				= [C [<D kuka> [T/fin [nukku <D kuka>]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T/fin".
				Criterial features {'WH'} copied to {'FIN/T/fin', 'T/fin', 'FIN'}
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			=[[C [<DP>:1 [T/fin [<DP>:1 [nukku <D kuka>:1]]]]] malla]

9.

		Consume "virtaa"

		[[C [<D kuka> [T/fin [<D kuka> [nukku <D kuka>]]]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[C [<DP>:1 [T/fin [<DP>:1 [nukku <D kuka>:1]]]]] malla{V}]

10.
	>>>	Trying candidate parse [[C [<D kuka> [T/fin [<D kuka> [nukku <D kuka>]]]]] malla{V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[C [<DP>:1 [T/fin [<DP>:1 [nukku <D kuka>:1]]]]] malla{V}].
				Extracted head "virtaa" from malla and created [[C [<DP>:1 [T/fin [<DP>:1 [nukku <D kuka>:1]]]]] [malla virtaa]]
			Dropping floaters...
				malla failed to tail.
				= [[C [<D kuka> [T/fin [<D kuka> [nukku <D kuka>]]]]] [malla virtaa]]
			Dropping A-/A-bar movement.
				Moving "C __T/fin __nukku D kuka " into memory buffer from SPEC of "malla".
				Memory buffer: [[C/fin [[D N] [T/finiWH [[D N] [V [D N]]]]]]]
			= [[C [<D kuka> [T/fin [<D kuka> [nukku <D kuka>]]]]] [malla virtaa]]
		Checking LF-interface conditions.
			malla<[ADV]> failed to tail features [CAT:V]
malla
			Final tail-head check failed.
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iWH/uWH', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

C: [C/fin]
(D): [D, C/fin]
(N): [N, D, C/fin]
T/fin: [T/finiWH, C/fin]
(D): [D, T/finiWH, C/fin]
(N): [N, D, T/finiWH, C/fin]
nukku: [V, T/finiWH, C/fin]
D: [D, V, T/finiWH, C/fin]
kuka: [N, D, V, T/finiWH, C/fin]
malla: [ADV]
virtaa: [V, ADV]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} malla]
			D was opened.
			=[C{T/fin,V} [[D kuka] malla]]

11.

		Consume "virtaa"

		[C{T/fin,V} [[D kuka] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[C{T/fin,V} [[D kuka] malla{V}]]

12.
	>>>	Trying candidate parse [C{T/fin,V} [[D kuka] malla{V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [C{T/fin,V} [[D kuka] malla{V}]].
				Extracted head "T/fin{V}" and reconstructed it = [C [[D kuka] [T/fin{V} malla{V}]]]
				Extracted head "nukku" and reconstructed it = [C [[D kuka] [T/fin [nukku malla{V}]]]]
				Extracted head "virtaa" from malla and created [C [[D kuka] [T/fin [nukku [malla virtaa]]]]]
			Dropping floaters...
				[D kuka] is in an EPP SPEC position.
				Start reconstruction at [[D kuka] [T/fin [nukku [malla virtaa]]]]
				<D kuka> was made an adjunct.
				Floater <D kuka> dropped: [C [<D kuka>:1 [T/fin [<DP>:1 [nukku [malla virtaa]]]]]]
				<malla virtaa> was made an adjunct.
				= [C [<D kuka> [T/fin [<D kuka> [nukku <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				Criterial features {'WH'} copied to {'FIN/T/fin', 'T/fin', 'FIN'}
			= [C [<D kuka> [T/fin [<D kuka> [nukku <malla virtaa>]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<D kuka>:1 [T/fin [<DP>:1 [nukku <malla virtaa>]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 12/137 operations) <------------------------------------
		Solution:
		[C [<D kuka> [T/fin [<D kuka> [nukku <malla virtaa>]]]]]
		Grammar: [C [<D kuka>:1 [T/fin [<DP>:1 [nukku <malla virtaa>]]]]]
		Spellout C/finP = [C/fin [DP:1 [T/finiWH [__:1 [V ADVP]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iWH/uWH', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iWH/uWH', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

C: [C/fin]
D: [D, C/fin]
kuka: [N, D, C/fin]
T/fin: [T/finiWH, C/fin]
(D): [D, T/finiWH, C/fin]
(N): [N, D, T/finiWH, C/fin]
nukku: [V, T/finiWH, C/fin]
malla: [ADV, V, T/finiWH, C/fin]
virtaa: [V, ADV, V, T/finiWH, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 99
['nukkui', 'virtaamalla', 'kuka']


			=None

1.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']
			=T/fin

2.

		Consume "nukku"

		T/fin + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=T/fin{V}

3.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		T/fin{V} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} malla]
			T/fin{V} cannot be opened.
			=[T/fin{V} malla]

4.

		Consume "virtaa"

		[T/fin{V} malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[T/fin{V} malla{V}]

5.
		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$wh"

			=[T/fin{V} malla{V}]

6.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=[T/fin{V} malla{V}]

7.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'CAT:WH', '-', 'ABAR:WH', 'LANG:FI', '-COMP:C/fin', '-COMP:ADV'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[T/fin{V} malla{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [T/fin [nukku <malla virtaa>]] as left branch because it constitutes illicit structure.
				Avoid ADVP as SPEC for D due to unselective SPEC feature.
				Avoid [malla{V} D] due to local agreement failure.
malla{V} {'D/WH', 'WH', 'D'}{'*'}
virtaa {'D/WH', 'WH', 'D'}{'P'}
				Avoid [virtaa D] due to complement selection.
				Avoid malla{V} because it could break words.
			malla was opened.
				Prioritize malla{V} because all solutions were negative.
[(-292, ADV), (-198, [T/fin ADV])]
		Ranking completed:
			1. [[T/fin{V} malla{V}]; D]
			2. [malla{V}; D]
		Exploring solution number (1) =[[T/fin{V} malla{V}] D]
			Reconstructing head movement for [T/fin{V} malla{V}].
				Extracted head "nukku" and reconstructed it = [T/fin [nukku malla{V}]]
				Extracted head "virtaa" from malla and created [T/fin [nukku [malla virtaa]]]
			Dropping floaters...
				<malla virtaa> was made an adjunct.
				= [T/fin [nukku <malla virtaa>]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [T/fin [nukku <malla virtaa>]].
			=[[T/fin [nukku <malla virtaa>]] D]

8.

		Consume "kuka"

		[[T/fin [nukku <malla virtaa>]] D] + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=[[T/fin [nukku <malla virtaa>]] D{N}]

9.
	>>>	Trying candidate parse [[T/fin [nukku <malla virtaa>]] D{N}] (1.)
		Reconstructing...
			Reconstructing head movement for [[T/fin [nukku <malla virtaa>]] D{N}].
				Extracted head "kuka" from D and created [[T/fin [nukku <malla virtaa>]] [D kuka]]
			Dropping floaters...
				D failed to tail.
				<D kuka> was made an adjunct.
				Start reconstruction at <D kuka>
				= [[T/fin [nukku <malla virtaa>]] <D kuka>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [[T/fin [nukku <malla virtaa>]] <D kuka>].
			= [[T/fin [nukku <malla virtaa>]] <D kuka>]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']

T/fin: [T/fin]
nukku: [V, T/fin]
malla: [ADV, V, T/fin]
virtaa: [V, ADV, V, T/fin]
D: [D]
kuka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "kuka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[malla{V} D]
			malla was opened.
			=[T/fin{V} [[malla virtaa] D]]

10.

		Consume "kuka"

		[T/fin{V} [[malla virtaa] D]] + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=[T/fin{V} [[malla virtaa] D{N}]]

11.
	>>>	Trying candidate parse [T/fin{V} [[malla virtaa] D{N}]] (2.)
		Reconstructing...
			Reconstructing head movement for [T/fin{V} [[malla virtaa] D{N}]].
				Extracted head "nukku" and reconstructed it = [T/fin [nukku [[malla virtaa] D{N}]]]
				Extracted head "kuka" from D and created [T/fin [nukku [[malla virtaa] [D kuka]]]]
			Dropping floaters...
				D failed to tail.
				<D kuka> was made an adjunct.
				Start reconstruction at [nukku [[malla virtaa] <D kuka>]]
				<D kuka> was made an adjunct.
				Floater <D kuka> dropped: [T/fin [<DP>:1 [nukku [[malla virtaa] <D kuka>:1]]]]
				= [T/fin [<D kuka> [nukku [[malla virtaa] <D kuka>]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [T/fin [<DP>:1 [nukku [[malla virtaa] <D kuka>:1]]]].
			= [T/fin [<D kuka> [nukku [[malla virtaa] <D kuka>]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
nukku: [V, T/fin]
malla: [ADV, V, T/fin]
virtaa: [V, ADV, V, T/fin]
D: [D, V, T/fin]
kuka: [N, D, V, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "kuka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$wh".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kuka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkui".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 100
['nukkui#foc', 'virtaamalla', 'kuka']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'nukkui']
			=C

2.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		C + T/fin
			Filtering out impossible merge sites...
			Sink "T/fin" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T/fin]
			=C{T/fin}

3.

		Consume "nukku"

		C{T/fin} + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into C{T/fin} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin}*nukku]
			=C{T/fin,V}

4.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		C{T/fin,V} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T/fin,V} malla]
			C{T/fin,V} cannot be opened.
			=[C{T/fin,V} malla]

5.

		Consume "virtaa"

		[C{T/fin,V} malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[C{T/fin,V} malla{V}]

6.
		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$wh"

			=[C{T/fin,V} malla{V}]

7.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=[C{T/fin,V} malla{V}]

8.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', 'CAT:WH', '-', 'ABAR:WH', 'LANG:FI', '-COMP:C/fin', '-COMP:ADV'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[C{T/fin,V} malla{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [C [T/fin [nukku <malla virtaa>]]] as left branch because it constitutes illicit structure.
				Avoid ADVP as SPEC for D due to unselective SPEC feature.
				Avoid [malla{V} D] due to local agreement failure.
malla{V} {'D/WH', 'WH', 'D'}{'*'}
virtaa {'D/WH', 'WH', 'D'}{'P'}
				Avoid [virtaa D] due to complement selection.
				Avoid malla{V} because it could break words.
			malla was opened.
				Prioritize malla{V} because all solutions were negative.
[(-292, ADV), (-198, [C/fin ADV])]
		Ranking completed:
			1. [[C{T/fin,V} malla{V}]; D]
			2. [malla{V}; D]
		Exploring solution number (1) =[[C{T/fin,V} malla{V}] D]
