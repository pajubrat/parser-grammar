

\========================================================================
# 1
['Pekka', 'nukkui']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "nukku"

		[[D Pekka] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] T{V}]

6.
	>>>	Trying candidate parse [[D Pekka] T{V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] T{V}].
				Extracted head "nukku" from T and created [[D Pekka] [T nukku]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [T nukku]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:1 [T [<DP>:1 nukku]]]
				= [<D Pekka> [T [<D Pekka> nukku]]]
			Dropping A-/A-bar movement.
			= [<D Pekka> [T [<D Pekka> nukku]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 nukku]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 6/48 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> nukku]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 nukku]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 V]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
nukku: [V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 2
['Pekka#foc', 'nukkui']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'LANG:FI', 'ABAR:FOC', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

6.

		Consume "nukku"

		[[D Pekka] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] T{V}]

7.
	>>>	Trying candidate parse [[D Pekka] T{V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] T{V}].
				Extracted head "nukku" from T and created [[D Pekka] [T nukku]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [T nukku]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:1 [T [<DP>:1 nukku]]]
				= [<D Pekka> [T [<D Pekka> nukku]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'T/fin', 'FIN/T/fin', 'FIN'}
			= [<D Pekka> [T [<D Pekka> nukku]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 nukku]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 7/55 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> nukku]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 nukku]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 V]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
nukku: [V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 3
['nukkui', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']
			=T

2.

		Consume "nukku"

		T + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=T{V}

3.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=T{V}

4.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']

		Consume "D"

		T{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[T{V} D]

5.

		Consume "Pekka"

		[T{V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T{V} D{N}]

6.
	>>>	Trying candidate parse [T{V} D{N}] (1.)
		Reconstructing...
			Reconstructing head movement for [T{V} D{N}].
				Extracted head "nukku" and reconstructed it = [T [nukku D{N}]]
				Extracted head "Pekka" from D and created [T [nukku [D Pekka]]]
			Dropping floaters...
				= [T [nukku [D Pekka]]]
			Dropping A-/A-bar movement.
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [T [nukku [D Pekka]]].
			= [T [nukku [D Pekka]]]
		Checking LF-interface conditions.
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T: [T/fin]
nukku: [V, T/fin]
D: [D, V, T/fin]
Pekka: [N, D, V, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkui".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 4
['nukkui#foc', 'Pekka']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'nukkui']
			=C

2.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T"

		C + T
			Filtering out impossible merge sites...
			Sink "T" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T]
			=C{T/fin}

3.

		Consume "nukku"

		C{T/fin} + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into C{T/fin} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin}*nukku]
			=C{T/fin,V}

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=C{T/fin,V}

5.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']

		Consume "D"

		C{T/fin,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T/fin,V} D]
			C{T/fin,V} cannot be opened.
			=[C{T/fin,V} D]

6.

		Consume "Pekka"

		[C{T/fin,V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T/fin,V} D{N}]

7.
	>>>	Trying candidate parse [C{T/fin,V} D{N}] (1.)
		Reconstructing...
			Reconstructing head movement for [C{T/fin,V} D{N}].
				Head reconstruction failed for T{V}, merged locally as a last resort.
			Reconstructing head movement for D{N}.
				Extracted head "Pekka" from D and created [C{T/fin,V} [[D Pekka] T{V}]]
				Extracted head "T{V}" and reconstructed it = [C [[D Pekka] T{V}]]
				Extracted head "nukku" from T and created [C [[D Pekka] [T nukku]]]
			Dropping floaters...
				[D Pekka] is in an EPP SPEC position.
				Start reconstruction at [[D Pekka] [T nukku]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<D Pekka>:1 [T [<DP>:1 nukku]]]]
				= [C [<D Pekka> [T [<D Pekka> nukku]]]]
			Dropping A-/A-bar movement.
			= [C [<D Pekka> [T [<D Pekka> nukku]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<D Pekka>:1 [T [<DP>:1 nukku]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 7/61 operations) <------------------------------------
		Solution:
		[C [<D Pekka> [T [<D Pekka> nukku]]]]
		Grammar: [C [<D Pekka>:1 [T [<DP>:1 nukku]]]]
		Spellout C/finP = [C/fin [DP:1 [T/fin [__:1 V]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

C: [C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
T: [T/fin, C/fin]
(D): [D, V, T/fin, C/fin]
(N): [N, D, V, T/fin, C/fin]
nukku: [V, T/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 5
['Pekka', 'ei', 'nukkunut']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "nukku"

		[[D Pekka] [ei T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [ei T{V}]]

7.
	>>>	Trying candidate parse [[D Pekka] [ei T{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei T{V}]].
				Extracted head "nukku" from T and created [[D Pekka] [ei [T nukku]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [ei [T nukku]]
				= [[D Pekka] [ei [T nukku]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of nukku
			= [[D Pekka] [ei [T [[D Pekka] nukku]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:1 [ei [T [(DP):1 nukku]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 7/63 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [T [[D Pekka] nukku]]]]
		Grammar: [[D Pekka]:1 [ei [T [(DP):1 nukku]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 V]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, V, , Neg/fin]
(N): [N, D, V, , Neg/fin]
nukku: [V, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 6
['Pekka#foc', 'ei', 'nukkunut']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'LANG:FI', 'ABAR:FOC', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

6.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

7.

		Consume "nukku"

		[[D Pekka] [ei T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [ei T{V}]]

8.
	>>>	Trying candidate parse [[D Pekka] [ei T{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei T{V}]].
				Extracted head "nukku" from T and created [[D Pekka] [ei [T nukku]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [ei [T nukku]]
				= [[D Pekka] [ei [T nukku]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Criterial features {'FOC'} copied to {'NEG', 'FIN/NEG/Neg/fin', 'Neg/fin', 'FIN'}
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of nukku
			= [[D Pekka] [ei [T [[D Pekka] nukku]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:1 [ei [T [(DP):1 nukku]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 8/69 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [T [[D Pekka] nukku]]]]
		Grammar: [[D Pekka]:1 [ei [T [(DP):1 nukku]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 V]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/uFOC', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:uFOC', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/uFOC', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:uFOC', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, V, , Neg/fin]
(N): [N, D, V, , Neg/fin]
nukku: [V, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 7
['Pekka', 'nukkunut', 'ei']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "nukku"

		[[D Pekka] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] T{V}]

6.

		Consume "ei"

		[[D Pekka] T{V}] + ei
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [T nukku]] ei] due to bad left branch.
		Exploring solution number (1) =[T{V} ei]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} ei]]

7.
	>>>	Trying candidate parse [[D Pekka] [T{V} ei]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T{V} ei]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T [nukku ei]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [T [nukku ei]]
				= [[D Pekka] [T [nukku ei]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of ei
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [[D Pekka]:1 [T [nukku [(DP):1 ei]]]].
			= [[D Pekka] [T [nukku [[D Pekka] ei]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']

D: [D]
Pekka: [N, D]
T: []
nukku: [V, ]
(D): [D, Neg/fin, V, ]
(N): [N, D, Neg/fin, V, ]
ei: [Neg/fin, V, ]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 8
['Pekka#foc', 'nukkunut', 'ei']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'LANG:FI', 'ABAR:FOC', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

6.

		Consume "nukku"

		[[D Pekka] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] T{V}]

7.

		Consume "ei"

		[[D Pekka] T{V}] + ei
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [T nukku]] ei] due to bad left branch.
		Exploring solution number (1) =[T{V} ei]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} ei]]

8.
	>>>	Trying candidate parse [[D Pekka] [T{V} ei]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T{V} ei]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T [nukku ei]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [T [nukku ei]]
				= [[D Pekka] [T [nukku ei]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Criterial features {'FOC'} copied to {'T'}
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of ei
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [[D Pekka]:1 [T [nukku [(DP):1 ei]]]].
			= [[D Pekka] [T [nukku [[D Pekka] ei]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']

D: [D]
Pekka: [N, D]
T: []
nukku: [V, ]
(D): [D, Neg/fin, V, ]
(N): [N, D, Neg/fin, V, ]
ei: [Neg/fin, V, ]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka#foc".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 9
['ei', 'Pekka', 'nukkunut']


			=None

1.
			=ei

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=ei

3.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']

		Consume "D"

		ei + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[ei D]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[ei D]

4.

		Consume "Pekka"

		[ei D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[ei D{N}]

5.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[ei D{N}] + T
			Filtering out impossible merge sites...
				Reject [[ei <D Pekka>] T] due to bad left branch.
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[ei [[D Pekka] T]]

6.

		Consume "nukku"

		[ei [[D Pekka] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[ei [[D Pekka] T{V}]]

7.
	>>>	Trying candidate parse [ei [[D Pekka] T{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [ei [[D Pekka] T{V}]].
				Extracted head "nukku" from T and created [ei [[D Pekka] [T nukku]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [[D Pekka] [T nukku]]
				= [ei [[D Pekka] [T nukku]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [ei [[D Pekka]:1 [T nukku]]].
			= [ei [[D Pekka] [T nukku]]]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

ei: [Neg/fin]
D: [D, Neg/fin]
Pekka: [N, D, Neg/fin]
T: [, Neg/fin]
nukku: [V, , Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 10
['ei#foc', 'Pekka', 'nukkunut']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'ei']
			=C

2.

		Consume "ei"

		C + ei
			Filtering out impossible merge sites...
			Sink "ei" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*ei]
			=C{Neg/fin}

3.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=C{Neg/fin}

4.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']

		Consume "D"

		C{Neg/fin} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{Neg/fin} D]
			C{Neg/fin} cannot be opened.
			=[C{Neg/fin} D]

5.

		Consume "Pekka"

		[C{Neg/fin} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{Neg/fin} D{N}]

6.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[C{Neg/fin} D{N}] + T
			Filtering out impossible merge sites...
				Reject [[C [[D Pekka] ei]] T] due to bad left branch.
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[C{Neg/fin} [[D Pekka] T]]

7.

		Consume "nukku"

		[C{Neg/fin} [[D Pekka] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[C{Neg/fin} [[D Pekka] T{V}]]

8.
	>>>	Trying candidate parse [C{Neg/fin} [[D Pekka] T{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{Neg/fin} [[D Pekka] T{V}]].
				Extracted head "ei" and reconstructed it = [C [[D Pekka] [ei T{V}]]]
				Extracted head "nukku" from T and created [C [[D Pekka] [ei [T nukku]]]]
			Dropping floaters...
				[D Pekka] is in an EPP SPEC position.
				Start reconstruction at [[D Pekka] [ei [T nukku]]]
				= [C [[D Pekka] [ei [T nukku]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of nukku
			= [C [[D Pekka] [ei [T [[D Pekka] nukku]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [[D Pekka]:1 [ei [T [(DP):1 nukku]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 8/67 operations) <------------------------------------
		Solution:
		[C [[D Pekka] [ei [T [[D Pekka] nukku]]]]]
		Grammar: [C [[D Pekka]:1 [ei [T [(DP):1 nukku]]]]]
		Spellout C/finP = [C/fin [DP:1 [Neg/fin [ [__:1 V]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

C: [C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
ei: [Neg/fin, C/fin]
T: [, Neg/fin, C/fin]
(D): [D, V, , Neg/fin, C/fin]
(N): [N, D, V, , Neg/fin, C/fin]
nukku: [V, , Neg/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 11
['ei', 'nukkunut', 'Pekka']


			=None

1.
			=ei

2.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		ei + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[ei T]

3.

		Consume "nukku"

		[ei T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[ei T{V}]

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=[ei T{V}]

5.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']

		Consume "D"

		[ei T{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [ei [T nukku]] as left branch because it constitutes illicit structure.
				Avoid P as SPEC for D due to unselective SPEC feature.
				Avoid [T{V} D] due to local agreement failure.
T{V} {'D'}{'v', '*', 'V', 'D'}
				Prioritize [T{V} D] due to complement selection.
nukku {'D'}{'P'}
[(-198, [Neg/fin ]), (-94, )]
		Ranking completed:
			1. [T{V}; D]
			2. [[ei T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[ei [T{V} D]]

6.

		Consume "Pekka"

		[ei [T{V} D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[ei [T{V} D{N}]]

7.
	>>>	Trying candidate parse [ei [T{V} D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [ei [T{V} D{N}]].
				Extracted head "nukku" and reconstructed it = [ei [T [nukku D{N}]]]
				Extracted head "Pekka" from D and created [ei [T [nukku [D Pekka]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at [T [nukku <D Pekka>]]
				= [ei [T [nukku <D Pekka>]]]
			Dropping A-/A-bar movement.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				Extraposition will be tried on [ei [T [nukku <D Pekka>]]].
			= [ei [T [nukku <D Pekka>]]]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

ei: [Neg/fin]
T: [, Neg/fin]
nukku: [V, , Neg/fin]
D: [D, V, , Neg/fin]
Pekka: [N, D, V, , Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[ei T{V}] D]
			Reconstructing head movement for [ei T{V}].
				Extracted head "nukku" from T and created [ei [T nukku]]
			Dropping floaters...
				= [ei [T nukku]]
			Dropping A-/A-bar movement.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [ei [T nukku]].
			=[[ei [T nukku]] D]

8.

		Consume "Pekka"

		[[ei [T nukku]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[ei [T nukku]] D{N}]

9.
	>>>	Trying candidate parse [[ei [T nukku]] D{N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[ei [T nukku]] D{N}].
				Extracted head "Pekka" from D and created [[ei [T nukku]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at <D Pekka>
				= [[ei [T nukku]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [[ei [T nukku]] <D Pekka>].
			= [[ei [T nukku]] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

ei: [Neg/fin]
T: [, Neg/fin]
nukku: [V, , Neg/fin]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 12
['ei#foc', 'nukkunut', 'Pekka']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'ei']
			=C

2.

		Consume "ei"

		C + ei
			Filtering out impossible merge sites...
			Sink "ei" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*ei]
			=C{Neg/fin}

3.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		C{Neg/fin} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{Neg/fin} T]
			C{Neg/fin} cannot be opened.
			=[C{Neg/fin} T]

4.

		Consume "nukku"

		[C{Neg/fin} T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[C{Neg/fin} T{V}]

5.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=[C{Neg/fin} T{V}]

6.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']

		Consume "D"

		[C{Neg/fin} T{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [C [[T nukku] ei]] as left branch because it constitutes illicit structure.
				Avoid P as SPEC for D due to unselective SPEC feature.
				Avoid [T{V} D] due to local agreement failure.
T{V} {'D'}{'v', '*', 'V', 'D'}
				Prioritize [T{V} D] due to complement selection.
nukku {'D'}{'P'}
				Avoid T{V} because it could break words.
[(-198, [C/fin ]), (-192, )]
		Ranking completed:
			1. [T{V}; D]
			2. [[C{Neg/fin} T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[C{Neg/fin} [T{V} D]]

7.

		Consume "Pekka"

		[C{Neg/fin} [T{V} D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{Neg/fin} [T{V} D{N}]]

8.
	>>>	Trying candidate parse [C{Neg/fin} [T{V} D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{Neg/fin} [T{V} D{N}]].
				Head reconstruction failed for ei, merged locally as a last resort.
				Extracted head "ei" and reconstructed it = [C [T{V} [D{N} ei]]]
				Extracted head "nukku" and reconstructed it = [C [T [nukku [D{N} ei]]]]
				Extracted head "Pekka" and reconstructed it = [C [T [nukku [D [Pekka ei]]]]]
			Dropping floaters...
				D failed to tail.
				<D [Pekka ei]> was made an adjunct.
				Start reconstruction at [T [nukku <D [Pekka ei]>]]
				<D [Pekka ei]> was made an adjunct.
				Floater <D [Pekka ei]> dropped: [C [<DP>:1 [T [nukku <D [Pekka ei]>:1]]]]
				= [C [<D [Pekka ei]> [T [nukku <D [Pekka ei]>]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D [N Neg/fin]]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
				C probing for CAT:FIN failed.
				Extraposition will be tried on [C [<DP>:1 [T [<DP>:1 [nukku <D [Pekka ei]>:1]]]]].
			= [C [<D [Pekka ei]> [T [<D [Pekka ei]> [nukku <D [Pekka ei]>]]]]]
		Checking LF-interface conditions.
				C probing for CAT:FIN failed.
			LF-interface condition(s) violated
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']

C: [C/fin]
(D): [D, C/fin]
(N): [N, D, C/fin]
(Neg/fin): [Neg/fin, N, D, C/fin]
T: [, C/fin]
(D): [D, , C/fin]
(N): [N, D, , C/fin]
(Neg/fin): [Neg/fin, N, D, , C/fin]
nukku: [V, , C/fin]
D: [D, V, , C/fin]
Pekka: [N, D, V, , C/fin]
ei: [Neg/fin, N, D, V, , C/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[C{Neg/fin} T{V}] D]
			Reconstructing head movement for [C{Neg/fin} T{V}].
				Head reconstruction failed for ei, merged locally as a last resort.
			Reconstructing head movement for T{V}.
				Extracted head "nukku" from T and created [C{Neg/fin} [[T nukku] ei]]
				Extracted head "ei" and reconstructed it = [C [[T nukku] ei]]
			Dropping floaters...
				= [C [[T nukku] ei]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [C [[T nukku] ei]].
			=[[C [[T nukku] ei]] D]

9.

		Consume "Pekka"

		[[C [[T nukku] ei]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[C [[T nukku] ei]] D{N}]

10.
	>>>	Trying candidate parse [[C [[T nukku] ei]] D{N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[C [[T nukku] ei]] D{N}].
				Extracted head "Pekka" from D and created [[C [[T nukku] ei]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at <D Pekka>
				= [[C [[T nukku] ei]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [[C [[T nukku] ei]] <D Pekka>].
			= [[C [[T nukku] ei]] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C: [C/fin]
T: [, Neg/fin, C/fin]
nukku: [V, , Neg/fin, C/fin]
ei: [Neg/fin, C/fin]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei#foc".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 13
['nukkunut', 'Pekka', 'ei']


			=None

1.
		Next word contains multiple morphemes ['$T', 'nukku-']
			=T

2.

		Consume "nukku"

		T + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=T{V}

3.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=T{V}

4.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']

		Consume "D"

		T{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[T{V} D]

5.

		Consume "Pekka"

		[T{V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T{V} D{N}]

6.

		Consume "ei"

		[T{V} D{N}] + ei
			Filtering out impossible merge sites...
				Reject [[T [nukku [D Pekka]]] ei] due to bad left branch.
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[T{V} [[D Pekka] ei]]

7.
	>>>	Trying candidate parse [T{V} [[D Pekka] ei]] (1.)
		Reconstructing...
			Reconstructing head movement for [T{V} [[D Pekka] ei]].
				Extracted head "nukku" and reconstructed it = [T [nukku [[D Pekka] ei]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at ei
				= [T [nukku [[D Pekka] ei]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
				Extraposition will be tried on [T [nukku [[D Pekka] ei]]].
			= [T [nukku [[D Pekka] ei]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']

T: []
nukku: [V, ]
D: [D, Neg/fin, V, ]
Pekka: [N, D, Neg/fin, V, ]
ei: [Neg/fin, V, ]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 14
['nukkunut#foc', 'Pekka', 'ei']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'nukkunut']
			=C

2.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		C + T
			Filtering out impossible merge sites...
			Sink "T" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T]
			=C{}

3.

		Consume "nukku"

		C{} + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into C{} because they are inside the same phonological word.
		Exploring solution number (1) =[C{}*nukku]
			=C{,V}

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=C{,V}

5.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']

		Consume "D"

		C{,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{,V} D]
			C{,V} cannot be opened.
			=[C{,V} D]

6.

		Consume "Pekka"

		[C{,V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{,V} D{N}]

7.

		Consume "ei"

		[C{,V} D{N}] + ei
			Filtering out impossible merge sites...
				Reject [[C [[D Pekka] [T nukku]]] ei] due to bad left branch.
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[C{,V} [[D Pekka] ei]]

8.
	>>>	Trying candidate parse [C{,V} [[D Pekka] ei]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{,V} [[D Pekka] ei]].
				Head reconstruction failed for T{V}, merged locally as a last resort.
				Extracted head "T{V}" and reconstructed it = [C [[D Pekka] [ei T{V}]]]
				Extracted head "nukku" from T and created [C [[D Pekka] [ei [T nukku]]]]
			Dropping floaters...
				[D Pekka] is in an EPP SPEC position.
				Start reconstruction at [[D Pekka] [ei [T nukku]]]
				= [C [[D Pekka] [ei [T nukku]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of nukku
			= [C [[D Pekka] [ei [T [[D Pekka] nukku]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [[D Pekka]:1 [ei [T [(DP):1 nukku]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 8/68 operations) <------------------------------------
		Solution:
		[C [[D Pekka] [ei [T [[D Pekka] nukku]]]]]
		Grammar: [C [[D Pekka]:1 [ei [T [(DP):1 nukku]]]]]
		Spellout C/finP = [C/fin [DP:1 [Neg/fin [ [__:1 V]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

C: [C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
ei: [Neg/fin, C/fin]
T: [, Neg/fin, C/fin]
(D): [D, V, , Neg/fin, C/fin]
(N): [N, D, V, , Neg/fin, C/fin]
nukku: [V, , Neg/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 15
['nukkunut', 'ei', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$T', 'nukku-']
			=T

2.

		Consume "nukku"

		T + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=T{V}

3.

		Consume "ei"

		T{V} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T{V} ei]
			T{V} cannot be opened.
			=[T{V} ei]

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=[T{V} ei]

5.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']

		Consume "D"

		[T{V} ei] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid P as SPEC for D due to unselective SPEC feature.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [T [nukku ei]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				Avoid [ei D] due to local agreement failure.
ei {'D'}{'T'}
				Avoid ei because it could break words.
[(-294, Neg/fin), (-198, [ Neg/fin])]
		Ranking completed:
			1. [[T{V} ei]; D]
			2. [ei; D]
		Exploring solution number (1) =[[T{V} ei] D]
			Reconstructing head movement for [T{V} ei].
				Extracted head "nukku" and reconstructed it = [T [nukku ei]]
			Dropping floaters...
				= [T [nukku ei]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [T [nukku ei]].
			=[[T [nukku ei]] D]

6.

		Consume "Pekka"

		[[T [nukku ei]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[T [nukku ei]] D{N}]

7.
	>>>	Trying candidate parse [[T [nukku ei]] D{N}] (1.)
		Reconstructing...
			Reconstructing head movement for [[T [nukku ei]] D{N}].
				Extracted head "Pekka" from D and created [[T [nukku ei]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at <D Pekka>
				= [[T [nukku ei]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [[T [nukku ei]] <D Pekka>].
			= [[T [nukku ei]] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T: []
nukku: [V, ]
ei: [Neg/fin, V, ]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[ei D]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[T{V} [ei D]]

8.

		Consume "Pekka"

		[T{V} [ei D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T{V} [ei D{N}]]

9.
	>>>	Trying candidate parse [T{V} [ei D{N}]] (2.)
		Reconstructing...
			Reconstructing head movement for [T{V} [ei D{N}]].
				Extracted head "nukku" and reconstructed it = [T [nukku [ei D{N}]]]
				Extracted head "Pekka" from D and created [T [nukku [ei [D Pekka]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at <D Pekka>
				= [T [nukku [ei <D Pekka>]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				D failed internal tail test.
				Extraposition will be tried on [T [nukku [ei <D Pekka>]]].
			= [T [nukku [ei <D Pekka>]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				D failed internal tail test.
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T: []
nukku: [V, ]
ei: [Neg/fin, V, ]
D: [D, Neg/fin, V, ]
Pekka: [N, D, Neg/fin, V, ]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 16
['nukkunut#foc', 'ei', 'Pekka']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'nukkunut']
			=C

2.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		C + T
			Filtering out impossible merge sites...
			Sink "T" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T]
			=C{}

3.

		Consume "nukku"

		C{} + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into C{} because they are inside the same phonological word.
		Exploring solution number (1) =[C{}*nukku]
			=C{,V}

4.

		Consume "ei"

		C{,V} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{,V} ei]
			C{,V} cannot be opened.
			=[C{,V} ei]

5.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=[C{,V} ei]

6.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']

		Consume "D"

		[C{,V} ei] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [C [ei [T nukku]]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				Avoid [ei D] due to local agreement failure.
ei {'D'}{'T'}
				Avoid ei because it could break words.
[(-294, Neg/fin), (-198, [C/fin Neg/fin])]
		Ranking completed:
			1. [[C{,V} ei]; D]
			2. [ei; D]
		Exploring solution number (1) =[[C{,V} ei] D]
			Reconstructing head movement for [C{,V} ei].
				Head reconstruction failed for T{V}, merged locally as a last resort.
				Extracted head "T{V}" and reconstructed it = [C [ei T{V}]]
				Extracted head "nukku" from T and created [C [ei [T nukku]]]
			Dropping floaters...
				= [C [ei [T nukku]]]
			Dropping A-/A-bar movement.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [C [ei [T nukku]]].
			=[[C [ei [T nukku]]] D]

7.

		Consume "Pekka"

		[[C [ei [T nukku]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[C [ei [T nukku]]] D{N}]

8.
	>>>	Trying candidate parse [[C [ei [T nukku]]] D{N}] (1.)
		Reconstructing...
			Reconstructing head movement for [[C [ei [T nukku]]] D{N}].
				Extracted head "Pekka" from D and created [[C [ei [T nukku]]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at <D Pekka>
				= [[C [ei [T nukku]]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [[C [ei [T nukku]]] <D Pekka>].
			= [[C [ei [T nukku]]] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C: [C/fin]
ei: [Neg/fin, C/fin]
T: [, Neg/fin, C/fin]
nukku: [V, , Neg/fin, C/fin]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[ei D]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[C{,V} [ei D]]

9.

		Consume "Pekka"

		[C{,V} [ei D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{,V} [ei D{N}]]

10.
	>>>	Trying candidate parse [C{,V} [ei D{N}]] (2.)
		Reconstructing...
			Reconstructing head movement for [C{,V} [ei D{N}]].
				Extracted head "T{V}" and reconstructed it = [C [ei [T{V} D{N}]]]
				Extracted head "nukku" and reconstructed it = [C [ei [T [nukku D{N}]]]]
				Extracted head "Pekka" from D and created [C [ei [T [nukku [D Pekka]]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at [ei [T [nukku <D Pekka>]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<DP>:1 [ei [T [nukku <D Pekka>:1]]]]]
				= [C [<D Pekka> [ei [T [nukku <D Pekka>]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:1 from memory buffer into Spec of nukku
			= [C [<D Pekka> [ei [T [<D Pekka> [nukku <D Pekka>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<DP>:1 [ei [T [<DP>:1 [nukku <D Pekka>:1]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 10/132 operations) <------------------------------------
		Solution:
		[C [<D Pekka> [ei [T [<D Pekka> [nukku <D Pekka>]]]]]]
		Grammar: [C [<DP>:1 [ei [T [<DP>:1 [nukku <D Pekka>:1]]]]]]
		Spellout C/finP = [C/fin [__:1 [Neg/fin [ [__:1 [V DP:1]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C: [C/fin]
(D): [D, C/fin]
(N): [N, D, C/fin]
ei: [Neg/fin, C/fin]
T: [, Neg/fin, C/fin]
(D): [D, , Neg/fin, C/fin]
(N): [N, D, , Neg/fin, C/fin]
nukku: [V, , Neg/fin, C/fin]
D: [D, V, , Neg/fin, C/fin]
Pekka: [N, D, V, , Neg/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 17
['Pekka', 'nukkui', 'virtaamalla']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "nukku"

		[[D Pekka] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] T{V}]

6.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] T{V}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla.
T{V} {'ADV'}{'v', '*', 'V', 'D'}
nukku {'ADV'}{'P'}
				Avoid T{V} due to tail-head failure.
[(-99, [[D N] T/fin]), (-98, T/fin)]
		Ranking completed:
			1. [T{V}; malla]
			2. [[[D Pekka] T{V}]; malla]
		Exploring solution number (1) =[T{V} malla]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} malla]]

7.

		Consume "virtaa"

		[[D Pekka] [T{V} malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [T{V} malla{V}]]

8.
	>>>	Trying candidate parse [[D Pekka] [T{V} malla{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T{V} malla{V}]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T [nukku malla{V}]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [T [nukku [malla virtaa]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [T [nukku [malla virtaa]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:1 [T [<DP>:1 [nukku [malla virtaa]]]]]
				<malla virtaa> was made an adjunct.
				= [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]
			Dropping A-/A-bar movement.
			= [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 [nukku <malla virtaa>]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 8/74 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 [nukku <malla virtaa>]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [V ADVP]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
nukku: [V, T/fin]
malla: [ADV, V, T/fin]
virtaa: [V, ADV, V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 18
['Pekka#foc', 'nukkui', 'virtaamalla']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'LANG:FI', 'ABAR:FOC', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

6.

		Consume "nukku"

		[[D Pekka] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] T{V}]

7.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] T{V}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla.
T{V} {'ADV'}{'v', '*', 'V', 'D'}
nukku {'ADV'}{'P'}
				Avoid T{V} due to tail-head failure.
[(-99, [[D N] T/fin]), (-98, T/fin)]
		Ranking completed:
			1. [T{V}; malla]
			2. [[[D Pekka] T{V}]; malla]
		Exploring solution number (1) =[T{V} malla]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} malla]]

8.

		Consume "virtaa"

		[[D Pekka] [T{V} malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [T{V} malla{V}]]

9.
	>>>	Trying candidate parse [[D Pekka] [T{V} malla{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T{V} malla{V}]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T [nukku malla{V}]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [T [nukku [malla virtaa]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [T [nukku [malla virtaa]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:1 [T [<DP>:1 [nukku [malla virtaa]]]]]
				<malla virtaa> was made an adjunct.
				= [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'T/fin', 'FIN/T/fin', 'FIN'}
			= [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 [nukku <malla virtaa>]]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 9/81 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 [nukku <malla virtaa>]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [V ADVP]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
nukku: [V, T/fin]
malla: [ADV, V, T/fin]
virtaa: [V, ADV, V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 19
['Pekka', 'virtaamalla', 'nukkui']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		D{N} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[D Pekka] malla]

5.

		Consume "virtaa"

		[[D Pekka] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] malla{V}]

6.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T"

		[[D Pekka] malla{V}] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [malla virtaa]] T] due to bad left branch.
		Exploring solution number (1) =[malla{V} T]
			malla was opened.
			=[[D Pekka] [[malla virtaa] T]]

7.

		Consume "nukku"

		[[D Pekka] [[malla virtaa] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [[malla virtaa] T{V}]]

8.
	>>>	Trying candidate parse [[D Pekka] [[malla virtaa] T{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[malla virtaa] T{V}]].
				Extracted head "nukku" from T and created [[D Pekka] [[malla virtaa] [T nukku]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [[malla virtaa] [T nukku]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:1 [[malla virtaa] [T [<DP>:1 nukku]]]]
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [T [<DP>:1 nukku]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<D Pekka>:1 [<malla virtaa>:2 [T [<DP>:1 [nukku <ADVP>:2]]]]]
				= [<D Pekka> [<malla virtaa> [T [<D Pekka> [nukku <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<D Pekka>:1 [? [<malla virtaa>:2 [T [<DP>:1 [nukku <ADVP>:2]]]]]].
			= [<D Pekka> [? [<malla virtaa> [T [<D Pekka> [nukku <malla virtaa>]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D: [D]
Pekka: [N, D]
?: [?]
malla: [ADV, ?]
virtaa: [V, ADV, ?]
T: [T/fin, ?]
(D): [D, T/fin, ?]
(N): [N, D, T/fin, ?]
nukku: [V, T/fin, ?]
(ADV): [ADV, V, T/fin, ?]
(V): [V, ADV, V, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkui".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 20
['Pekka#foc', 'virtaamalla', 'nukkui']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'LANG:FI', 'ABAR:FOC', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		D{N} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[D Pekka] malla]

6.

		Consume "virtaa"

		[[D Pekka] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] malla{V}]

7.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T"

		[[D Pekka] malla{V}] + T
			Filtering out impossible merge sites...
				Reject [<[D Pekka] [malla virtaa]> T] due to bad left branch.
		Exploring solution number (1) =[malla{V} T]
			malla was opened.
			=[[D Pekka] [[malla virtaa] T]]

8.

		Consume "nukku"

		[[D Pekka] [[malla virtaa] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [[malla virtaa] T{V}]]

9.
	>>>	Trying candidate parse [[D Pekka] [[malla virtaa] T{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[malla virtaa] T{V}]].
				Extracted head "nukku" from T and created [[D Pekka] [[malla virtaa] [T nukku]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [[malla virtaa] [T nukku]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:1 [[malla virtaa] [T [<DP>:1 nukku]]]]
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [T [<DP>:1 nukku]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<D Pekka>:1 [<malla virtaa>:2 [T [<DP>:1 [nukku <ADVP>:2]]]]]
				= [<D Pekka> [<malla virtaa> [T [<D Pekka> [nukku <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T
			= [<D Pekka> [uFOC [<malla virtaa> [T [<D Pekka> [nukku <malla virtaa>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [uFOC [<malla virtaa>:2 [T [<DP>:1 [nukku <ADVP>:2]]]]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 9/75 operations) <------------------------------------
		Solution:
		[<D Pekka> [uFOC [<malla virtaa> [T [<D Pekka> [nukku <malla virtaa>]]]]]]
		Grammar: [<D Pekka>:1 [uFOC [<malla virtaa>:2 [T [<DP>:1 [nukku <ADVP>:2]]]]]]
		Spellout P = [DP:1 [ [ADVP:2 [T/fin [__:1 [V __:2]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D: [D]
Pekka: [N, D]
uFOC: []
malla: [ADV, ]
virtaa: [V, ADV, ]
T: [T/fin, ]
(D): [D, T/fin, ]
(N): [N, D, T/fin, ]
nukku: [V, T/fin, ]
(ADV): [ADV, V, T/fin, ]
(V): [V, ADV, V, T/fin, ]

			Checking if the sentence is ambiguous...


\========================================================================
# 21
['nukkui', 'Pekka', 'virtaamalla']


			=None

1.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']
			=T

2.

		Consume "nukku"

		T + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=T{V}

3.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=T{V}

4.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']

		Consume "D"

		T{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[T{V} D]

5.

		Consume "Pekka"

		[T{V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T{V} D{N}]

6.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[T{V} D{N}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla.
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [T [nukku [D Pekka]]] as left branch because it constitutes illicit structure.
D{N} {'ADV'}{'N', '*'}
Pekka {'ADV'}{'uR', 'R', 'R/D'}
				Avoid [Pekka malla] due to complement selection.
				Avoid D{N} due to tail-head failure.
			D was opened.
				Prioritize D{N} because all solutions were negative.
[(-198, [T/fin D]), (4, D)]
		Ranking completed:
			1. [D{N}; malla]
			2. [[T{V} D{N}]; malla]
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[T{V} [[D Pekka] malla]]

7.

		Consume "virtaa"

		[T{V} [[D Pekka] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[T{V} [[D Pekka] malla{V}]]

8.
	>>>	Trying candidate parse [T{V} [[D Pekka] malla{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [T{V} [[D Pekka] malla{V}]].
				Extracted head "nukku" and reconstructed it = [T [nukku [[D Pekka] malla{V}]]]
				Extracted head "virtaa" from malla and created [T [nukku [[D Pekka] [malla virtaa]]]]
			Dropping floaters...
				<malla virtaa> was made an adjunct.
				= [T [nukku [[D Pekka] <malla virtaa>]]]
			Dropping A-/A-bar movement.
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [T [nukku [[D Pekka] <malla virtaa>]]].
			= [T [nukku [[D Pekka] <malla virtaa>]]]
		Checking LF-interface conditions.
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

T: [T/fin]
nukku: [V, T/fin]
D: [D, V, T/fin]
Pekka: [N, D, V, T/fin]
malla: [ADV, V, T/fin]
virtaa: [V, ADV, V, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T{V} D{N}] malla]
			Reconstructing head movement for [T{V} D{N}].
				Extracted head "nukku" and reconstructed it = [T [nukku D{N}]]
				Extracted head "Pekka" from D and created [T [nukku [D Pekka]]]
			Dropping floaters...
				= [T [nukku [D Pekka]]]
			Dropping A-/A-bar movement.
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [T [nukku [D Pekka]]].
			=[[T [nukku [D Pekka]]] malla]

9.

		Consume "virtaa"

		[[T [nukku [D Pekka]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[T [nukku [D Pekka]]] malla{V}]

10.
	>>>	Trying candidate parse [[T [nukku [D Pekka]]] malla{V}] (2.)
		Reconstructing...
			Reconstructing head movement for [[T [nukku [D Pekka]]] malla{V}].
				Extracted head "virtaa" from malla and created [[T [nukku [D Pekka]]] [malla virtaa]]
			Dropping floaters...
				malla failed to tail.
				= [[T [nukku [D Pekka]]] [malla virtaa]]
			Dropping A-/A-bar movement.
				Moving "T nukku D Pekka " into memory buffer from SPEC of "malla".
				Memory buffer: [[T/fin [V [D N]]]]
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				malla has unaccetable specifier [T [nukku [D Pekka]]].
				Extraposition will be tried on [[T [nukku [D Pekka]]] [malla virtaa]].
			= [[T [nukku [D Pekka]]] [malla virtaa]]
		Checking LF-interface conditions.
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				malla has unaccetable specifier [T [nukku [D Pekka]]].
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

T: [T/fin]
nukku: [V, T/fin]
D: [D, V, T/fin]
Pekka: [N, D, V, T/fin]
malla: [ADV]
virtaa: [V, ADV]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkui".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 22
['nukkui#foc', 'Pekka', 'virtaamalla']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'nukkui']
			=C

2.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T"

		C + T
			Filtering out impossible merge sites...
			Sink "T" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T]
			=C{T/fin}

3.

		Consume "nukku"

		C{T/fin} + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into C{T/fin} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin}*nukku]
			=C{T/fin,V}

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=C{T/fin,V}

5.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']

		Consume "D"

		C{T/fin,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T/fin,V} D]
			C{T/fin,V} cannot be opened.
			=[C{T/fin,V} D]

6.

		Consume "Pekka"

		[C{T/fin,V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T/fin,V} D{N}]

7.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[C{T/fin,V} D{N}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
D{N} {'ADV'}{'N', '*'}
Pekka {'ADV'}{'uR', 'R', 'R/D'}
				Avoid [Pekka malla] due to complement selection.
[(-98, D), (0, [C/fin D])]
		Ranking completed:
			1. [[C{T/fin,V} D{N}]; malla]
			2. [D{N}; malla]
		Exploring solution number (1) =[[C{T/fin,V} D{N}] malla]
			Reconstructing head movement for [C{T/fin,V} D{N}].
				Head reconstruction failed for T{V}, merged locally as a last resort.
			Reconstructing head movement for D{N}.
				Extracted head "Pekka" from D and created [C{T/fin,V} [[D Pekka] T{V}]]
				Extracted head "T{V}" and reconstructed it = [C [[D Pekka] T{V}]]
				Extracted head "nukku" from T and created [C [[D Pekka] [T nukku]]]
			Dropping floaters...
				[D Pekka] is in an EPP SPEC position.
				Start reconstruction at [[D Pekka] [T nukku]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<D Pekka>:1 [T [<DP>:1 nukku]]]]
				= [C [<D Pekka> [T [<D Pekka> nukku]]]]
			Dropping A-/A-bar movement.
			=[[C [<D Pekka>:1 [T [<DP>:1 nukku]]]] malla]

8.

		Consume "virtaa"

		[[C [<D Pekka> [T [<D Pekka> nukku]]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[C [<D Pekka>:1 [T [<DP>:1 nukku]]]] malla{V}]

9.
	>>>	Trying candidate parse [[C [<D Pekka> [T [<D Pekka> nukku]]]] malla{V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[C [<D Pekka>:1 [T [<DP>:1 nukku]]]] malla{V}].
				Extracted head "virtaa" from malla and created [[C [<D Pekka>:1 [T [<DP>:1 nukku]]]] [malla virtaa]]
			Dropping floaters...
				malla failed to tail.
				= [[C [<D Pekka> [T [<D Pekka> nukku]]]] [malla virtaa]]
			Dropping A-/A-bar movement.
				Moving "C D Pekka T __nukku " into memory buffer from SPEC of "malla".
				Memory buffer: [[C/fin [[D N] [T/fin [[D N] V]]]]]
			= [[C [<D Pekka> [T [<D Pekka> nukku]]]] [malla virtaa]]
		Checking LF-interface conditions.
			malla<[ADV]> failed to tail features [CAT:V]
malla
			Final tail-head check failed.
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

C: [C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
T: [T/fin, C/fin]
(D): [D, V, T/fin, C/fin]
(N): [N, D, V, T/fin, C/fin]
nukku: [V, T/fin, C/fin]
malla: [ADV]
virtaa: [V, ADV]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} malla]
			D was opened.
			=[C{T/fin,V} [[D Pekka] malla]]

10.

		Consume "virtaa"

		[C{T/fin,V} [[D Pekka] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[C{T/fin,V} [[D Pekka] malla{V}]]

11.
	>>>	Trying candidate parse [C{T/fin,V} [[D Pekka] malla{V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [C{T/fin,V} [[D Pekka] malla{V}]].
				Extracted head "T{V}" and reconstructed it = [C [[D Pekka] [T{V} malla{V}]]]
				Extracted head "nukku" and reconstructed it = [C [[D Pekka] [T [nukku malla{V}]]]]
				Extracted head "virtaa" from malla and created [C [[D Pekka] [T [nukku [malla virtaa]]]]]
			Dropping floaters...
				[D Pekka] is in an EPP SPEC position.
				Start reconstruction at [[D Pekka] [T [nukku [malla virtaa]]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<D Pekka>:1 [T [<DP>:1 [nukku [malla virtaa]]]]]]
				<malla virtaa> was made an adjunct.
				= [C [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
			= [C [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<D Pekka>:1 [T [<DP>:1 [nukku <malla virtaa>]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 11/126 operations) <------------------------------------
		Solution:
		[C [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]]
		Grammar: [C [<D Pekka>:1 [T [<DP>:1 [nukku <malla virtaa>]]]]]
		Spellout C/finP = [C/fin [DP:1 [T/fin [__:1 [V ADVP]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

C: [C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
T: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
nukku: [V, T/fin, C/fin]
malla: [ADV, V, T/fin, C/fin]
virtaa: [V, ADV, V, T/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 23
['nukkui', 'virtaamalla', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']
			=T

2.

		Consume "nukku"

		T + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=T{V}

3.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		T{V} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T{V} malla]
			T{V} cannot be opened.
			=[T{V} malla]

4.

		Consume "virtaa"

		[T{V} malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[T{V} malla{V}]

5.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=[T{V} malla{V}]

6.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']

		Consume "D"

		[T{V} malla{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [T [nukku <malla virtaa>]] as left branch because it constitutes illicit structure.
				Avoid ADVP as SPEC for D due to unselective SPEC feature.
				Avoid [malla{V} D] due to local agreement failure.
malla{V} {'D'}{'*'}
virtaa {'D'}{'P'}
				Avoid [virtaa D] due to complement selection.
				Avoid malla{V} because it could break words.
			malla was opened.
				Prioritize malla{V} because all solutions were negative.
[(-198, [T/fin ADV]), (-192, ADV)]
		Ranking completed:
			1. [malla{V}; D]
			2. [[T{V} malla{V}]; D]
		Exploring solution number (1) =[malla{V} D]
			malla was opened.
			=[T{V} [[malla virtaa] D]]

7.

		Consume "Pekka"

		[T{V} [[malla virtaa] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T{V} [[malla virtaa] D{N}]]

8.
	>>>	Trying candidate parse [T{V} [[malla virtaa] D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [T{V} [[malla virtaa] D{N}]].
				Extracted head "nukku" and reconstructed it = [T [nukku [[malla virtaa] D{N}]]]
				Extracted head "Pekka" from D and created [T [nukku [[malla virtaa] [D Pekka]]]]
			Dropping floaters...
				= [T [nukku [[malla virtaa] [D Pekka]]]]
			Dropping A-/A-bar movement.
				Moving "malla virtaa " into memory buffer from SPEC of "D".
				Memory buffer: [[ADV V]]
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				D (D) has a specifier [malla virtaa] but is marked for -EPP behavior.
				Extraposition will be tried on [T [nukku [[malla virtaa] [D Pekka]]]].
				<D Pekka> was made adjunct by an extraposition rule.
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
			= [T [nukku [[malla virtaa] <D Pekka>]]]
		Checking LF-interface conditions.
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T: [T/fin]
nukku: [V, T/fin]
malla: [ADV, V, T/fin]
virtaa: [V, ADV, V, T/fin]
D: [D, V, T/fin]
Pekka: [N, D, V, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T{V} malla{V}] D]
			Reconstructing head movement for [T{V} malla{V}].
				Extracted head "nukku" and reconstructed it = [T [nukku malla{V}]]
				Extracted head "virtaa" from malla and created [T [nukku [malla virtaa]]]
			Dropping floaters...
				<malla virtaa> was made an adjunct.
				= [T [nukku <malla virtaa>]]
			Dropping A-/A-bar movement.
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [T [nukku <malla virtaa>]].
			=[[T [nukku <malla virtaa>]] D]

9.

		Consume "Pekka"

		[[T [nukku <malla virtaa>]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[T [nukku <malla virtaa>]] D{N}]

10.
	>>>	Trying candidate parse [[T [nukku <malla virtaa>]] D{N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[T [nukku <malla virtaa>]] D{N}].
				Extracted head "Pekka" from D and created [[T [nukku <malla virtaa>]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at <D Pekka>
				= [[T [nukku <malla virtaa>]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [[T [nukku <malla virtaa>]] <D Pekka>].
			= [[T [nukku <malla virtaa>]] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T: [T/fin]
nukku: [V, T/fin]
malla: [ADV, V, T/fin]
virtaa: [V, ADV, V, T/fin]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkui".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 24
['nukkui#foc', 'virtaamalla', 'Pekka']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'nukkui']
			=C

2.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T"

		C + T
			Filtering out impossible merge sites...
			Sink "T" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T]
			=C{T/fin}

3.

		Consume "nukku"

		C{T/fin} + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into C{T/fin} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin}*nukku]
			=C{T/fin,V}

4.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		C{T/fin,V} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T/fin,V} malla]
			C{T/fin,V} cannot be opened.
			=[C{T/fin,V} malla]

5.

		Consume "virtaa"

		[C{T/fin,V} malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[C{T/fin,V} malla{V}]

6.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=[C{T/fin,V} malla{V}]

7.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']

		Consume "D"

		[C{T/fin,V} malla{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [C [<malla virtaa> [T [nukku <malla virtaa>]]]] as left branch because it constitutes illicit structure.
				Avoid ADVP as SPEC for D due to unselective SPEC feature.
				Avoid [malla{V} D] due to local agreement failure.
malla{V} {'D'}{'*'}
virtaa {'D'}{'P'}
				Avoid [virtaa D] due to complement selection.
				Avoid malla{V} because it could break words.
			malla was opened.
				Prioritize malla{V} because all solutions were negative.
[(-198, [C/fin ADV]), (-192, ADV)]
		Ranking completed:
			1. [malla{V}; D]
			2. [[C{T/fin,V} malla{V}]; D]
		Exploring solution number (1) =[malla{V} D]
			malla was opened.
			=[C{T/fin,V} [[malla virtaa] D]]

8.

		Consume "Pekka"

		[C{T/fin,V} [[malla virtaa] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T/fin,V} [[malla virtaa] D{N}]]

9.
	>>>	Trying candidate parse [C{T/fin,V} [[malla virtaa] D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{T/fin,V} [[malla virtaa] D{N}]].
				Extracted head "T{V}" and reconstructed it = [C [[malla virtaa] [T{V} D{N}]]]
				Extracted head "nukku" and reconstructed it = [C [[malla virtaa] [T [nukku D{N}]]]]
				Extracted head "Pekka" from D and created [C [[malla virtaa] [T [nukku [D Pekka]]]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[malla virtaa] [T [nukku [D Pekka]]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [C [<malla virtaa>:1 [T [nukku [[D Pekka] <ADVP>:1]]]]]
				= [C [<malla virtaa> [T [nukku [[D Pekka] <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [C [<malla virtaa>:1 [T [nukku [[D Pekka] <ADVP>:1]]]]].
			= [C [<malla virtaa> [T [nukku [[D Pekka] <malla virtaa>]]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

C: [C/fin]
malla: [ADV, C/fin]
virtaa: [V, ADV, C/fin]
T: [T/fin, C/fin]
nukku: [V, T/fin, C/fin]
D: [D, V, T/fin, C/fin]
Pekka: [N, D, V, T/fin, C/fin]
(ADV): [ADV, V, T/fin, C/fin]
(V): [V, ADV, V, T/fin, C/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[C{T/fin,V} malla{V}] D]
			Reconstructing head movement for [C{T/fin,V} malla{V}].
				Head reconstruction failed for T{V}, merged locally as a last resort.
			Reconstructing head movement for malla{V}.
				Extracted head "virtaa" from malla and created [C{T/fin,V} [[malla virtaa] T{V}]]
				Extracted head "T{V}" and reconstructed it = [C [[malla virtaa] T{V}]]
				Extracted head "nukku" from T and created [C [[malla virtaa] [T nukku]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[malla virtaa] [T nukku]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [C [<malla virtaa>:1 [T [nukku <ADVP>:1]]]]
				= [C [<malla virtaa> [T [nukku <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [C [<malla virtaa>:1 [T [nukku <ADVP>:1]]]].
			=[[C [<malla virtaa>:1 [T [nukku <ADVP>:1]]]] D]

10.

		Consume "Pekka"

		[[C [<malla virtaa> [T [nukku <malla virtaa>]]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[C [<malla virtaa>:1 [T [nukku <ADVP>:1]]]] D{N}]

11.
	>>>	Trying candidate parse [[C [<malla virtaa> [T [nukku <malla virtaa>]]]] D{N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[C [<malla virtaa>:1 [T [nukku <ADVP>:1]]]] D{N}].
				Extracted head "Pekka" from D and created [[C [<malla virtaa>:1 [T [nukku <ADVP>:1]]]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at <D Pekka>
				= [[C [<malla virtaa> [T [nukku <malla virtaa>]]]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [[C [<malla virtaa>:1 [T [nukku <ADVP>:1]]]] <D Pekka>].
			= [[C [<malla virtaa> [T [nukku <malla virtaa>]]]] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C: [C/fin]
malla: [ADV, C/fin]
virtaa: [V, ADV, C/fin]
T: [T/fin, C/fin]
nukku: [V, T/fin, C/fin]
(ADV): [ADV, V, T/fin, C/fin]
(V): [V, ADV, V, T/fin, C/fin]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkui".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkui#foc".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 25
['virtaamalla', 'Pekka', 'nukkui']


			=None

1.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']
			=malla

2.

		Consume "virtaa"

		malla + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=malla{V}

3.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=malla{V}

4.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']

		Consume "D"

		malla{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[malla{V} D]
			malla was opened.
			=[[malla virtaa] D]

5.

		Consume "Pekka"

		[[malla virtaa] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[malla virtaa] D{N}]

6.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T"

		[[malla virtaa] D{N}] + T
			Filtering out impossible merge sites...
			Ranking remaining sites...
D{N} {'T/fin', 'FIN/T/fin', 'FIN'}{'N', '*'}
				Avoid [D{N} T] due to complement selection.
Pekka {'T/fin', 'FIN/T/fin', 'FIN'}{'uR', 'R', 'R/D'}
				Avoid [Pekka T] due to complement selection.
[(-196, D), (0, [[ADV V] D])]
		Ranking completed:
			1. [[[malla virtaa] D{N}]; T]
			2. [D{N}; T]
		Exploring solution number (1) =[[[malla virtaa] D{N}] T]
			Reconstructing head movement for [[malla virtaa] D{N}].
				Extracted head "Pekka" from D and created [[malla virtaa] [D Pekka]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [D Pekka]
				= [[malla virtaa] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "malla virtaa " into memory buffer from SPEC of "D".
				Memory buffer: [[ADV V]]
				D (D) has a specifier [malla virtaa] but is marked for -EPP behavior.
				Extraposition will be tried on [[malla virtaa] [D Pekka]].
				<D Pekka> was made adjunct by an extraposition rule.
			=[[[malla virtaa] <D Pekka>] T]

7.

		Consume "nukku"

		[[[malla virtaa] <D Pekka>] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[[malla virtaa] <D Pekka>] T{V}]

8.
	>>>	Trying candidate parse [[[malla virtaa] <D Pekka>] T{V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[[malla virtaa] <D Pekka>] T{V}].
				Extracted head "nukku" from T and created [[[malla virtaa] <D Pekka>] [T nukku]]
			Dropping floaters...
				[[malla virtaa] <D Pekka>] failed to tail [CAT:V]
				Start reconstruction at [T nukku]
				<[malla virtaa] <D Pekka>> was made an adjunct.
				Floater <[malla virtaa] <D Pekka>> dropped: [<[malla virtaa] <D Pekka>>:1 [T [nukku <ADVP>:1]]]
				= [<[malla virtaa] <D Pekka>> [T [nukku <[malla virtaa] <D Pekka>>]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [<[malla virtaa] <D Pekka>>:1 [T [nukku <ADVP>:1]]].
			= [<[malla virtaa] <D Pekka>> [T [nukku <[malla virtaa] <D Pekka>>]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']

malla: [ADV]
virtaa: [V, ADV]
D: [D]
Pekka: [N, D]
T: [T/fin]
nukku: [V, T/fin]
(ADV): [ADV, V, T/fin]
(V): [V, ADV, V, T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T]
			D was opened.
			=[[malla virtaa] [[D Pekka] T]]

9.

		Consume "nukku"

		[[malla virtaa] [[D Pekka] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[malla virtaa] [[D Pekka] T{V}]]

10.
	>>>	Trying candidate parse [[malla virtaa] [[D Pekka] T{V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [[malla virtaa] [[D Pekka] T{V}]].
				Extracted head "nukku" from T and created [[malla virtaa] [[D Pekka] [T nukku]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[D Pekka] [T nukku]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<malla virtaa>:1 [[D Pekka] [T [nukku <ADVP>:1]]]]
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [T [nukku <ADVP>:1]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<malla virtaa>:1 [<D Pekka>:2 [T [<DP>:2 [nukku <ADVP>:1]]]]]
				= [<malla virtaa> [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<malla virtaa>:1 [? [<D Pekka>:2 [T [<DP>:2 [nukku <ADVP>:1]]]]]].
			= [<malla virtaa> [? [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla: [ADV]
virtaa: [V, ADV]
?: [?]
D: [D, ?]
Pekka: [N, D, ?]
T: [T/fin, ?]
(D): [D, T/fin, ?]
(N): [N, D, T/fin, ?]
nukku: [V, T/fin, ?]
(ADV): [ADV, V, T/fin, ?]
(V): [V, ADV, V, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkui".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 26
['virtaamalla#foc', 'Pekka', 'nukkui']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'virtaamalla']
			=C

2.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		C + malla
			Filtering out impossible merge sites...
			Sink "malla" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*malla]
			=C{ADV}

3.

		Consume "virtaa"

		C{ADV} + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into C{ADV} because they are inside the same phonological word.
		Exploring solution number (1) =[C{ADV}*virtaa]
			=C{ADV,V}

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=C{ADV,V}

5.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']

		Consume "D"

		C{ADV,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{ADV,V} D]
			C{ADV,V} cannot be opened.
			=[C{ADV,V} D]

6.

		Consume "Pekka"

		[C{ADV,V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{ADV,V} D{N}]

7.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T"

		[C{ADV,V} D{N}] + T
			Filtering out impossible merge sites...
				Reject [[C [[D Pekka] <malla virtaa>]] T] due to bad left branch.
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[C{ADV,V} [[D Pekka] T]]

8.

		Consume "nukku"

		[C{ADV,V} [[D Pekka] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[C{ADV,V} [[D Pekka] T{V}]]

9.
	>>>	Trying candidate parse [C{ADV,V} [[D Pekka] T{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{ADV,V} [[D Pekka] T{V}]].
				Head reconstruction failed for malla{V}, merged locally as a last resort.
				Extracted head "malla{V}" and reconstructed it = [C [[D Pekka] [T{V} malla{V}]]]
				Extracted head "nukku" and reconstructed it = [C [[D Pekka] [T [nukku malla{V}]]]]
				Extracted head "virtaa" from malla and created [C [[D Pekka] [T [nukku [malla virtaa]]]]]
			Dropping floaters...
				[D Pekka] is in an EPP SPEC position.
				Start reconstruction at [[D Pekka] [T [nukku [malla virtaa]]]]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<D Pekka>:1 [T [<DP>:1 [nukku [malla virtaa]]]]]]
				<malla virtaa> was made an adjunct.
				= [C [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
			= [C [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<D Pekka>:1 [T [<DP>:1 [nukku <malla virtaa>]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 9/77 operations) <------------------------------------
		Solution:
		[C [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]]
		Grammar: [C [<D Pekka>:1 [T [<DP>:1 [nukku <malla virtaa>]]]]]
		Spellout C/finP = [C/fin [DP:1 [T/fin [__:1 [V ADVP]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

C: [C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
T: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
nukku: [V, T/fin, C/fin]
malla: [ADV, V, T/fin, C/fin]
virtaa: [V, ADV, V, T/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 27
['virtaamalla', 'nukkui', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']
			=malla

2.

		Consume "virtaa"

		malla + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=malla{V}

3.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T"

		malla{V} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[malla{V} T]
			malla was opened.
			=[[malla virtaa] T]

4.

		Consume "nukku"

		[[malla virtaa] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[malla virtaa] T{V}]

5.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=[[malla virtaa] T{V}]

6.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']

		Consume "D"

		[[malla virtaa] T{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [<malla virtaa> [T [nukku <malla virtaa>]]] as left branch because it constitutes illicit structure.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
T{V} {'D'}{'v', '*', 'V', 'D'}
				Prioritize [T{V} D] due to complement selection.
nukku {'D'}{'P'}
[(-198, [[ADV V] T/fin]), (4, T/fin)]
		Ranking completed:
			1. [T{V}; D]
			2. [[[malla virtaa] T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[malla virtaa] [T{V} D]]

7.

		Consume "Pekka"

		[[malla virtaa] [T{V} D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[malla virtaa] [T{V} D{N}]]

8.
	>>>	Trying candidate parse [[malla virtaa] [T{V} D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[malla virtaa] [T{V} D{N}]].
				Extracted head "nukku" and reconstructed it = [[malla virtaa] [T [nukku D{N}]]]
				Extracted head "Pekka" from D and created [[malla virtaa] [T [nukku [D Pekka]]]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [T [nukku [D Pekka]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<malla virtaa>:1 [T [nukku [[D Pekka] <ADVP>:1]]]]
				= [<malla virtaa> [T [nukku [[D Pekka] <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [<malla virtaa>:1 [T [nukku [[D Pekka] <ADVP>:1]]]].
			= [<malla virtaa> [T [nukku [[D Pekka] <malla virtaa>]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

malla: [ADV]
virtaa: [V, ADV]
T: [T/fin]
nukku: [V, T/fin]
D: [D, V, T/fin]
Pekka: [N, D, V, T/fin]
(ADV): [ADV, V, T/fin]
(V): [V, ADV, V, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[malla virtaa] T{V}] D]
			Reconstructing head movement for [[malla virtaa] T{V}].
				Extracted head "nukku" from T and created [[malla virtaa] [T nukku]]
			Dropping floaters...
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [T nukku]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [<malla virtaa>:1 [T [nukku <ADVP>:1]]]
				= [<malla virtaa> [T [nukku <malla virtaa>]]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [<malla virtaa>:1 [T [nukku <ADVP>:1]]].
			=[[<malla virtaa>:1 [T [nukku <ADVP>:1]]] D]

9.

		Consume "Pekka"

		[[<malla virtaa> [T [nukku <malla virtaa>]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[<malla virtaa>:1 [T [nukku <ADVP>:1]]] D{N}]

10.
	>>>	Trying candidate parse [[<malla virtaa> [T [nukku <malla virtaa>]]] D{N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[<malla virtaa>:1 [T [nukku <ADVP>:1]]] D{N}].
				Extracted head "Pekka" from D and created [[<malla virtaa>:1 [T [nukku <ADVP>:1]]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at <D Pekka>
				= [[<malla virtaa> [T [nukku <malla virtaa>]]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [[<malla virtaa>:1 [T [nukku <ADVP>:1]]] <D Pekka>].
			= [[<malla virtaa> [T [nukku <malla virtaa>]]] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

malla: [ADV]
virtaa: [V, ADV]
T: [T/fin]
nukku: [V, T/fin]
(ADV): [ADV, V, T/fin]
(V): [V, ADV, V, T/fin]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkui".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 28
['virtaamalla#foc', 'nukkui', 'Pekka']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'virtaamalla']
			=C

2.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		C + malla
			Filtering out impossible merge sites...
			Sink "malla" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*malla]
			=C{ADV}

3.

		Consume "virtaa"

		C{ADV} + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into C{ADV} because they are inside the same phonological word.
		Exploring solution number (1) =[C{ADV}*virtaa]
			=C{ADV,V}

4.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T"

		C{ADV,V} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{ADV,V} T]
			C{ADV,V} cannot be opened.
			=[C{ADV,V} T]

5.

		Consume "nukku"

		[C{ADV,V} T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[C{ADV,V} T{V}]

6.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=[C{ADV,V} T{V}]

7.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']

		Consume "D"

		[C{ADV,V} T{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [C [[T nukku] <malla virtaa>]] as left branch because it constitutes illicit structure.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
T{V} {'D'}{'v', '*', 'V', 'D'}
				Prioritize [T{V} D] due to complement selection.
nukku {'D'}{'P'}
				Avoid T{V} because it could break words.
[(-198, [C/fin T/fin]), (-94, T/fin)]
		Ranking completed:
			1. [T{V}; D]
			2. [[C{ADV,V} T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[C{ADV,V} [T{V} D]]

8.

		Consume "Pekka"

		[C{ADV,V} [T{V} D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{ADV,V} [T{V} D{N}]]

9.
	>>>	Trying candidate parse [C{ADV,V} [T{V} D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{ADV,V} [T{V} D{N}]].
				Head reconstruction failed for malla{V}, merged locally as a last resort.
				Extracted head "malla{V}" and reconstructed it = [C [T{V} [D{N} malla{V}]]]
				Extracted head "nukku" and reconstructed it = [C [T [nukku [D{N} malla{V}]]]]
				Extracted head "Pekka" and reconstructed it = [C [T [nukku [D [Pekka malla{V}]]]]]
				Extracted head "virtaa" from malla and created [C [T [nukku [D [Pekka [malla virtaa]]]]]]
			Dropping floaters...
				<malla virtaa> was made an adjunct.
				= [C [T [nukku [D [Pekka <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [C [T [nukku [D [Pekka <malla virtaa>]]]]].
			= [C [T [nukku [D [Pekka <malla virtaa>]]]]]
		Checking LF-interface conditions.
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

C: [C/fin]
T: [T/fin, C/fin]
nukku: [V, T/fin, C/fin]
D: [D, V, T/fin, C/fin]
Pekka: [N, D, V, T/fin, C/fin]
malla: [ADV, N, D, V, T/fin, C/fin]
virtaa: [V, ADV, N, D, V, T/fin, C/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[C{ADV,V} T{V}] D]
			Reconstructing head movement for [C{ADV,V} T{V}].
				Head reconstruction failed for malla{V}, merged locally as a last resort.
			Reconstructing head movement for T{V}.
				Extracted head "nukku" from T and created [C{ADV,V} [[T nukku] malla{V}]]
				Extracted head "malla{V}" and reconstructed it = [C [[T nukku] malla{V}]]
				Extracted head "virtaa" from malla and created [C [[T nukku] [malla virtaa]]]
			Dropping floaters...
				malla failed to tail.
				malla failed to tail.
				= [C [[T nukku] [malla virtaa]]]
			Dropping A-/A-bar movement.
				Moving "T nukku " into memory buffer from SPEC of "malla".
				Memory buffer: [[T/fin V]]
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				malla has unaccetable specifier [T nukku].
				Extraposition will be tried on [C [[T nukku] [malla virtaa]]].
				<malla virtaa> was made adjunct by an extraposition rule.
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
			=[[C [[T nukku] <malla virtaa>]] D]

10.

		Consume "Pekka"

		[[C [[T nukku] <malla virtaa>]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[C [[T nukku] <malla virtaa>]] D{N}]

11.
	>>>	Trying candidate parse [[C [[T nukku] <malla virtaa>]] D{N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[C [[T nukku] <malla virtaa>]] D{N}].
				Extracted head "Pekka" from D and created [[C [[T nukku] <malla virtaa>]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				Start reconstruction at <D Pekka>
				malla failed to tail.
				= [[C [[T nukku] <malla virtaa>]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [[C [[T nukku] <malla virtaa>]] <D Pekka>].
			= [[C [[T nukku] <malla virtaa>]] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C: [C/fin]
T: [T/fin, C/fin]
nukku: [V, T/fin, C/fin]
malla: [ADV, C/fin]
virtaa: [V, ADV, C/fin]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkui".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla#foc".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 29
['Pekka', 'ei', 'nukkunut', 'virtaamalla']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "nukku"

		[[D Pekka] [ei T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [ei T{V}]]

7.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [ei T{V}]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla.
				Avoid Neg/finP as SPEC, malla.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [ei [T nukku]] as left branch because it constitutes illicit structure.
T{V} {'ADV'}{'v', '*', 'V', 'D'}
nukku {'ADV'}{'P'}
[(-196, [Neg/fin ]), (-99, [[D N] [Neg/fin ]]), (0, )]
		Ranking completed:
			1. [T{V}; malla]
			2. [[[D Pekka] [ei T{V}]]; malla]
			3. [[ei T{V}]; malla]
		Exploring solution number (1) =[T{V} malla]
			T{V} cannot be opened.
			=[[D Pekka] [ei [T{V} malla]]]

8.

		Consume "virtaa"

		[[D Pekka] [ei [T{V} malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [ei [T{V} malla{V}]]]

9.
	>>>	Trying candidate parse [[D Pekka] [ei [T{V} malla{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{V} malla{V}]]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [ei [T [nukku malla{V}]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [ei [T [nukku [malla virtaa]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [ei [T [nukku [malla virtaa]]]]
				<malla virtaa> was made an adjunct.
				= [[D Pekka] [ei [T [nukku <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of nukku
			= [[D Pekka] [ei [T [[D Pekka] [nukku <malla virtaa>]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:1 [ei [T [(DP):1 [nukku <malla virtaa>]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 9/93 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [T [[D Pekka] [nukku <malla virtaa>]]]]]
		Grammar: [[D Pekka]:1 [ei [T [(DP):1 [nukku <malla virtaa>]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 [V ADVP]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
nukku: [V, , Neg/fin]
malla: [ADV, V, , Neg/fin]
virtaa: [V, ADV, V, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 30
['Pekka#foc', 'ei', 'nukkunut', 'virtaamalla']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'LANG:FI', 'ABAR:FOC', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

6.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

7.

		Consume "nukku"

		[[D Pekka] [ei T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [ei T{V}]]

8.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [ei T{V}]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla.
				Avoid Neg/finP as SPEC, malla.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [ei [T nukku]] as left branch because it constitutes illicit structure.
T{V} {'ADV'}{'v', '*', 'V', 'D'}
nukku {'ADV'}{'P'}
[(-196, [Neg/fin ]), (-99, [[D N] [Neg/fin ]]), (0, )]
		Ranking completed:
			1. [T{V}; malla]
			2. [[[D Pekka] [ei T{V}]]; malla]
			3. [[ei T{V}]; malla]
		Exploring solution number (1) =[T{V} malla]
			T{V} cannot be opened.
			=[[D Pekka] [ei [T{V} malla]]]

9.

		Consume "virtaa"

		[[D Pekka] [ei [T{V} malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [ei [T{V} malla{V}]]]

10.
	>>>	Trying candidate parse [[D Pekka] [ei [T{V} malla{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{V} malla{V}]]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [ei [T [nukku malla{V}]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [ei [T [nukku [malla virtaa]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [ei [T [nukku [malla virtaa]]]]
				<malla virtaa> was made an adjunct.
				= [[D Pekka] [ei [T [nukku <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Criterial features {'FOC'} copied to {'NEG', 'FIN/NEG/Neg/fin', 'Neg/fin', 'FIN'}
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of nukku
			= [[D Pekka] [ei [T [[D Pekka] [nukku <malla virtaa>]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:1 [ei [T [(DP):1 [nukku <malla virtaa>]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 10/99 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [T [[D Pekka] [nukku <malla virtaa>]]]]]
		Grammar: [[D Pekka]:1 [ei [T [(DP):1 [nukku <malla virtaa>]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 [V ADVP]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/uFOC', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:uFOC', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/uFOC', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:uFOC', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
nukku: [V, , Neg/fin]
malla: [ADV, V, , Neg/fin]
virtaa: [V, ADV, V, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 31
['Pekka', 'ei', 'virtaamalla', 'nukkunut']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] ei] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla.
				D failed internal tail test.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
				Avoid [[D Pekka] ei] as left branch because it constitutes illicit structure.
ei {'ADV'}{'T'}
[(-198, [[D N] Neg/fin]), (0, Neg/fin)]
		Ranking completed:
			1. [ei; malla]
			2. [[[D Pekka] ei]; malla]
		Exploring solution number (1) =[ei malla]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei malla]]

6.

		Consume "virtaa"

		[[D Pekka] [ei malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [ei malla{V}]]

7.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] [ei malla{V}]] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [malla virtaa]]] T] due to bad left branch.
				Reject [[ei [malla virtaa]] T] due to bad left branch.
		Exploring solution number (1) =[malla{V} T]
			malla was opened.
			=[[D Pekka] [ei [[malla virtaa] T]]]

8.

		Consume "nukku"

		[[D Pekka] [ei [[malla virtaa] T]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [ei [[malla virtaa] T{V}]]]

9.
	>>>	Trying candidate parse [[D Pekka] [ei [[malla virtaa] T{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [[malla virtaa] T{V}]]].
				Extracted head "nukku" from T and created [[D Pekka] [ei [[malla virtaa] [T nukku]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [ei [[malla virtaa] [T nukku]]]
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[malla virtaa] [T nukku]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [[D Pekka] [ei [<malla virtaa>:1 [T [nukku <ADVP>:1]]]]]
				= [[D Pekka] [ei [<malla virtaa> [T [nukku <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of nukku
			= [[D Pekka] [ei [<malla virtaa> [T [[D Pekka] [nukku <malla virtaa>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:2 [ei [<malla virtaa>:1 [T [(DP):2 [nukku <ADVP>:1]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 9/94 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [<malla virtaa> [T [[D Pekka] [nukku <malla virtaa>]]]]]]
		Grammar: [[D Pekka]:1 [ei [<malla virtaa>:2 [T [(DP):1 [nukku <ADVP>:2]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ADVP:2 [ [__:1 [V __:2]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
malla: [ADV, Neg/fin]
virtaa: [V, ADV, Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
nukku: [V, , Neg/fin]
(ADV): [ADV, V, , Neg/fin]
(V): [V, ADV, V, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 32
['Pekka#foc', 'ei', 'virtaamalla', 'nukkunut']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'LANG:FI', 'ABAR:FOC', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

6.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] ei] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla.
				D failed internal tail test.
				ei (ei) is missing a mandatory complement T
				[D Pekka]" has no thematic role
				Avoid [[D Pekka] ei] as left branch because it constitutes illicit structure.
ei {'ADV'}{'T'}
[(-198, [[D N] Neg/fin]), (0, Neg/fin)]
		Ranking completed:
			1. [ei; malla]
			2. [[[D Pekka] ei]; malla]
		Exploring solution number (1) =[ei malla]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei malla]]

7.

		Consume "virtaa"

		[[D Pekka] [ei malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [ei malla{V}]]

8.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] [ei malla{V}]] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [malla virtaa]]] T] due to bad left branch.
				Reject [[ei [malla virtaa]] T] due to bad left branch.
		Exploring solution number (1) =[malla{V} T]
			malla was opened.
			=[[D Pekka] [ei [[malla virtaa] T]]]

9.

		Consume "nukku"

		[[D Pekka] [ei [[malla virtaa] T]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [ei [[malla virtaa] T{V}]]]

10.
	>>>	Trying candidate parse [[D Pekka] [ei [[malla virtaa] T{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [[malla virtaa] T{V}]]].
				Extracted head "nukku" from T and created [[D Pekka] [ei [[malla virtaa] [T nukku]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [ei [[malla virtaa] [T nukku]]]
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[malla virtaa] [T nukku]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [[D Pekka] [ei [<malla virtaa>:1 [T [nukku <ADVP>:1]]]]]
				= [[D Pekka] [ei [<malla virtaa> [T [nukku <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Criterial features {'FOC'} copied to {'NEG', 'FIN/NEG/Neg/fin', 'Neg/fin', 'FIN'}
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of nukku
			= [[D Pekka] [ei [<malla virtaa> [T [[D Pekka] [nukku <malla virtaa>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:2 [ei [<malla virtaa>:1 [T [(DP):2 [nukku <ADVP>:1]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 10/100 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [<malla virtaa> [T [[D Pekka] [nukku <malla virtaa>]]]]]]
		Grammar: [[D Pekka]:1 [ei [<malla virtaa>:2 [T [(DP):1 [nukku <ADVP>:2]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ADVP:2 [ [__:1 [V __:2]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/uFOC', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:uFOC', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/uFOC', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:uFOC', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
malla: [ADV, Neg/fin]
virtaa: [V, ADV, Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
nukku: [V, , Neg/fin]
(ADV): [ADV, V, , Neg/fin]
(V): [V, ADV, V, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 33
['Pekka', 'nukkunut', 'ei', 'virtaamalla']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "nukku"

		[[D Pekka] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] T{V}]

6.

		Consume "ei"

		[[D Pekka] T{V}] + ei
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [T nukku]] ei] due to bad left branch.
		Exploring solution number (1) =[T{V} ei]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} ei]]

7.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [T{V} ei]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Avoid [[D Pekka] [T [nukku [[D Pekka] ei]]]] as left branch because it constitutes illicit structure.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [T [nukku ei]] as left branch because it constitutes illicit structure.
ei {'ADV'}{'T'}
[(-99, [[D N] [ Neg/fin]]), (-98, [ Neg/fin]), (0, Neg/fin)]
		Ranking completed:
			1. [ei; malla]
			2. [[T{V} ei]; malla]
			3. [[[D Pekka] [T{V} ei]]; malla]
		Exploring solution number (1) =[ei malla]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [T{V} [ei malla]]]

8.

		Consume "virtaa"

		[[D Pekka] [T{V} [ei malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [T{V} [ei malla{V}]]]

9.
	>>>	Trying candidate parse [[D Pekka] [T{V} [ei malla{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T{V} [ei malla{V}]]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T [nukku [ei malla{V}]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [T [nukku [ei [malla virtaa]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [T [nukku [ei [malla virtaa]]]]
				<malla virtaa> was made an adjunct.
				= [[D Pekka] [T [nukku [ei <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of ei
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [[D Pekka]:1 [T [nukku [(DP):1 [ei <malla virtaa>]]]]].
			= [[D Pekka] [T [nukku [[D Pekka] [ei <malla virtaa>]]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: []
nukku: [V, ]
(D): [D, V, ]
(N): [N, D, V, ]
ei: [Neg/fin, V, ]
malla: [ADV, Neg/fin, V, ]
virtaa: [V, ADV, Neg/fin, V, ]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T{V} ei] malla]
			Reconstructing head movement for [T{V} ei].
				Extracted head "nukku" and reconstructed it = [T [nukku ei]]
			Dropping floaters...
				= [T [nukku ei]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [T [nukku ei]].
			=[[D Pekka] [[T [nukku ei]] malla]]

10.

		Consume "virtaa"

		[[D Pekka] [[T [nukku ei]] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [[T [nukku ei]] malla{V}]]

11.
	>>>	Trying candidate parse [[D Pekka] [[T [nukku ei]] malla{V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[T [nukku ei]] malla{V}]].
				Extracted head "virtaa" from malla and created [[D Pekka] [[T [nukku ei]] [malla virtaa]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [[T [nukku ei]] [malla virtaa]]
				malla failed to tail.
				= [[D Pekka] [[T [nukku ei]] [malla virtaa]]]
			Dropping A-/A-bar movement.
				Moving "T nukku ei " into memory buffer from SPEC of "malla".
				Moving "D Pekka " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Memory buffer: [[ [V Neg/fin]], [D N]]
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [[D Pekka] [? [[T [nukku ei]] [malla virtaa]]]].
			= [[D Pekka] [? [[T [nukku ei]] [malla virtaa]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
?: [?]
T: [, ?]
nukku: [V, , ?]
ei: [Neg/fin, V, , ?]
malla: [ADV, ?]
virtaa: [V, ADV, ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D Pekka] [T{V} ei]] malla]
			Reconstructing head movement for [[D Pekka] [T{V} ei]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T [nukku ei]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [T [nukku ei]]
				= [[D Pekka] [T [nukku ei]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of ei
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [[D Pekka]:1 [T [nukku [(DP):1 ei]]]].
			=[[[D Pekka]:1 [T [nukku [(DP):1 ei]]]] malla]

12.

		Consume "virtaa"

		[[[D Pekka] [T [nukku [[D Pekka] ei]]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[D Pekka]:1 [T [nukku [(DP):1 ei]]]] malla{V}]

13.
	>>>	Trying candidate parse [[[D Pekka] [T [nukku [[D Pekka] ei]]]] malla{V}] (3.)
		Reconstructing...
			Reconstructing head movement for [[[D Pekka]:1 [T [nukku [(DP):1 ei]]]] malla{V}].
				Extracted head "virtaa" from malla and created [[[D Pekka]:1 [T [nukku [(DP):1 ei]]]] [malla virtaa]]
			Dropping floaters...
				malla failed to tail.
				= [[[D Pekka] [T [nukku [[D Pekka] ei]]]] [malla virtaa]]
			Dropping A-/A-bar movement.
				Moving "D Pekka T nukku __ei " into memory buffer from SPEC of "malla".
				Memory buffer: [[[D N] [ [V [[D N] Neg/fin]]]]]
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [[[D Pekka]:1 [T [nukku [(DP):1 ei]]]] [malla virtaa]].
			= [[[D Pekka] [T [nukku [[D Pekka] ei]]]] [malla virtaa]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: []
nukku: [V, ]
(D): [D, Neg/fin, V, ]
(N): [N, D, Neg/fin, V, ]
ei: [Neg/fin, V, ]
malla: [ADV]
virtaa: [V, ADV]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 34
['Pekka#foc', 'nukkunut', 'ei', 'virtaamalla']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'LANG:FI', 'ABAR:FOC', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

6.

		Consume "nukku"

		[[D Pekka] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] T{V}]

7.

		Consume "ei"

		[[D Pekka] T{V}] + ei
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [T nukku]] ei] due to bad left branch.
		Exploring solution number (1) =[T{V} ei]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} ei]]

8.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [T{V} ei]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Avoid [[D Pekka] [T [nukku [[D Pekka] ei]]]] as left branch because it constitutes illicit structure.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Avoid [T [nukku ei]] as left branch because it constitutes illicit structure.
ei {'ADV'}{'T'}
[(-99, [[D N] [ Neg/fin]]), (-98, [ Neg/fin]), (0, Neg/fin)]
		Ranking completed:
			1. [ei; malla]
			2. [[T{V} ei]; malla]
			3. [[[D Pekka] [T{V} ei]]; malla]
		Exploring solution number (1) =[ei malla]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [T{V} [ei malla]]]

9.

		Consume "virtaa"

		[[D Pekka] [T{V} [ei malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [T{V} [ei malla{V}]]]

10.
	>>>	Trying candidate parse [[D Pekka] [T{V} [ei malla{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T{V} [ei malla{V}]]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T [nukku [ei malla{V}]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [T [nukku [ei [malla virtaa]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [T [nukku [ei [malla virtaa]]]]
				<malla virtaa> was made an adjunct.
				= [[D Pekka] [T [nukku [ei <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Criterial features {'FOC'} copied to {'T'}
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of ei
				Criterial features {'FOC'} copied to {'NEG', 'FIN/NEG/Neg/fin', 'Neg/fin', 'FIN'}
				Criterial features {'FOC'} copied to {'Neg/fin', 'FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/uFOC', 'uFOC', 'NEG', 'FIN/NEG/Neg/fin', 'FIN'}
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [[D Pekka]:1 [T [nukku [(DP):1 [ei <malla virtaa>]]]]].
			= [[D Pekka] [T [nukku [[D Pekka] [ei <malla virtaa>]]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/uFOC/FIN/NEG/Neg/fin/NEG/Neg/fin/uFOC', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/uFOC', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:uFOC', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: []
nukku: [V, ]
(D): [D, V, ]
(N): [N, D, V, ]
ei: [Neg/fin, V, ]
malla: [ADV, Neg/fin, V, ]
virtaa: [V, ADV, Neg/fin, V, ]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T{V} ei] malla]
			Reconstructing head movement for [T{V} ei].
				Extracted head "nukku" and reconstructed it = [T [nukku ei]]
			Dropping floaters...
				= [T [nukku ei]]
			Dropping A-/A-bar movement.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [T [nukku ei]].
			=[[D Pekka] [[T [nukku ei]] malla]]

11.

		Consume "virtaa"

		[[D Pekka] [[T [nukku ei]] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [[T [nukku ei]] malla{V}]]

12.
	>>>	Trying candidate parse [[D Pekka] [[T [nukku ei]] malla{V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[T [nukku ei]] malla{V}]].
				Extracted head "virtaa" from malla and created [[D Pekka] [[T [nukku ei]] [malla virtaa]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [[T [nukku ei]] [malla virtaa]]
				malla failed to tail.
				= [[D Pekka] [[T [nukku ei]] [malla virtaa]]]
			Dropping A-/A-bar movement.
				Moving "T nukku ei " into memory buffer from SPEC of "malla".
				Moving "D Pekka " into memory buffer from SPEC of "malla".
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at malla
				Memory buffer: [[ [V Neg/fin]], [D N]]
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [[D Pekka] [uFOC [[T [nukku ei]] [malla virtaa]]]].
			= [[D Pekka] [uFOC [[T [nukku ei]] [malla virtaa]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
uFOC: []
T: [, ]
nukku: [V, , ]
ei: [Neg/fin, V, , ]
malla: [ADV, ]
virtaa: [V, ADV, ]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D Pekka] [T{V} ei]] malla]
			Reconstructing head movement for [[D Pekka] [T{V} ei]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T [nukku ei]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [T [nukku ei]]
				= [[D Pekka] [T [nukku ei]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Criterial features {'FOC'} copied to {'T'}
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of ei
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [[D Pekka]:1 [T [nukku [(DP):1 ei]]]].
			=[[[D Pekka]:1 [T [nukku [(DP):1 ei]]]] malla]

13.

		Consume "virtaa"

		[[[D Pekka] [T [nukku [[D Pekka] ei]]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[D Pekka]:1 [T [nukku [(DP):1 ei]]]] malla{V}]

14.
	>>>	Trying candidate parse [[[D Pekka] [T [nukku [[D Pekka] ei]]]] malla{V}] (3.)
		Reconstructing...
			Reconstructing head movement for [[[D Pekka]:1 [T [nukku [(DP):1 ei]]]] malla{V}].
				Extracted head "virtaa" from malla and created [[[D Pekka]:1 [T [nukku [(DP):1 ei]]]] [malla virtaa]]
			Dropping floaters...
				malla failed to tail.
				= [[[D Pekka] [T [nukku [[D Pekka] ei]]]] [malla virtaa]]
			Dropping A-/A-bar movement.
				Moving "D Pekka T nukku __ei " into memory buffer from SPEC of "malla".
				Memory buffer: [[[D N] [ [V [[D N] Neg/fin]]]]]
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [[[D Pekka]:1 [T [nukku [(DP):1 ei]]]] [malla virtaa]].
			= [[[D Pekka] [T [nukku [[D Pekka] ei]]]] [malla virtaa]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: []
nukku: [V, ]
(D): [D, Neg/fin, V, ]
(N): [N, D, Neg/fin, V, ]
ei: [Neg/fin, V, ]
malla: [ADV]
virtaa: [V, ADV]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka#foc".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 35
['Pekka', 'nukkunut', 'virtaamalla', 'ei']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "nukku"

		[[D Pekka] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] T{V}]

6.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] T{V}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [[D Pekka] [T nukku]] as left branch because it constitutes illicit structure.
T{V} {'ADV'}{'v', '*', 'V', 'D'}
nukku {'ADV'}{'P'}
[(-99, [[D N] ]), (0, )]
		Ranking completed:
			1. [T{V}; malla]
			2. [[[D Pekka] T{V}]; malla]
		Exploring solution number (1) =[T{V} malla]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} malla]]

7.

		Consume "virtaa"

		[[D Pekka] [T{V} malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [T{V} malla{V}]]

8.

		Consume "ei"

		[[D Pekka] [T{V} malla{V}]] + ei
			Filtering out impossible merge sites...
				Reject [[T [nukku <malla virtaa>]] ei] due to bad left branch.
			Ranking remaining sites...
malla{V} {'NEG', 'FIN/NEG/Neg/fin', 'Neg/fin', 'FIN'}{'*'}
virtaa {'NEG', 'FIN/NEG/Neg/fin', 'Neg/fin', 'FIN'}{'P'}
				Avoid malla{V} because it could break words.
[(-98, ADV), (0, [[D N] [ ADV]])]
		Ranking completed:
			1. [[[D Pekka] [T{V} malla{V}]]; ei]
			2. [malla{V}; ei]
		Exploring solution number (1) =[[[D Pekka] [T{V} malla{V}]] ei]
			Reconstructing head movement for [[D Pekka] [T{V} malla{V}]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T [nukku malla{V}]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [T [nukku [malla virtaa]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [T [nukku [malla virtaa]]]
				<malla virtaa> was made an adjunct.
				= [[D Pekka] [T [nukku <malla virtaa>]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of nukku
			=[[[D Pekka]:1 [T [(DP):1 [nukku <malla virtaa>]]]] ei]

9.
	>>>	Trying candidate parse [[[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]] ei] (1.)
		Reconstructing...
			Reconstructing head movement for [[[D Pekka]:1 [T [(DP):1 [nukku <malla virtaa>]]]] ei].
			Dropping floaters...
				= [[[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]] ei]
			Dropping A-/A-bar movement.
			= [[[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]] ei]
		Checking LF-interface conditions.
			Trying to transfer [[[D Pekka]:1 [T [(DP):1 [nukku <malla virtaa>]]]] ei] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 9/94 operations) <------------------------------------
		Solution:
		[[[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]] ei]
		Grammar: [[[D Pekka]:1 [T [(DP):1 [nukku <malla virtaa>]]]] ei]
		Spellout Neg/finP = [P Neg/fin]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']

D: [D, Neg/fin]
Pekka: [N, D, Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
nukku: [V, , Neg/fin]
malla: [ADV, V, , Neg/fin]
virtaa: [V, ADV, V, , Neg/fin]
ei: [Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 36
['Pekka#foc', 'nukkunut', 'virtaamalla', 'ei']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'LANG:FI', 'ABAR:FOC', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

6.

		Consume "nukku"

		[[D Pekka] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] T{V}]

7.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] T{V}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [[D Pekka] [T nukku]] as left branch because it constitutes illicit structure.
T{V} {'ADV'}{'v', '*', 'V', 'D'}
nukku {'ADV'}{'P'}
[(-99, [[D N] ]), (0, )]
		Ranking completed:
			1. [T{V}; malla]
			2. [[[D Pekka] T{V}]; malla]
		Exploring solution number (1) =[T{V} malla]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} malla]]

8.

		Consume "virtaa"

		[[D Pekka] [T{V} malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [T{V} malla{V}]]

9.

		Consume "ei"

		[[D Pekka] [T{V} malla{V}]] + ei
			Filtering out impossible merge sites...
				Reject [[T [nukku <malla virtaa>]] ei] due to bad left branch.
			Ranking remaining sites...
malla{V} {'NEG', 'FIN/NEG/Neg/fin', 'Neg/fin', 'FIN'}{'*'}
virtaa {'NEG', 'FIN/NEG/Neg/fin', 'Neg/fin', 'FIN'}{'P'}
				Avoid malla{V} because it could break words.
[(-98, ADV), (0, [[D N] [ ADV]])]
		Ranking completed:
			1. [[[D Pekka] [T{V} malla{V}]]; ei]
			2. [malla{V}; ei]
		Exploring solution number (1) =[[[D Pekka] [T{V} malla{V}]] ei]
			Reconstructing head movement for [[D Pekka] [T{V} malla{V}]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T [nukku malla{V}]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [T [nukku [malla virtaa]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [T [nukku [malla virtaa]]]
				<malla virtaa> was made an adjunct.
				= [[D Pekka] [T [nukku <malla virtaa>]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Criterial features {'FOC'} copied to {'T'}
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of nukku
			=[[[D Pekka]:1 [T [(DP):1 [nukku <malla virtaa>]]]] ei]

10.
	>>>	Trying candidate parse [[[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]] ei] (1.)
		Reconstructing...
			Reconstructing head movement for [[[D Pekka]:1 [T [(DP):1 [nukku <malla virtaa>]]]] ei].
			Dropping floaters...
				= [[[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]] ei]
			Dropping A-/A-bar movement.
			= [[[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]] ei]
		Checking LF-interface conditions.
			Trying to transfer [[[D Pekka]:1 [T [(DP):1 [nukku <malla virtaa>]]]] ei] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 10/100 operations) <------------------------------------
		Solution:
		[[[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]] ei]
		Grammar: [[[D Pekka]:1 [T [(DP):1 [nukku <malla virtaa>]]]] ei]
		Spellout Neg/finP = [P Neg/fin]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'CAT:T/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']

D: [D, Neg/fin]
Pekka: [N, D, Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
nukku: [V, , Neg/fin]
malla: [ADV, V, , Neg/fin]
virtaa: [V, ADV, V, , Neg/fin]
ei: [Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 37
['Pekka', 'virtaamalla', 'ei', 'nukkunut']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		D{N} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[D Pekka] malla]

5.

		Consume "virtaa"

		[[D Pekka] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] malla{V}]

6.

		Consume "ei"

		[[D Pekka] malla{V}] + ei
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [malla virtaa]] ei] due to bad left branch.
		Exploring solution number (1) =[malla{V} ei]
			malla was opened.
			=[[D Pekka] [[malla virtaa] ei]]

7.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] [[malla virtaa] ei]] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [[malla virtaa] ei]] T] due to bad left branch.
				Reject [[[malla virtaa] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [[malla virtaa] [ei T]]]

8.

		Consume "nukku"

		[[D Pekka] [[malla virtaa] [ei T]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [[malla virtaa] [ei T{V}]]]

9.
	>>>	Trying candidate parse [[D Pekka] [[malla virtaa] [ei T{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[malla virtaa] [ei T{V}]]].
				Extracted head "nukku" from T and created [[D Pekka] [[malla virtaa] [ei [T nukku]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [[malla virtaa] [ei [T nukku]]]
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [ei [T nukku]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [[D Pekka] [<malla virtaa>:1 [ei [T [nukku <ADVP>:1]]]]]
				= [[D Pekka] [<malla virtaa> [ei [T [nukku <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				New head was spawned due to multiple specifiers at ei but its category is unknown!
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of nukku
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [[D Pekka]:2 [? [<malla virtaa>:1 [ei [T [(DP):2 [nukku <ADVP>:1]]]]]]].
			= [[D Pekka] [? [<malla virtaa> [ei [T [[D Pekka] [nukku <malla virtaa>]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D: [D]
Pekka: [N, D]
?: [?]
malla: [ADV, ?]
virtaa: [V, ADV, ?]
ei: [Neg/fin, ?]
T: [, Neg/fin, ?]
(D): [D, , Neg/fin, ?]
(N): [N, D, , Neg/fin, ?]
nukku: [V, , Neg/fin, ?]
(ADV): [ADV, V, , Neg/fin, ?]
(V): [V, ADV, V, , Neg/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 38
['Pekka#foc', 'virtaamalla', 'ei', 'nukkunut']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'LANG:FI', 'ABAR:FOC', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		D{N} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[D Pekka] malla]

6.

		Consume "virtaa"

		[[D Pekka] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] malla{V}]

7.

		Consume "ei"

		[[D Pekka] malla{V}] + ei
			Filtering out impossible merge sites...
				Reject [<[D Pekka] [malla virtaa]> ei] due to bad left branch.
		Exploring solution number (1) =[malla{V} ei]
			malla was opened.
			=[[D Pekka] [[malla virtaa] ei]]

8.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] [[malla virtaa] ei]] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [[malla virtaa] ei]] T] due to bad left branch.
				Reject [[[malla virtaa] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [[malla virtaa] [ei T]]]

9.

		Consume "nukku"

		[[D Pekka] [[malla virtaa] [ei T]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [[malla virtaa] [ei T{V}]]]

10.
	>>>	Trying candidate parse [[D Pekka] [[malla virtaa] [ei T{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[malla virtaa] [ei T{V}]]].
				Extracted head "nukku" from T and created [[D Pekka] [[malla virtaa] [ei [T nukku]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [[malla virtaa] [ei [T nukku]]]
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [ei [T nukku]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [[D Pekka] [<malla virtaa>:1 [ei [T [nukku <ADVP>:1]]]]]
				= [[D Pekka] [<malla virtaa> [ei [T [nukku <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at ei
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of nukku
			= [[D Pekka] [uFOC [<malla virtaa> [ei [T [[D Pekka] [nukku <malla virtaa>]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:2 [uFOC [<malla virtaa>:1 [ei [T [(DP):2 [nukku <ADVP>:1]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 10/90 operations) <------------------------------------
		Solution:
		[[D Pekka] [uFOC [<malla virtaa> [ei [T [[D Pekka] [nukku <malla virtaa>]]]]]]]
		Grammar: [[D Pekka]:1 [uFOC [<malla virtaa>:2 [ei [T [(DP):1 [nukku <ADVP>:2]]]]]]]
		Spellout P = [DP:1 [ [ADVP:2 [Neg/fin [ [__:1 [V __:2]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D: [D]
Pekka: [N, D]
uFOC: []
malla: [ADV, ]
virtaa: [V, ADV, ]
ei: [Neg/fin, ]
T: [, Neg/fin, ]
(D): [D, , Neg/fin, ]
(N): [N, D, , Neg/fin, ]
nukku: [V, , Neg/fin, ]
(ADV): [ADV, V, , Neg/fin, ]
(V): [V, ADV, V, , Neg/fin, ]

			Checking if the sentence is ambiguous...


\========================================================================
# 39
['Pekka', 'virtaamalla', 'nukkunut', 'ei']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		D{N} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[D Pekka] malla]

5.

		Consume "virtaa"

		[[D Pekka] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] malla{V}]

6.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] malla{V}] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [malla virtaa]] T] due to bad left branch.
		Exploring solution number (1) =[malla{V} T]
			malla was opened.
			=[[D Pekka] [[malla virtaa] T]]

7.

		Consume "nukku"

		[[D Pekka] [[malla virtaa] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [[malla virtaa] T{V}]]

8.

		Consume "ei"

		[[D Pekka] [[malla virtaa] T{V}]] + ei
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [? [<malla virtaa> [T [[D Pekka] [nukku <malla virtaa>]]]]]] ei] due to bad left branch.
				Reject [[<malla virtaa> [T [nukku <malla virtaa>]]] ei] due to bad left branch.
		Exploring solution number (1) =[T{V} ei]
			T{V} cannot be opened.
			=[[D Pekka] [[malla virtaa] [T{V} ei]]]

9.
	>>>	Trying candidate parse [[D Pekka] [[malla virtaa] [T{V} ei]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[malla virtaa] [T{V} ei]]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [[malla virtaa] [T [nukku ei]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [[malla virtaa] [T [nukku ei]]]
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[malla virtaa] [T [nukku ei]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [[D Pekka] [<malla virtaa>:1 [T [nukku [ei <ADVP>:1]]]]]
				= [[D Pekka] [<malla virtaa> [T [nukku [ei <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				New head was spawned due to multiple specifiers at T but its category is unknown!
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of ei
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [[D Pekka]:2 [? [<malla virtaa>:1 [T [nukku [(DP):2 [ei <ADVP>:1]]]]]]].
			= [[D Pekka] [? [<malla virtaa> [T [nukku [[D Pekka] [ei <malla virtaa>]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D: [D]
Pekka: [N, D]
?: [?]
malla: [ADV, ?]
virtaa: [V, ADV, ?]
T: [, ?]
nukku: [V, , ?]
(D): [D, V, , ?]
(N): [N, D, V, , ?]
ei: [Neg/fin, V, , ?]
(ADV): [ADV, Neg/fin, V, , ?]
(V): [V, ADV, Neg/fin, V, , ?]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 40
['Pekka#foc', 'virtaamalla', 'nukkunut', 'ei']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'LANG:FI', 'ABAR:FOC', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		D{N} + malla
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[D Pekka] malla]

6.

		Consume "virtaa"

		[[D Pekka] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] malla{V}]

7.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] malla{V}] + T
			Filtering out impossible merge sites...
				Reject [<[D Pekka] [malla virtaa]> T] due to bad left branch.
		Exploring solution number (1) =[malla{V} T]
			malla was opened.
			=[[D Pekka] [[malla virtaa] T]]

8.

		Consume "nukku"

		[[D Pekka] [[malla virtaa] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [[malla virtaa] T{V}]]

9.

		Consume "ei"

		[[D Pekka] [[malla virtaa] T{V}]] + ei
			Filtering out impossible merge sites...
				Reject [[<malla virtaa> [T [nukku <malla virtaa>]]] ei] due to bad left branch.
			Ranking remaining sites...
T{V} {'NEG', 'FIN/NEG/Neg/fin', 'Neg/fin', 'FIN'}{'v', '*', 'V', 'D'}
nukku {'NEG', 'FIN/NEG/Neg/fin', 'Neg/fin', 'FIN'}{'P'}
[(0, [[D N] [[ADV V] ]]), (0, )]
		Ranking completed:
			1. [T{V}; ei]
			2. [[[D Pekka] [[malla virtaa] T{V}]]; ei]
		Exploring solution number (1) =[T{V} ei]
			T{V} cannot be opened.
			=[[D Pekka] [[malla virtaa] [T{V} ei]]]

10.
	>>>	Trying candidate parse [[D Pekka] [[malla virtaa] [T{V} ei]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[malla virtaa] [T{V} ei]]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [[malla virtaa] [T [nukku ei]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [[malla virtaa] [T [nukku ei]]]
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[malla virtaa] [T [nukku ei]]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [[D Pekka] [<malla virtaa>:1 [T [nukku [ei <ADVP>:1]]]]]
				= [[D Pekka] [<malla virtaa> [T [nukku [ei <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of ei
				Criterial features {'FOC'} copied to {'NEG', 'FIN/NEG/Neg/fin', 'Neg/fin', 'FIN'}
				Criterial features {'FOC'} copied to {'Neg/fin', 'FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/uFOC', 'uFOC', 'NEG', 'FIN/NEG/Neg/fin', 'FIN'}
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [[D Pekka]:2 [uFOC [<malla virtaa>:1 [T [nukku [(DP):2 [ei <ADVP>:1]]]]]]].
			= [[D Pekka] [uFOC [<malla virtaa> [T [nukku [[D Pekka] [ei <malla virtaa>]]]]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/uFOC/FIN/NEG/Neg/fin/NEG/Neg/fin/uFOC', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/uFOC', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:uFOC', 'LANG:FI', 'LF:not', 'PF:ei']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']

D: [D]
Pekka: [N, D]
uFOC: []
malla: [ADV, ]
virtaa: [V, ADV, ]
T: [, ]
nukku: [V, , ]
(D): [D, V, , ]
(N): [N, D, V, , ]
ei: [Neg/fin, V, , ]
(ADV): [ADV, Neg/fin, V, , ]
(V): [V, ADV, Neg/fin, V, , ]


		Trying to find other solutions...
		Exploring solution number (2) =[[[D Pekka] [[malla virtaa] T{V}]] ei]
			Reconstructing head movement for [[D Pekka] [[malla virtaa] T{V}]].
				Extracted head "nukku" from T and created [[D Pekka] [[malla virtaa] [T nukku]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [[malla virtaa] [T nukku]]
				[malla virtaa] failed to tail [CAT:V]
				Start reconstruction at [[malla virtaa] [T nukku]]
				<malla virtaa> was made an adjunct.
				Floater <malla virtaa> dropped: [[D Pekka] [<malla virtaa>:1 [T [nukku <ADVP>:1]]]]
				= [[D Pekka] [<malla virtaa> [T [nukku <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of nukku
			=[[[D Pekka]:2 [uFOC [<malla virtaa>:1 [T [(DP):2 [nukku <ADVP>:1]]]]]] ei]

11.
	>>>	Trying candidate parse [[[D Pekka] [uFOC [<malla virtaa> [T [[D Pekka] [nukku <malla virtaa>]]]]]] ei] (2.)
		Reconstructing...
			Reconstructing head movement for [[[D Pekka]:2 [uFOC [<malla virtaa>:1 [T [(DP):2 [nukku <ADVP>:1]]]]]] ei].
			Dropping floaters...
				= [[[D Pekka] [uFOC [<malla virtaa> [T [[D Pekka] [nukku <malla virtaa>]]]]]] ei]
			Dropping A-/A-bar movement.
				ei (ei) is missing a mandatory complement T
				Extraposition will be tried on [[[D Pekka]:2 [uFOC [<malla virtaa>:1 [T [(DP):2 [nukku <ADVP>:1]]]]]] ei].
			= [[[D Pekka] [uFOC [<malla virtaa> [T [[D Pekka] [nukku <malla virtaa>]]]]]] ei]
		Checking LF-interface conditions.
				ei (ei) is missing a mandatory complement T
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V', 'null']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P', 'null']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/uFOC/FIN/NEG/Neg/fin/NEG/Neg/fin/uFOC', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/uFOC', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:uFOC', 'LANG:FI', 'LF:not', 'PF:ei']

D: [D, Neg/fin]
Pekka: [N, D, Neg/fin]
uFOC: [, Neg/fin]
malla: [ADV, , Neg/fin]
virtaa: [V, ADV, , Neg/fin]
T: [, , Neg/fin]
(D): [D, , , Neg/fin]
(N): [N, D, , , Neg/fin]
nukku: [V, , , Neg/fin]
(ADV): [ADV, V, , , Neg/fin]
(V): [V, ADV, V, , , Neg/fin]
ei: [Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka#foc".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 41
['ei', 'Pekka', 'nukkunut', 'virtaamalla']


			=None

1.
			=ei

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=ei

3.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']

		Consume "D"

		ei + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[ei D]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[ei D]

4.

		Consume "Pekka"

		[ei D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[ei D{N}]

5.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[ei D{N}] + T
			Filtering out impossible merge sites...
				Reject [[ei <D Pekka>] T] due to bad left branch.
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[ei [[D Pekka] T]]

6.

		Consume "nukku"

		[ei [[D Pekka] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[ei [[D Pekka] T{V}]]

7.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[ei [[D Pekka] T{V}]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [ei [[D Pekka] [T nukku]]] as left branch because it constitutes illicit structure.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [[D Pekka] [T nukku]] as left branch because it constitutes illicit structure.
T{V} {'ADV'}{'v', '*', 'V', 'D'}
nukku {'ADV'}{'P'}
[(-198, [Neg/fin [[D N] ]]), (-98, [[D N] ]), (0, )]
		Ranking completed:
			1. [T{V}; malla]
			2. [[[D Pekka] T{V}]; malla]
			3. [[ei [[D Pekka] T{V}]]; malla]
		Exploring solution number (1) =[T{V} malla]
			T{V} cannot be opened.
			=[ei [[D Pekka] [T{V} malla]]]

8.

		Consume "virtaa"

		[ei [[D Pekka] [T{V} malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[ei [[D Pekka] [T{V} malla{V}]]]

9.
	>>>	Trying candidate parse [ei [[D Pekka] [T{V} malla{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [ei [[D Pekka] [T{V} malla{V}]]].
				Extracted head "nukku" and reconstructed it = [ei [[D Pekka] [T [nukku malla{V}]]]]
				Extracted head "virtaa" from malla and created [ei [[D Pekka] [T [nukku [malla virtaa]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [[D Pekka] [T [nukku [malla virtaa]]]]
				<malla virtaa> was made an adjunct.
				= [ei [[D Pekka] [T [nukku <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of nukku
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on [ei [[D Pekka]:1 [T [(DP):1 [nukku <malla virtaa>]]]]].
			= [ei [[D Pekka] [T [[D Pekka] [nukku <malla virtaa>]]]]]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

ei: [Neg/fin]
D: [D, Neg/fin]
Pekka: [N, D, Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
nukku: [V, , Neg/fin]
malla: [ADV, V, , Neg/fin]
virtaa: [V, ADV, V, , Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D Pekka] T{V}] malla]
			Reconstructing head movement for [[D Pekka] T{V}].
				Extracted head "nukku" from T and created [[D Pekka] [T nukku]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [T nukku]
				= [[D Pekka] [T nukku]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				An EPP-head "nukku" lacks specifier D that it requires.
			=[ei [[[D Pekka]:1 [T nukku]] malla]]

10.

		Consume "virtaa"

		[ei [[[D Pekka] [T nukku]] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[ei [[[D Pekka]:1 [T nukku]] malla{V}]]

11.
	>>>	Trying candidate parse [ei [[[D Pekka] [T nukku]] malla{V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [ei [[[D Pekka]:1 [T nukku]] malla{V}]].
				Extracted head "virtaa" from malla and created [ei [[[D Pekka]:1 [T nukku]] [malla virtaa]]]
			Dropping floaters...
				malla failed to tail.
				malla failed to tail.
				= [ei [[[D Pekka] [T nukku]] [malla virtaa]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka T nukku " into memory buffer from SPEC of "malla".
				Memory buffer: [[[D N] [ V]]]
				ei (ei) is missing a mandatory complement T
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [ei [[[D Pekka]:1 [T nukku]] [malla virtaa]]].
				<malla virtaa> was made adjunct by an extraposition rule.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
			= [ei [[[D Pekka] [T nukku]] <malla virtaa>]]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

ei: [Neg/fin]
D: [D, Neg/fin]
Pekka: [N, D, Neg/fin]
T: [, Neg/fin]
nukku: [V, , Neg/fin]
malla: [ADV, Neg/fin]
virtaa: [V, ADV, Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[ei [[D Pekka] T{V}]] malla]
			Reconstructing head movement for [ei [[D Pekka] T{V}]].
				Extracted head "nukku" from T and created [ei [[D Pekka] [T nukku]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:FIN]
				Start reconstruction at [[D Pekka] [T nukku]]
				= [ei [[D Pekka] [T nukku]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [ei [[D Pekka]:1 [T nukku]]].
			=[[ei [[D Pekka]:1 [T nukku]]] malla]

12.

		Consume "virtaa"

		[[ei [[D Pekka] [T nukku]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[ei [[D Pekka]:1 [T nukku]]] malla{V}]

13.
	>>>	Trying candidate parse [[ei [[D Pekka] [T nukku]]] malla{V}] (3.)
		Reconstructing...
			Reconstructing head movement for [[ei [[D Pekka]:1 [T nukku]]] malla{V}].
				Extracted head "virtaa" from malla and created [[ei [[D Pekka]:1 [T nukku]]] [malla virtaa]]
			Dropping floaters...
				malla failed to tail.
				= [[ei [[D Pekka] [T nukku]]] [malla virtaa]]
			Dropping A-/A-bar movement.
				Moving "ei D Pekka T nukku " into memory buffer from SPEC of "malla".
				Memory buffer: [[Neg/fin [[D N] [ V]]]]
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				malla has unaccetable specifier [ei [[D Pekka]:1 [T nukku]]].
				Extraposition will be tried on [[ei [[D Pekka]:1 [T nukku]]] [malla virtaa]].
			= [[ei [[D Pekka] [T nukku]]] [malla virtaa]]
		Checking LF-interface conditions.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				malla has unaccetable specifier [ei [[D Pekka]:1 [T nukku]]].
			LF-interface condition(s) violated
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

ei: [Neg/fin]
D: [D, Neg/fin]
Pekka: [N, D, Neg/fin]
T: [, Neg/fin]
nukku: [V, , Neg/fin]
malla: [ADV]
virtaa: [V, ADV]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 42
['ei#foc', 'Pekka', 'nukkunut', 'virtaamalla']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'ei']
			=C

2.

		Consume "ei"

		C + ei
			Filtering out impossible merge sites...
			Sink "ei" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*ei]
			=C{Neg/fin}

3.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'] into working memory.

		Consume "$D"

			=C{Neg/fin}

4.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,!COMP:*']

		Consume "D"

		C{Neg/fin} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{Neg/fin} D]
			C{Neg/fin} cannot be opened.
			=[C{Neg/fin} D]

5.

		Consume "Pekka"

		[C{Neg/fin} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{Neg/fin} D{N}]

6.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[C{Neg/fin} D{N}] + T
			Filtering out impossible merge sites...
				Reject [[C [[D Pekka] ei]] T] due to bad left branch.
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[C{Neg/fin} [[D Pekka] T]]

7.

		Consume "nukku"

		[C{Neg/fin} [[D Pekka] T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[C{Neg/fin} [[D Pekka] T{V}]]

8.
		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[C{Neg/fin} [[D Pekka] T{V}]] + malla
			Filtering out impossible merge sites...
