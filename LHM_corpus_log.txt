

\========================================================================
# 1
['taytyy#C/op', 'Pekka', 'sanoo', 'etta', 'Pekan', 'ihailla', 'Merjaa']


Using lexicon "lexicon.txt".
			=None

1.
		Decomposing a polymorphemic word taytyy#C/op.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['C/fin$', 'taytyy']
			=C/fin

2.
		Decomposing a polymorphemic word tayty-#T/fin#[-V].
		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'tayty-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"
		Adding inflectional features {'-', 'LANG:FI', 'PHI:PER:3', 'PHI:NUM:SG'} to T/fin
		Consume "T/fin"

		C/fin + T/fin
			Filtering out impossible merge sites...
			Sink "T/fin" into C/fin because they are inside the same phonological word.
		Exploring solution number (1) =[C/fin*T/fin]
			=C/fin{TT/fin}

4.
		Consume "taytyy"

		C/fin{TT/fin} + taytyy
			Filtering out impossible merge sites...
			Sink "taytyy" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[C/fin{TT/fin}*taytyy]
			=C/fin{TT/fin,V}

5.
		Decomposing a polymorphemic word Pekka-#D#nom#sg#3p#def#hum#def.
		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.
		Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,!COMP:*,ARG,VAL'] into working memory.
		Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'TAIL:CAT:FIN,!COMP:*,ARG,VAL', 'LANG:FI', 'PHI:PER:3', 'PHI:NUM:SG', '-', 'PHI:DET:DEF'} to D
		Consume "D"

		C/fin{TT/fin,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C/fin{TT/fin,V} D]
				1. Head movement reconstruction:
				=C/fin{TT/fin,V}
				2. Feature processing:
				=C/fin{TT/fin,V}
				3. Extraposition:
				=C/fin{TT/fin,V}
				4. Floater movement reconstruction:
				=C/fin{TT/fin,V}
				5. Phrasal movement reconstruction:
				=C/fin{TT/fin,V}
				6. Agreement reconstruction:
				=C/fin{TT/fin,V}
				7. Last resort extraposition:
				C/fin{TT/fin,V} probing for CAT:FIN failed.
				"C/fin{TT/fin,V}" lacks complement.
					Last resort extraposition will be tried on C/fin{TT/fin,V}.
					No suitable node for extraposition found; no action was taken.
			=[C/fin{TT/fin,V} D]

12.
		Consume "Pekka"

		[C/fin{TT/fin,V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C/fin{TT/fin,V} D{N}]

13.
		Decomposing a polymorphemic word sano-#T/fin#[-V].
		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.
		Consume "T/fin$"
		Adding inflectional features {'-', 'LANG:FI', 'PHI:PER:3', 'PHI:NUM:SG'} to T/fin
		Consume "T/fin"

		[C/fin{TT/fin,V} D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[C/fin [[T/fin{V} D] Pekka]] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[C/fin{TT/fin,V} [[D Pekka] T/fin]]

15.
		Consume "sano-"

		[C/fin{TT/fin,V} [[D Pekka] T/fin]] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*sano-]
			=[C/fin{TT/fin,V} [[D Pekka] T/fin{V}]]

16.
		Consume "että"

		[C/fin{TT/fin,V} [[D Pekka] T/fin{V}]] + että
			Filtering out impossible merge sites...
				Reject [[C/fin [<D Pekka> [T/fin [<D Pekka> [taytyy [T/fin sano-]]]]]] että] due to bad left branch.
				Reject [[<D Pekka> [T/fin [<D Pekka> sano-]]] että] due to bad left branch.
		Exploring solution number (1) =[T/fin{V} että]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found; no action was taken.
			=[C/fin{TT/fin,V} [[D Pekka] [T/fin{V} että]]]

17.
		Decomposing a polymorphemic word Pekka-#D#gen#sg#3p#def#hum#def.
		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'gen$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.
		Consume "gen$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:INF'] into working memory.
		Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:3', 'PHI:NUM:SG', '-', 'TAIL:CAT:INF', 'PHI:DET:DEF'} to D
		Consume "D"

		[C/fin{TT/fin,V} [[D Pekka] [T/fin{V} että]]] + D
			Filtering out impossible merge sites...
				Reject [[C/fin [<D Pekka> [T/fin [<D Pekka> [taytyy [T/fin [sano- että]]]]]]] D] due to bad left branch.
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- että]]]] D] due to bad left branch.
				Reject [[T/fin [sano- että]] D] due to bad left branch.
		Exploring solution number (1) =[että D]
				1. Head movement reconstruction:
				=että
				2. Feature processing:
				=että
				3. Extraposition:
				=että
				4. Floater movement reconstruction:
				=että
				5. Phrasal movement reconstruction:
				=että
				6. Agreement reconstruction:
				=että
				7. Last resort extraposition:
				että probing for CAT:T/fin failed.
				"että" lacks complement.
					Last resort extraposition will be tried on että.
					No suitable node for extraposition found; no action was taken.
			=[C/fin{TT/fin,V} [[D Pekka] [T/fin{V} [että D]]]]

24.
		Consume "Pekka"

		[C/fin{TT/fin,V} [[D Pekka] [T/fin{V} [että D]]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C/fin{TT/fin,V} [[D Pekka] [T/fin{V} [että D{N}]]]]

25.
		Decomposing a polymorphemic word ihaile-#v#A/inf.
		Next word contains multiple morphemes ['A/inf$', 'v$', 'ihaile-']
		Consume "A/inf"

		[C/fin{TT/fin,V} [[D Pekka] [T/fin{V} [että D{N}]]]] + A/inf
			Filtering out impossible merge sites...
				Reject [[C/fin [<D Pekka> [T/fin [<D Pekka> [taytyy [T/fin [sano- [että <D Pekka>]]]]]]]] A/inf] due to bad left branch.
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- [että <D Pekka>]]]]] A/inf] due to bad left branch.
				Reject [[T/fin [sano- [että <D Pekka>]]] A/inf] due to bad left branch.
				Reject [[että <D Pekka>] A/inf] due to bad left branch.
		Exploring solution number (1) =[D{N} A/inf]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[C/fin{TT/fin,V} [[D Pekka] [T/fin{V} [että [[D Pekka] A/inf]]]]]

26.
		Consume "v"

		[C/fin{TT/fin,V} [[D Pekka] [T/fin{V} [että [[D Pekka] A/inf]]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into A/inf because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf*v]
			=[C/fin{TT/fin,V} [[D Pekka] [T/fin{V} [että [[D Pekka] A/inf{v}]]]]]

27.
		Consume "ihaile-"

		[C/fin{TT/fin,V} [[D Pekka] [T/fin{V} [että [[D Pekka] A/inf{v}]]]]] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into v because they are inside the same phonological word.
		Exploring solution number (1) =[A/inf{v}*ihaile-]
			=[C/fin{TT/fin,V} [[D Pekka] [T/fin{V} [että [[D Pekka] A/inf{v,V}]]]]]

28.
		Decomposing a polymorphemic word Merja-#D#par#sg#3p#def#hum#def.
		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'par$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.
		Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.
		Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.
		Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.
		Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.
		Consume "par$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.
		Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:3', 'PHI:NUM:SG', 'TAIL:ARG,-VAL', '-', 'PHI:DET:DEF'} to D
		Consume "D"

		[C/fin{TT/fin,V} [[D Pekka] [T/fin{V} [että [[D Pekka] A/inf{v,V}]]]]] + D
			Filtering out impossible merge sites...
				Reject [[C/fin [<D Pekka> [T/fin [<D Pekka> [taytyy [T/fin [sano- [että [<D Pekka> [A/inf [<D Pekka> [v ihaile-]]]]]]]]]]]] D] due to bad left branch.
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- [että [<D Pekka> [A/inf [<D Pekka> [v ihaile-]]]]]]]]] D] due to bad left branch.
				Reject [[T/fin [sano- [että [<D Pekka> [A/inf [<D Pekka> [v ihaile-]]]]]]] D] due to bad left branch.
				Reject [[että [<D Pekka> [A/inf [<D Pekka> [v ihaile-]]]]] D] due to bad left branch.
			Ranking remaining sites...
				Avoid INFP as SPEC, D.
				ihaile- (ihaile-) is missing complement D
				Avoid [<D Pekka> [A/inf [<D Pekka> [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [A/inf{v,V} D] due to local agreement failure.
				Prioritize [ihaile- D] due to complement selection.
				[[D Pekka] A/inf{v,V}] + D = -197]
				A/inf{v,V} + D = 56]
		Ranking completed:
			1. [A/inf{v,V}; D]
			2. [[[D Pekka] A/inf{v,V}]; D]
		Exploring solution number (1) =[A/inf{v,V} D]
				1. Head movement reconstruction:
				=A/inf{v,V}
				2. Feature processing:
				=A/inf{v,V}
				3. Extraposition:
				=A/inf{v,V}
				4. Floater movement reconstruction:
				=A/inf{v,V}
				5. Phrasal movement reconstruction:
				=A/inf{v,V}
				6. Agreement reconstruction:
				=A/inf{v,V}
				7. Last resort extraposition:
				A/inf{v,V} probing for CAT:V failed.
				"A/inf{v,V}" lacks complement.
			=[C/fin{TT/fin,V} [[D Pekka] [T/fin{V} [että [[D Pekka] [A/inf{v,V} D]]]]]]

35.
		Consume "Merja-"

		[C/fin{TT/fin,V} [[D Pekka] [T/fin{V} [että [[D Pekka] [A/inf{v,V} D]]]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[C/fin{TT/fin,V} [[D Pekka] [T/fin{V} [että [[D Pekka] [A/inf{v,V} D{N}]]]]]]

36.
	>>>	Trying candidate parse [C/fin{TT/fin,V} [[D Pekka] [T/fin{V} [että [[D Pekka] [A/inf{v,V} D{N}]]]]]] (1.)
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[C/fin [[D Pekka] [T/fin [taytyy [T/fin [sano- [että [[D Pekka] [A/inf [v [ihaile- [D Merja-]]]]]]]]]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
				=[C/fin [[D Pekka] [T/fin [taytyy [T/fin [sano- [että [[D Pekka] [A/inf [v [ihaile- [D Merja-]]]]]]]]]]]]
				3. Extraposition:
				=[C/fin [[D Pekka] [T/fin [taytyy [T/fin [sano- [että [[D Pekka] [A/inf [v [ihaile- [D Merja-]]]]]]]]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [!COMP:*][ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [C/fin [<D Pekka>:15 [T/fin [<DP>:15 [taytyy [T/fin [sano- [että [[D Pekka] [A/inf [v [ihaile- [D Merja-]]]]]]]]]]]]]
					[D Pekka] failed to tail [CAT:INF]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [C/fin [<D Pekka>:15 [T/fin [<DP>:15 [taytyy [T/fin [sano- [että [<D Pekka>:16 [A/inf [<DP>:16 [v [ihaile- [D Merja-]]]]]]]]]]]]]]
				=[C/fin [<D Pekka>:15 [T/fin [<DP>:15 [taytyy [T/fin [sano- [että [<D Pekka>:16 [A/inf [<DP>:16 [v [ihaile- [D Merja-]]]]]]]]]]]]]]
				5. Phrasal movement reconstruction:
				=[C/fin [<D Pekka>:15 [T/fin [<DP>:15 [taytyy [T/fin [sano- [että [<D Pekka>:16 [A/inf [<DP>:16 [v [ihaile- [D Merja-]]]]]]]]]]]]]]
				6. Agreement reconstruction:
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:15.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					A/inf acquired PHI:NUM:SG by phi-Agree from <DP>:16.
					A/inf acquired PHI:PER:3 by phi-Agree from <DP>:16.
				=[C/fin [<D Pekka>:15 [T/fin [<DP>:15 [taytyy [T/fin [sano- [että [<D Pekka>:16 [A/inf [<DP>:16 [v [ihaile- [D Merja-]]]]]]]]]]]]]]
				7. Last resort extraposition:
					taytyy (taytyy) is missing a mandatory complement A/inf
				että probing for CAT:T/fin failed.
					Last resort extraposition will be tried on [C/fin [<D Pekka>:15 [T/fin [<DP>:15 [taytyy [T/fin [sano- [että [<D Pekka>:16 [A/inf [<DP>:16 [v [ihaile- [D Merja-]]]]]]]]]]]]]].
					No suitable node for extraposition found; no action was taken.
			= [C/fin [<D Pekka> [T/fin [<D Pekka> [taytyy [T/fin [sano- [että [<D Pekka> [A/inf [<D Pekka> [v [ihaile- [D Merja-]]]]]]]]]]]]]]
		Checking LF-interface conditions.
					taytyy (taytyy) is missing a mandatory complement A/inf
				että probing for CAT:T/fin failed.
			LF-interface condition(s) violated
C/fin:['!COMP:*', '!PROBE:CAT:FIN', '-ARG', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/C/fin/FIN', 'CAT:C/fin', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C/fin', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI_CHECKED', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:CAT:FIN,!COMP:*,ARG,VAL', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
taytyy:['!COMP:A/inf', '-ASP', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/FIN/MODAL/V', 'CAT:FIN', 'CAT:MODAL', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:must', 'PF:taytyy', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'ASP', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI_CHECKED']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:CAT:INF', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'ASP', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'ASP', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

C/fin: [C/fin];  D: [D, C/fin];  Pekka: [N, D, C/fin];  T/fin: [TT/fin, C/fin];  __: [D, TT/fin, C/fin];  __: [N, D, TT/fin, C/fin];  taytyy: [V, TT/fin, C/fin];  T/fin: [TT/fin, V, TT/fin, C/fin];  sano-: [V, TT/fin, V, TT/fin, C/fin];  että: [, V, TT/fin, V, TT/fin, C/fin];  D: [D, , V, TT/fin, V, TT/fin, C/fin];  Pekka: [N, D, , V, TT/fin, V, TT/fin, C/fin];  A/inf: [INF, , V, TT/fin, V, TT/fin, C/fin];  __: [D, INF, , V, TT/fin, V, TT/fin, C/fin];  __: [N, D, INF, , V, TT/fin, V, TT/fin, C/fin];  v: [v, INF, , V, TT/fin, V, TT/fin, C/fin];  ihaile-: [V, v, INF, , V, TT/fin, V, TT/fin, C/fin];  D: [D, V, v, INF, , V, TT/fin, V, TT/fin, C/fin];  Merja-: [N, D, V, v, INF, , V, TT/fin, V, TT/fin, C/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D Pekka] A/inf{v,V}] D]
				1. Head movement reconstruction:
				=[[D Pekka] [A/inf [v ihaile-]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
				=[[D Pekka] [A/inf [v ihaile-]]]
				3. Extraposition:
				=[[D Pekka] [A/inf [v ihaile-]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [CAT:INF]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:17 [A/inf [<DP>:17 [v ihaile-]]]]
				=[<D Pekka>:17 [A/inf [<DP>:17 [v ihaile-]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:17 [A/inf [<DP>:17 [v ihaile-]]]]
				6. Agreement reconstruction:
					A/inf acquired PHI:NUM:SG by phi-Agree from <DP>:17.
					A/inf acquired PHI:PER:3 by phi-Agree from <DP>:17.
				=[<D Pekka>:17 [A/inf [<DP>:17 [v ihaile-]]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
			=[C/fin{TT/fin,V} [[D Pekka] [T/fin{V} [että [[<D Pekka>:17 [A/inf [<DP>:17 [v ihaile-]]]] D]]]]]

37.
		Consume "Merja-"

		[C/fin{TT/fin,V} [[D Pekka] [T/fin{V} [että [[<D Pekka> [A/inf [<D Pekka> [v ihaile-]]]] D]]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merja-]
			=[C/fin{TT/fin,V} [[D Pekka] [T/fin{V} [että [[<D Pekka>:17 [A/inf [<DP>:17 [v ihaile-]]]] D{N}]]]]]

38.
	>>>	Trying candidate parse [C/fin{TT/fin,V} [[D Pekka] [T/fin{V} [että [[<D Pekka> [A/inf [<D Pekka> [v ihaile-]]]] D{N}]]]]] (2.)
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[C/fin [[D Pekka] [T/fin [taytyy [T/fin [sano- [että [[<D Pekka>:17 [A/inf [<DP>:17 [v ihaile-]]]] [D Merja-]]]]]]]]]
				2. Feature processing:
				=[C/fin [[D Pekka] [T/fin [taytyy [T/fin [sano- [että [[<D Pekka>:17 [A/inf [<DP>:17 [v ihaile-]]]] [D Merja-]]]]]]]]]
				3. Extraposition:
				=[C/fin [[D Pekka] [T/fin [taytyy [T/fin [sano- [että [[<D Pekka>:17 [A/inf [<DP>:17 [v ihaile-]]]] [D Merja-]]]]]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [!COMP:*][ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [C/fin [<D Pekka>:18 [T/fin [<DP>:18 [taytyy [T/fin [sano- [että [[<D Pekka>:17 [A/inf [<DP>:17 [v ihaile-]]]] [D Merja-]]]]]]]]]]
					D at the right failed to tail [-VAL][ARG]
					<D Merja-> was made an adjunct.
					<D Merja-> is transferred to LF as a phase.
					Dropping <D Merja->
					 = [C/fin [<D Pekka>:18 [T/fin [<DP>:18 [taytyy [T/fin [sano- [että [[<D Pekka>:17 [A/inf [<DP>:17 [v [<DP>:19 ihaile-]]]]] <D Merja->:19]]]]]]]]]
				=[C/fin [<D Pekka>:18 [T/fin [<DP>:18 [taytyy [T/fin [sano- [että [[<D Pekka>:17 [A/inf [<DP>:17 [v [<DP>:19 ihaile-]]]]] <D Merja->:19]]]]]]]]]
				5. Phrasal movement reconstruction:
				=[C/fin [<D Pekka>:18 [T/fin [<DP>:18 [taytyy [T/fin [sano- [että [[<D Pekka>:17 [A/inf [<DP>:17 [v [<DP>:19 ihaile-]]]]] <D Merja->:19]]]]]]]]]
				6. Agreement reconstruction:
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
					T/fin acquired PHI:DET:DEF by phi-Agree from <DP>:18.
					T/fin acquired PHI:NUM:SG from the edge of T/fin.
					T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[C/fin [<D Pekka>:18 [T/fin [<DP>:18 [taytyy [T/fin [sano- [että [[<D Pekka>:17 [A/inf [<DP>:17 [v [<DP>:19 ihaile-]]]]] <D Merja->:19]]]]]]]]]
				7. Last resort extraposition:
					taytyy (taytyy) is missing a mandatory complement A/inf
				että probing for CAT:T/fin failed.
					Last resort extraposition will be tried on [C/fin [<D Pekka>:18 [T/fin [<DP>:18 [taytyy [T/fin [sano- [että [[<D Pekka>:17 [A/inf [<DP>:17 [v [<DP>:19 ihaile-]]]]] <D Merja->:19]]]]]]]]].
					No suitable node for extraposition found; no action was taken.
			= [C/fin [<D Pekka> [T/fin [<D Pekka> [taytyy [T/fin [sano- [että [[<D Pekka> [A/inf [<D Pekka> [v [<D Merja-> ihaile-]]]]] <D Merja->]]]]]]]]]
		Checking LF-interface conditions.
					taytyy (taytyy) is missing a mandatory complement A/inf
				että probing for CAT:T/fin failed.
			LF-interface condition(s) violated
C/fin:['!COMP:*', '!PROBE:CAT:FIN', '-ARG', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/C/fin/FIN', 'CAT:C/fin', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C/fin', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI_CHECKED', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:CAT:FIN,!COMP:*,ARG,VAL', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
taytyy:['!COMP:A/inf', '-ASP', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/FIN/MODAL/V', 'CAT:FIN', 'CAT:MODAL', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:must', 'PF:taytyy', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'ASP', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
että:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:että']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI_CHECKED']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:CAT:INF', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'ASP', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'ASP', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

C/fin: [C/fin];  D: [D, C/fin];  Pekka: [N, D, C/fin];  T/fin: [TT/fin, C/fin];  __: [D, TT/fin, C/fin];  __: [N, D, TT/fin, C/fin];  taytyy: [V, TT/fin, C/fin];  T/fin: [TT/fin, V, TT/fin, C/fin];  sano-: [V, TT/fin, V, TT/fin, C/fin];  että: [, V, TT/fin, V, TT/fin, C/fin];  D: [D, , V, TT/fin, V, TT/fin, C/fin];  Pekka: [N, D, , V, TT/fin, V, TT/fin, C/fin];  A/inf: [INF, , V, TT/fin, V, TT/fin, C/fin];  __: [D, INF, , V, TT/fin, V, TT/fin, C/fin];  __: [N, D, INF, , V, TT/fin, V, TT/fin, C/fin];  v: [v, INF, , V, TT/fin, V, TT/fin, C/fin];  __: [D, v, INF, , V, TT/fin, V, TT/fin, C/fin];  __: [N, D, v, INF, , V, TT/fin, V, TT/fin, C/fin];  ihaile-: [V, v, INF, , V, TT/fin, V, TT/fin, C/fin];  D: [D, , V, TT/fin, V, TT/fin, C/fin];  Merja-: [N, D, , V, TT/fin, V, TT/fin, C/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "par$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihailla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "gen$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "etta".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sano-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sanoo".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "tayty-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "taytyy".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "taytyy#C/op".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
